/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.38
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CyberSource);
  }
}(this, function(expect, CyberSource) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CyberSource.Tmsv2TokenizedCard();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Tmsv2TokenizedCard', function() {
    it('should create an instance of Tmsv2TokenizedCard', function() {
      // uncomment below and update the code to test Tmsv2TokenizedCard
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be.a(CyberSource.Tmsv2TokenizedCard);
    });

    it('should have the property links (base name: "_links")', function() {
      // uncomment below and update the code to test the property links
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property _object (base name: "object")', function() {
      // uncomment below and update the code to test the property _object
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property accountReferenceId (base name: "accountReferenceId")', function() {
      // uncomment below and update the code to test the property accountReferenceId
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property consumerId (base name: "consumerId")', function() {
      // uncomment below and update the code to test the property consumerId
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property createInstrumentIdentifier (base name: "createInstrumentIdentifier")', function() {
      // uncomment below and update the code to test the property createInstrumentIdentifier
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property reason (base name: "reason")', function() {
      // uncomment below and update the code to test the property reason
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property _number (base name: "number")', function() {
      // uncomment below and update the code to test the property _number
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property cryptogram (base name: "cryptogram")', function() {
      // uncomment below and update the code to test the property cryptogram
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property securityCode (base name: "securityCode")', function() {
      // uncomment below and update the code to test the property securityCode
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property eci (base name: "eci")', function() {
      // uncomment below and update the code to test the property eci
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property requestorId (base name: "requestorId")', function() {
      // uncomment below and update the code to test the property requestorId
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property enrollmentId (base name: "enrollmentId")', function() {
      // uncomment below and update the code to test the property enrollmentId
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property tokenReferenceId (base name: "tokenReferenceId")', function() {
      // uncomment below and update the code to test the property tokenReferenceId
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property paymentAccountReference (base name: "paymentAccountReference")', function() {
      // uncomment below and update the code to test the property paymentAccountReference
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property card (base name: "card")', function() {
      // uncomment below and update the code to test the property card
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property passcode (base name: "passcode")', function() {
      // uncomment below and update the code to test the property passcode
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instane = new CyberSource.Tmsv2TokenizedCard();
      //expect(instance).to.be();
    });

  });

}));
