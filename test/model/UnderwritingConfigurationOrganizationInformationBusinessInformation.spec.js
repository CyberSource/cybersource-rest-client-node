/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.38
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CyberSource);
  }
}(this, function(expect, CyberSource) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UnderwritingConfigurationOrganizationInformationBusinessInformation', function() {
    it('should create an instance of UnderwritingConfigurationOrganizationInformationBusinessInformation', function() {
      // uncomment below and update the code to test UnderwritingConfigurationOrganizationInformationBusinessInformation
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be.a(CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation);
    });

    it('should have the property businessIdentifier (base name: "businessIdentifier")', function() {
      // uncomment below and update the code to test the property businessIdentifier
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property countryRegistration (base name: "countryRegistration")', function() {
      // uncomment below and update the code to test the property countryRegistration
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property legalName (base name: "legalName")', function() {
      // uncomment below and update the code to test the property legalName
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property doingBusinessAs (base name: "doingBusinessAs")', function() {
      // uncomment below and update the code to test the property doingBusinessAs
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property businessDescription (base name: "businessDescription")', function() {
      // uncomment below and update the code to test the property businessDescription
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property registrationNumber (base name: "registrationNumber")', function() {
      // uncomment below and update the code to test the property registrationNumber
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property stockExchange (base name: "stockExchange")', function() {
      // uncomment below and update the code to test the property stockExchange
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property tickerSymbol (base name: "tickerSymbol")', function() {
      // uncomment below and update the code to test the property tickerSymbol
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property merchantCategoryCode (base name: "merchantCategoryCode")', function() {
      // uncomment below and update the code to test the property merchantCategoryCode
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property mccDescription (base name: "mccDescription")', function() {
      // uncomment below and update the code to test the property mccDescription
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property websiteURL (base name: "websiteURL")', function() {
      // uncomment below and update the code to test the property websiteURL
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property businessType (base name: "businessType")', function() {
      // uncomment below and update the code to test the property businessType
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property localMCC (base name: "localMCC")', function() {
      // uncomment below and update the code to test the property localMCC
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property countryPhoneNumber (base name: "countryPhoneNumber")', function() {
      // uncomment below and update the code to test the property countryPhoneNumber
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property whatYourCompanyDoes (base name: "whatYourCompanyDoes")', function() {
      // uncomment below and update the code to test the property whatYourCompanyDoes
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property tradingAddress (base name: "tradingAddress")', function() {
      // uncomment below and update the code to test the property tradingAddress
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property businessContact (base name: "businessContact")', function() {
      // uncomment below and update the code to test the property businessContact
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property businessDetails (base name: "businessDetails")', function() {
      // uncomment below and update the code to test the property businessDetails
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property ownerInformation (base name: "ownerInformation")', function() {
      // uncomment below and update the code to test the property ownerInformation
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

    it('should have the property directorInformation (base name: "directorInformation")', function() {
      // uncomment below and update the code to test the property directorInformation
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformation();
      //expect(instance).to.be();
    });

  });

}));
