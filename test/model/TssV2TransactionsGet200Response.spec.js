/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CyberSource);
  }
}(this, function(expect, CyberSource) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CyberSource.TssV2TransactionsGet200Response();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TssV2TransactionsGet200Response', function() {
    it('should create an instance of TssV2TransactionsGet200Response', function() {
      // uncomment below and update the code to test TssV2TransactionsGet200Response
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be.a(CyberSource.TssV2TransactionsGet200Response);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property rootId (base name: "rootId")', function() {
      // uncomment below and update the code to test the property rootId
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property reconciliationId (base name: "reconciliationId")', function() {
      // uncomment below and update the code to test the property reconciliationId
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property merchantId (base name: "merchantId")', function() {
      // uncomment below and update the code to test the property merchantId
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property submitTimeUTC (base name: "submitTimeUTC")', function() {
      // uncomment below and update the code to test the property submitTimeUTC
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property applicationInformation (base name: "applicationInformation")', function() {
      // uncomment below and update the code to test the property applicationInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property buyerInformation (base name: "buyerInformation")', function() {
      // uncomment below and update the code to test the property buyerInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property clientReferenceInformation (base name: "clientReferenceInformation")', function() {
      // uncomment below and update the code to test the property clientReferenceInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property consumerAuthenticationInformation (base name: "consumerAuthenticationInformation")', function() {
      // uncomment below and update the code to test the property consumerAuthenticationInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property deviceInformation (base name: "deviceInformation")', function() {
      // uncomment below and update the code to test the property deviceInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property errorInformation (base name: "errorInformation")', function() {
      // uncomment below and update the code to test the property errorInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property installmentInformation (base name: "installmentInformation")', function() {
      // uncomment below and update the code to test the property installmentInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property fraudMarkingInformation (base name: "fraudMarkingInformation")', function() {
      // uncomment below and update the code to test the property fraudMarkingInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property healthCareInformation (base name: "healthCareInformation")', function() {
      // uncomment below and update the code to test the property healthCareInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property merchantDefinedInformation (base name: "merchantDefinedInformation")', function() {
      // uncomment below and update the code to test the property merchantDefinedInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property merchantInformation (base name: "merchantInformation")', function() {
      // uncomment below and update the code to test the property merchantInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property orderInformation (base name: "orderInformation")', function() {
      // uncomment below and update the code to test the property orderInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property paymentInformation (base name: "paymentInformation")', function() {
      // uncomment below and update the code to test the property paymentInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property paymentInsightsInformation (base name: "paymentInsightsInformation")', function() {
      // uncomment below and update the code to test the property paymentInsightsInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property payoutOptions (base name: "payoutOptions")', function() {
      // uncomment below and update the code to test the property payoutOptions
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property processingInformation (base name: "processingInformation")', function() {
      // uncomment below and update the code to test the property processingInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property processorInformation (base name: "processorInformation")', function() {
      // uncomment below and update the code to test the property processorInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property pointOfSaleInformation (base name: "pointOfSaleInformation")', function() {
      // uncomment below and update the code to test the property pointOfSaleInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property riskInformation (base name: "riskInformation")', function() {
      // uncomment below and update the code to test the property riskInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property senderInformation (base name: "senderInformation")', function() {
      // uncomment below and update the code to test the property senderInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property tokenInformation (base name: "tokenInformation")', function() {
      // uncomment below and update the code to test the property tokenInformation
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "_links")', function() {
      // uncomment below and update the code to test the property links
      //var instane = new CyberSource.TssV2TransactionsGet200Response();
      //expect(instance).to.be();
    });

  });

}));
