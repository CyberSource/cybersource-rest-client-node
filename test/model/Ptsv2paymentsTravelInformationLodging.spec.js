/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CyberSource);
  }
}(this, function(expect, CyberSource) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CyberSource.Ptsv2paymentsTravelInformationLodging();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Ptsv2paymentsTravelInformationLodging', function() {
    it('should create an instance of Ptsv2paymentsTravelInformationLodging', function() {
      // uncomment below and update the code to test Ptsv2paymentsTravelInformationLodging
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be.a(CyberSource.Ptsv2paymentsTravelInformationLodging);
    });

    it('should have the property checkInDate (base name: "checkInDate")', function() {
      // uncomment below and update the code to test the property checkInDate
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property checkOutDate (base name: "checkOutDate")', function() {
      // uncomment below and update the code to test the property checkOutDate
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property room (base name: "room")', function() {
      // uncomment below and update the code to test the property room
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property smokingPreference (base name: "smokingPreference")', function() {
      // uncomment below and update the code to test the property smokingPreference
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property numberOfRooms (base name: "numberOfRooms")', function() {
      // uncomment below and update the code to test the property numberOfRooms
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property numberOfGuests (base name: "numberOfGuests")', function() {
      // uncomment below and update the code to test the property numberOfGuests
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property roomBedType (base name: "roomBedType")', function() {
      // uncomment below and update the code to test the property roomBedType
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property roomTaxType (base name: "roomTaxType")', function() {
      // uncomment below and update the code to test the property roomTaxType
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property roomRateType (base name: "roomRateType")', function() {
      // uncomment below and update the code to test the property roomRateType
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property guestName (base name: "guestName")', function() {
      // uncomment below and update the code to test the property guestName
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property customerServicePhoneNumber (base name: "customerServicePhoneNumber")', function() {
      // uncomment below and update the code to test the property customerServicePhoneNumber
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property corporateClientCode (base name: "corporateClientCode")', function() {
      // uncomment below and update the code to test the property corporateClientCode
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property additionalDiscountAmount (base name: "additionalDiscountAmount")', function() {
      // uncomment below and update the code to test the property additionalDiscountAmount
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property roomLocation (base name: "roomLocation")', function() {
      // uncomment below and update the code to test the property roomLocation
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property specialProgramCode (base name: "specialProgramCode")', function() {
      // uncomment below and update the code to test the property specialProgramCode
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property totalTaxAmount (base name: "totalTaxAmount")', function() {
      // uncomment below and update the code to test the property totalTaxAmount
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property prepaidCost (base name: "prepaidCost")', function() {
      // uncomment below and update the code to test the property prepaidCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property foodAndBeverageCost (base name: "foodAndBeverageCost")', function() {
      // uncomment below and update the code to test the property foodAndBeverageCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property roomTaxAmount (base name: "roomTaxAmount")', function() {
      // uncomment below and update the code to test the property roomTaxAmount
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentAmount (base name: "adjustmentAmount")', function() {
      // uncomment below and update the code to test the property adjustmentAmount
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property phoneCost (base name: "phoneCost")', function() {
      // uncomment below and update the code to test the property phoneCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property restaurantCost (base name: "restaurantCost")', function() {
      // uncomment below and update the code to test the property restaurantCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property roomServiceCost (base name: "roomServiceCost")', function() {
      // uncomment below and update the code to test the property roomServiceCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property miniBarCost (base name: "miniBarCost")', function() {
      // uncomment below and update the code to test the property miniBarCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property laundryCost (base name: "laundryCost")', function() {
      // uncomment below and update the code to test the property laundryCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property miscellaneousCost (base name: "miscellaneousCost")', function() {
      // uncomment below and update the code to test the property miscellaneousCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property giftShopCost (base name: "giftShopCost")', function() {
      // uncomment below and update the code to test the property giftShopCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property movieCost (base name: "movieCost")', function() {
      // uncomment below and update the code to test the property movieCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property healthClubCost (base name: "healthClubCost")', function() {
      // uncomment below and update the code to test the property healthClubCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property valetParkingCost (base name: "valetParkingCost")', function() {
      // uncomment below and update the code to test the property valetParkingCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property cashDisbursementCost (base name: "cashDisbursementCost")', function() {
      // uncomment below and update the code to test the property cashDisbursementCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property nonRoomCost (base name: "nonRoomCost")', function() {
      // uncomment below and update the code to test the property nonRoomCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property businessCenterCost (base name: "businessCenterCost")', function() {
      // uncomment below and update the code to test the property businessCenterCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property loungeBarCost (base name: "loungeBarCost")', function() {
      // uncomment below and update the code to test the property loungeBarCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property transportationCost (base name: "transportationCost")', function() {
      // uncomment below and update the code to test the property transportationCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property gratuityAmount (base name: "gratuityAmount")', function() {
      // uncomment below and update the code to test the property gratuityAmount
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property conferenceRoomCost (base name: "conferenceRoomCost")', function() {
      // uncomment below and update the code to test the property conferenceRoomCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property audioVisualCost (base name: "audioVisualCost")', function() {
      // uncomment below and update the code to test the property audioVisualCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property banquestCost (base name: "banquestCost")', function() {
      // uncomment below and update the code to test the property banquestCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property nonRoomTaxAmount (base name: "nonRoomTaxAmount")', function() {
      // uncomment below and update the code to test the property nonRoomTaxAmount
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property earlyCheckOutCost (base name: "earlyCheckOutCost")', function() {
      // uncomment below and update the code to test the property earlyCheckOutCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

    it('should have the property internetAccessCost (base name: "internetAccessCost")', function() {
      // uncomment below and update the code to test the property internetAccessCost
      //var instane = new CyberSource.Ptsv2paymentsTravelInformationLodging();
      //expect(instance).to.be();
    });

  });

}));
