/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CyberSource);
  }
}(this, function(expect, CyberSource) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults', function() {
    it('should create an instance of PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults', function() {
      // uncomment below and update the code to test PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be.a(CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults);
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property codeRaw (base name: "codeRaw")', function() {
      // uncomment below and update the code to test the property codeRaw
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property emailRaw (base name: "emailRaw")', function() {
      // uncomment below and update the code to test the property emailRaw
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumberRaw (base name: "phoneNumberRaw")', function() {
      // uncomment below and update the code to test the property phoneNumberRaw
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postalCode")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property postalCodeRaw (base name: "postalCodeRaw")', function() {
      // uncomment below and update the code to test the property postalCodeRaw
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property street (base name: "street")', function() {
      // uncomment below and update the code to test the property street
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property streetRaw (base name: "streetRaw")', function() {
      // uncomment below and update the code to test the property streetRaw
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property nameRaw (base name: "nameRaw")', function() {
      // uncomment below and update the code to test the property nameRaw
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property firstNameRaw (base name: "firstNameRaw")', function() {
      // uncomment below and update the code to test the property firstNameRaw
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property middleNameRaw (base name: "middleNameRaw")', function() {
      // uncomment below and update the code to test the property middleNameRaw
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property middleName (base name: "middleName")', function() {
      // uncomment below and update the code to test the property middleName
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property lastNameRaw (base name: "lastNameRaw")', function() {
      // uncomment below and update the code to test the property lastNameRaw
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instane = new CyberSource.PtsV2PaymentsPost201ResponseProcessorInformationElectronicVerificationResults();
      //expect(instance).to.be();
    });

  });

}));
