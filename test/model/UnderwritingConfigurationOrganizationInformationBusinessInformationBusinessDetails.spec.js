/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.38
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CyberSource);
  }
}(this, function(expect, CyberSource) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails', function() {
    it('should create an instance of UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails', function() {
      // uncomment below and update the code to test UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be.a(CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails);
    });

    it('should have the property customerType (base name: "customerType")', function() {
      // uncomment below and update the code to test the property customerType
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property percentageSplitByB2B (base name: "percentageSplitByB2B")', function() {
      // uncomment below and update the code to test the property percentageSplitByB2B
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property percentageSplitByB2C (base name: "percentageSplitByB2C")', function() {
      // uncomment below and update the code to test the property percentageSplitByB2C
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property interactionTypes (base name: "interactionTypes")', function() {
      // uncomment below and update the code to test the property interactionTypes
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property percentageSplitByF2F (base name: "percentageSplitByF2F")', function() {
      // uncomment below and update the code to test the property percentageSplitByF2F
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property percentageSplitByCNP (base name: "percentageSplitByCNP")', function() {
      // uncomment below and update the code to test the property percentageSplitByCNP
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property whenIsCustomerCharged (base name: "whenIsCustomerCharged")', function() {
      // uncomment below and update the code to test the property whenIsCustomerCharged
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property whenIsCustomerChargedDescription (base name: "whenIsCustomerChargedDescription")', function() {
      // uncomment below and update the code to test the property whenIsCustomerChargedDescription
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property offerSubscriptions (base name: "offerSubscriptions")', function() {
      // uncomment below and update the code to test the property offerSubscriptions
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property monthlySubscriptionPercent (base name: "monthlySubscriptionPercent")', function() {
      // uncomment below and update the code to test the property monthlySubscriptionPercent
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property quarterlySubscriptionPercent (base name: "quarterlySubscriptionPercent")', function() {
      // uncomment below and update the code to test the property quarterlySubscriptionPercent
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property semiannualSubscriptionPercent (base name: "semiannualSubscriptionPercent")', function() {
      // uncomment below and update the code to test the property semiannualSubscriptionPercent
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property annualSubscriptionPercent (base name: "annualSubscriptionPercent")', function() {
      // uncomment below and update the code to test the property annualSubscriptionPercent
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property currencyType (base name: "currencyType")', function() {
      // uncomment below and update the code to test the property currencyType
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property estimatedMonthlySales (base name: "estimatedMonthlySales")', function() {
      // uncomment below and update the code to test the property estimatedMonthlySales
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property averageOrderAmount (base name: "averageOrderAmount")', function() {
      // uncomment below and update the code to test the property averageOrderAmount
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property largestExpectedOrderAmount (base name: "largestExpectedOrderAmount")', function() {
      // uncomment below and update the code to test the property largestExpectedOrderAmount
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property primaryAccountUsage (base name: "primaryAccountUsage")', function() {
      // uncomment below and update the code to test the property primaryAccountUsage
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property sourceOfFunds (base name: "sourceOfFunds")', function() {
      // uncomment below and update the code to test the property sourceOfFunds
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property receiveMoney3rdParties (base name: "receiveMoney3rdParties")', function() {
      // uncomment below and update the code to test the property receiveMoney3rdParties
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property receiveTransactionFrequency (base name: "receiveTransactionFrequency")', function() {
      // uncomment below and update the code to test the property receiveTransactionFrequency
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property estimatedMonthlySpend (base name: "estimatedMonthlySpend")', function() {
      // uncomment below and update the code to test the property estimatedMonthlySpend
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property countryTransactions (base name: "countryTransactions")', function() {
      // uncomment below and update the code to test the property countryTransactions
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property currenciesIn (base name: "currenciesIn")', function() {
      // uncomment below and update the code to test the property currenciesIn
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property currenciesOut (base name: "currenciesOut")', function() {
      // uncomment below and update the code to test the property currenciesOut
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

    it('should have the property productServicesSubscription (base name: "productServicesSubscription")', function() {
      // uncomment below and update the code to test the property productServicesSubscription
      //var instane = new CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationBusinessDetails();
      //expect(instance).to.be();
    });

  });

}));
