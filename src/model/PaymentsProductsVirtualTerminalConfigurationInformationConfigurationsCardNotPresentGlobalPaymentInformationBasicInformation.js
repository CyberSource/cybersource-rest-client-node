/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation model module.
   * @module model/PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation</code>.
   * @alias module:model/PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation} obj Optional instance to populate.
   * @return {module:model/PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation} The populated <code>PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('defaultStandardEntryClassCode')) {
        obj['defaultStandardEntryClassCode'] = ApiClient.convertToType(data['defaultStandardEntryClassCode'], 'String');
      }
      if (data.hasOwnProperty('defaultCountryCode')) {
        obj['defaultCountryCode'] = ApiClient.convertToType(data['defaultCountryCode'], 'String');
      }
      if (data.hasOwnProperty('defaultCurrencyCode')) {
        obj['defaultCurrencyCode'] = ApiClient.convertToType(data['defaultCurrencyCode'], 'String');
      }
      if (data.hasOwnProperty('defaultTransactionType')) {
        obj['defaultTransactionType'] = ApiClient.convertToType(data['defaultTransactionType'], 'String');
      }
      if (data.hasOwnProperty('defaultPaymentType')) {
        obj['defaultPaymentType'] = ApiClient.convertToType(data['defaultPaymentType'], 'String');
      }
      if (data.hasOwnProperty('defaultTransactionSource')) {
        obj['defaultTransactionSource'] = ApiClient.convertToType(data['defaultTransactionSource'], 'String');
      }
      if (data.hasOwnProperty('displayRetail')) {
        obj['displayRetail'] = ApiClient.convertToType(data['displayRetail'], 'Boolean');
      }
      if (data.hasOwnProperty('displayMoto')) {
        obj['displayMoto'] = ApiClient.convertToType(data['displayMoto'], 'Boolean');
      }
      if (data.hasOwnProperty('displayInternet')) {
        obj['displayInternet'] = ApiClient.convertToType(data['displayInternet'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {String} defaultStandardEntryClassCode
   */
  exports.prototype['defaultStandardEntryClassCode'] = undefined;
  /**
   * ISO 4217 format
   * @member {String} defaultCountryCode
   */
  exports.prototype['defaultCountryCode'] = undefined;
  /**
   * Three-character [ISO Standard Currency Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf)
   * @member {String} defaultCurrencyCode
   */
  exports.prototype['defaultCurrencyCode'] = undefined;
  /**
   * @member {module:model/PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation.DefaultTransactionTypeEnum} defaultTransactionType
   */
  exports.prototype['defaultTransactionType'] = undefined;
  /**
   * @member {module:model/PaymentsProductsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationBasicInformation.DefaultPaymentTypeEnum} defaultPaymentType
   */
  exports.prototype['defaultPaymentType'] = undefined;
  /**
   * @member {String} defaultTransactionSource
   */
  exports.prototype['defaultTransactionSource'] = undefined;
  /**
   * @member {Boolean} displayRetail
   */
  exports.prototype['displayRetail'] = undefined;
  /**
   * @member {Boolean} displayMoto
   */
  exports.prototype['displayMoto'] = undefined;
  /**
   * @member {Boolean} displayInternet
   */
  exports.prototype['displayInternet'] = undefined;


  /**
   * Allowed values for the <code>defaultTransactionType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DefaultTransactionTypeEnum = {
    /**
     * value: "AUTHORIZATION"
     * @const
     */
    "AUTHORIZATION": "AUTHORIZATION",
    /**
     * value: "SALE"
     * @const
     */
    "SALE": "SALE"  };

  /**
   * Allowed values for the <code>defaultPaymentType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DefaultPaymentTypeEnum = {
    /**
     * value: "CREDIT_CARD"
     * @const
     */
    "CREDIT_CARD": "CREDIT_CARD",
    /**
     * value: "ECHECK"
     * @const
     */
    "ECHECK": "ECHECK"  };


  return exports;
}));


