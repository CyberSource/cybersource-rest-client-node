/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.KeyParameters = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The KeyParameters model module.
   * @module model/KeyParameters
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>KeyParameters</code>.
   * @alias module:model/KeyParameters
   * @class
   * @param encryptionType {String} How the card number should be encrypted in the subsequent Tokenize Card request. Possible values are RsaOaep256 or None (if using this value the card number must be in plain text when included in the Tokenize Card request). The Tokenize Card request uses a secure connection (TLS 1.2+) regardless of what encryption type is specified.
   */
  var exports = function(encryptionType) {
    var _this = this;

    _this['encryptionType'] = encryptionType;

  };

  /**
   * Constructs a <code>KeyParameters</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/KeyParameters} obj Optional instance to populate.
   * @return {module:model/KeyParameters} The populated <code>KeyParameters</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('encryptionType')) {
        obj['encryptionType'] = ApiClient.convertToType(data['encryptionType'], 'String');
      }
      if (data.hasOwnProperty('targetOrigin')) {
        obj['targetOrigin'] = ApiClient.convertToType(data['targetOrigin'], 'String');
      }
    }
    return obj;
  }

  /**
   * How the card number should be encrypted in the subsequent Tokenize Card request. Possible values are RsaOaep256 or None (if using this value the card number must be in plain text when included in the Tokenize Card request). The Tokenize Card request uses a secure connection (TLS 1.2+) regardless of what encryption type is specified.
   * @member {String} encryptionType
   */
  exports.prototype['encryptionType'] = undefined;
  /**
   * The merchant origin (e.g. https://example.com) used to integrate with Flex API. Required to comply with CORS and CSP standards.
   * @member {String} targetOrigin
   */
  exports.prototype['targetOrigin'] = undefined;



  return exports;
}));


