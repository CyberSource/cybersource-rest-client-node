/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.PaymentsProductsCardProcessingConfigurationInformationConfigurationsCommonAcquirer = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The PaymentsProductsCardProcessingConfigurationInformationConfigurationsCommonAcquirer model module.
   * @module model/PaymentsProductsCardProcessingConfigurationInformationConfigurationsCommonAcquirer
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>PaymentsProductsCardProcessingConfigurationInformationConfigurationsCommonAcquirer</code>.
   * Identifies the financial institution acting as the acquirer of this customer transaction. The acquirer is the member or system user that signed the merchant.
   * @alias module:model/PaymentsProductsCardProcessingConfigurationInformationConfigurationsCommonAcquirer
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>PaymentsProductsCardProcessingConfigurationInformationConfigurationsCommonAcquirer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PaymentsProductsCardProcessingConfigurationInformationConfigurationsCommonAcquirer} obj Optional instance to populate.
   * @return {module:model/PaymentsProductsCardProcessingConfigurationInformationConfigurationsCommonAcquirer} The populated <code>PaymentsProductsCardProcessingConfigurationInformationConfigurationsCommonAcquirer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('institutionId')) {
        obj['institutionId'] = ApiClient.convertToType(data['institutionId'], 'String');
      }
      if (data.hasOwnProperty('interbankCardAssociationId')) {
        obj['interbankCardAssociationId'] = ApiClient.convertToType(data['interbankCardAssociationId'], 'String');
      }
      if (data.hasOwnProperty('discoverInstitutionId')) {
        obj['discoverInstitutionId'] = ApiClient.convertToType(data['discoverInstitutionId'], 'String');
      }
      if (data.hasOwnProperty('countryCode')) {
        obj['countryCode'] = ApiClient.convertToType(data['countryCode'], 'String');
      }
      if (data.hasOwnProperty('fileDestinationBin')) {
        obj['fileDestinationBin'] = ApiClient.convertToType(data['fileDestinationBin'], 'String');
      }
    }
    return obj;
  }

  /**
   * Identifier of the acquirer. This number is usually assigned by Visa. Applicable for VPC, GPX (gpx), CMCIC (cmcic), EFTPOS, CB2A, CUP, American Express Direct (amexdirect) and Six (six) processors.  Validation details (for selected processors)...  <table> <thead><tr><th>Processor</th><th>Acceptance Type</th><th>Required</th><th>Min. Length</th><th>Max. Length</th><th>Regex</th><th>Default Value</th></tr></thead> <tr><td>American Express Direct</td><td>cnp, cp, hybrid</td><td>Yes</td><td>1</td><td>13</td><td>^[0-9]+$</td><td>1111</td></tr> </table> 
   * @member {String} institutionId
   */
  exports.prototype['institutionId'] = undefined;
  /**
   * Number assigned by MasterCard to banks to identify the member in transactions. Applicable for VPC and GPX (gpx) processors.
   * @member {String} interbankCardAssociationId
   */
  exports.prototype['interbankCardAssociationId'] = undefined;
  /**
   * Assigned by Discover to identify the acquirer. Applicable for VPC and GPX (gpx) processors.
   * @member {String} discoverInstitutionId
   */
  exports.prototype['discoverInstitutionId'] = undefined;
  /**
   * ISO 4217 format. Applicable for VPC, GPX (gpx), EFTPOS, RUPAY, Prisma (prisma) and CUP processors.
   * @member {String} countryCode
   */
  exports.prototype['countryCode'] = undefined;
  /**
   * The BIN to which thisÂ capturefile is sent. This field must contain a valid BIN. Applicable for VPC and GPX (gpx) processors.
   * @member {String} fileDestinationBin
   */
  exports.prototype['fileDestinationBin'] = undefined;



  return exports;
}));


