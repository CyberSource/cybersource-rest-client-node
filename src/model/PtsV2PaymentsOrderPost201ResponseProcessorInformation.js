/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.38
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection', 'model/PtsV2PaymentsPost201Response1ProcessorInformationAvs'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection'), require('./PtsV2PaymentsPost201Response1ProcessorInformationAvs'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.PtsV2PaymentsOrderPost201ResponseProcessorInformation = factory(root.CyberSource.ApiClient, root.CyberSource.PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection, root.CyberSource.PtsV2PaymentsPost201Response1ProcessorInformationAvs);
  }
}(this, function(ApiClient, PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection, PtsV2PaymentsPost201Response1ProcessorInformationAvs) {
  'use strict';




  /**
   * The PtsV2PaymentsOrderPost201ResponseProcessorInformation model module.
   * @module model/PtsV2PaymentsOrderPost201ResponseProcessorInformation
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>PtsV2PaymentsOrderPost201ResponseProcessorInformation</code>.
   * @alias module:model/PtsV2PaymentsOrderPost201ResponseProcessorInformation
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>PtsV2PaymentsOrderPost201ResponseProcessorInformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PtsV2PaymentsOrderPost201ResponseProcessorInformation} obj Optional instance to populate.
   * @return {module:model/PtsV2PaymentsOrderPost201ResponseProcessorInformation} The populated <code>PtsV2PaymentsOrderPost201ResponseProcessorInformation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('sellerProtection')) {
        obj['sellerProtection'] = PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection.constructFromObject(data['sellerProtection']);
      }
      if (data.hasOwnProperty('avs')) {
        obj['avs'] = PtsV2PaymentsPost201Response1ProcessorInformationAvs.constructFromObject(data['avs']);
      }
      if (data.hasOwnProperty('transactionId')) {
        obj['transactionId'] = ApiClient.convertToType(data['transactionId'], 'String');
      }
      if (data.hasOwnProperty('responseDetails')) {
        obj['responseDetails'] = ApiClient.convertToType(data['responseDetails'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection} sellerProtection
   */
  exports.prototype['sellerProtection'] = undefined;
  /**
   * @member {module:model/PtsV2PaymentsPost201Response1ProcessorInformationAvs} avs
   */
  exports.prototype['avs'] = undefined;
  /**
   * Network transaction identifier (TID). You can use this value to identify a specific transaction when you are discussing the transaction with your processor. Not all processors provide this value.  Returned by the authorization service.  #### PIN debit Transaction identifier generated by the processor.  Returned by PIN debit credit.  #### GPX Processor transaction ID.  #### Cielo For Cielo, this value is the non-sequential unit (NSU) and is supported for all transactions. The value is generated by Cielo or the issuing bank.  #### Comercio Latino For Comercio Latino, this value is the proof of sale or non-sequential unit (NSU) number generated by the acquirers Cielo and Rede, or the issuing bank.  #### CyberSource through VisaNet and GPN For details about this value for CyberSource through VisaNet and GPN, see \"Network Transaction Identifiers\" in [Credit Card Services Using the SCMP API.](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/)  #### Moneris This value identifies the transaction on a host system. It contains the following information: - Terminal used to process the transaction - Shift during which the transaction took place - Batch number - Transaction number within the batch You must store this value. If you give the customer a receipt, display this value on the receipt.  **Example** For the value 66012345001069003: - Terminal ID = 66012345 - Shift number = 001 - Batch number = 069 - Transaction number = 003 
   * @member {String} transactionId
   */
  exports.prototype['transactionId'] = undefined;
  /**
   * This field might contain information about a decline. This field is supported only for **CyberSource through VisaNet**. 
   * @member {String} responseDetails
   */
  exports.prototype['responseDetails'] = undefined;



  return exports;
}));


