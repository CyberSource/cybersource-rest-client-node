/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.InlineResponse2011IntegrationInformationTenantConfigurations = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The InlineResponse2011IntegrationInformationTenantConfigurations model module.
   * @module model/InlineResponse2011IntegrationInformationTenantConfigurations
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>InlineResponse2011IntegrationInformationTenantConfigurations</code>.
   * @alias module:model/InlineResponse2011IntegrationInformationTenantConfigurations
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>InlineResponse2011IntegrationInformationTenantConfigurations</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2011IntegrationInformationTenantConfigurations} obj Optional instance to populate.
   * @return {module:model/InlineResponse2011IntegrationInformationTenantConfigurations} The populated <code>InlineResponse2011IntegrationInformationTenantConfigurations</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('solutionId')) {
        obj['solutionId'] = ApiClient.convertToType(data['solutionId'], 'String');
      }
      if (data.hasOwnProperty('tenantConfigurationId')) {
        obj['tenantConfigurationId'] = ApiClient.convertToType(data['tenantConfigurationId'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('submitTimeUtc')) {
        obj['submitTimeUtc'] = ApiClient.convertToType(data['submitTimeUtc'], 'Date');
      }
    }
    return obj;
  }

  /**
   * The solutionId is the unique identifier for this system resource. Partner can use it to reference the specific solution through out the system. 
   * @member {String} solutionId
   */
  exports.prototype['solutionId'] = undefined;
  /**
   * The tenantConfigurationId is the unique identifier for this system resource. You will see various places where it must be referenced in the URI path, or when querying the hierarchy for ancestors or descendants. 
   * @member {String} tenantConfigurationId
   */
  exports.prototype['tenantConfigurationId'] = undefined;
  /**
   * @member {module:model/InlineResponse2011IntegrationInformationTenantConfigurations.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * Time of request in UTC.
   * @member {Date} submitTimeUtc
   */
  exports.prototype['submitTimeUtc'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "LIVE"
     * @const
     */
    "LIVE": "LIVE",
    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE",
    /**
     * value: "TEST"
     * @const
     */
    "TEST": "TEST"  };


  return exports;
}));


