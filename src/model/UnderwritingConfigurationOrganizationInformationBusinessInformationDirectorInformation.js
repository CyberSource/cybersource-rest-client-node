/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.38
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/UnderwritingConfigurationOrganizationInformationBusinessInformationAddress2'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./UnderwritingConfigurationOrganizationInformationBusinessInformationAddress2'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationDirectorInformation = factory(root.CyberSource.ApiClient, root.CyberSource.UnderwritingConfigurationOrganizationInformationBusinessInformationAddress2);
  }
}(this, function(ApiClient, UnderwritingConfigurationOrganizationInformationBusinessInformationAddress2) {
  'use strict';




  /**
   * The UnderwritingConfigurationOrganizationInformationBusinessInformationDirectorInformation model module.
   * @module model/UnderwritingConfigurationOrganizationInformationBusinessInformationDirectorInformation
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>UnderwritingConfigurationOrganizationInformationBusinessInformationDirectorInformation</code>.
   * @alias module:model/UnderwritingConfigurationOrganizationInformationBusinessInformationDirectorInformation
   * @class
   */
  var exports = function() {
    var _this = this;












  };

  /**
   * Constructs a <code>UnderwritingConfigurationOrganizationInformationBusinessInformationDirectorInformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UnderwritingConfigurationOrganizationInformationBusinessInformationDirectorInformation} obj Optional instance to populate.
   * @return {module:model/UnderwritingConfigurationOrganizationInformationBusinessInformationDirectorInformation} The populated <code>UnderwritingConfigurationOrganizationInformationBusinessInformationDirectorInformation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('firstName')) {
        obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
      }
      if (data.hasOwnProperty('middleName')) {
        obj['middleName'] = ApiClient.convertToType(data['middleName'], 'String');
      }
      if (data.hasOwnProperty('lastName')) {
        obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
      }
      if (data.hasOwnProperty('birthDate')) {
        obj['birthDate'] = ApiClient.convertToType(data['birthDate'], 'Date');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('phoneNumber')) {
        obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
      }
      if (data.hasOwnProperty('nationality')) {
        obj['nationality'] = ApiClient.convertToType(data['nationality'], 'String');
      }
      if (data.hasOwnProperty('nationalId')) {
        obj['nationalId'] = ApiClient.convertToType(data['nationalId'], 'String');
      }
      if (data.hasOwnProperty('idCountry')) {
        obj['idCountry'] = ApiClient.convertToType(data['idCountry'], 'String');
      }
      if (data.hasOwnProperty('passportNumber')) {
        obj['passportNumber'] = ApiClient.convertToType(data['passportNumber'], 'String');
      }
      if (data.hasOwnProperty('address')) {
        obj['address'] = UnderwritingConfigurationOrganizationInformationBusinessInformationAddress2.constructFromObject(data['address']);
      }
    }
    return obj;
  }

  /**
   * Director's first name
   * @member {String} firstName
   */
  exports.prototype['firstName'] = undefined;
  /**
   * Director's middle name
   * @member {String} middleName
   */
  exports.prototype['middleName'] = undefined;
  /**
   * Director's last name
   * @member {String} lastName
   */
  exports.prototype['lastName'] = undefined;
  /**
   * Director's date of birth. Format: YYYY-MM-DD Example 2016-08-11 equals August 11, 2016
   * @member {Date} birthDate
   */
  exports.prototype['birthDate'] = undefined;
  /**
   * Email address for Director
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * Owner's phone number
   * @member {String} phoneNumber
   */
  exports.prototype['phoneNumber'] = undefined;
  /**
   * Country of origin for the owner. Two character country code, ISO 3166-1 alpha-2.
   * @member {String} nationality
   */
  exports.prototype['nationality'] = undefined;
  /**
   * Identification value from ID document
   * @member {String} nationalId
   */
  exports.prototype['nationalId'] = undefined;
  /**
   * Country of the ID document. Two character country code, ISO 3166-1 alpha-2.
   * @member {String} idCountry
   */
  exports.prototype['idCountry'] = undefined;
  /**
   * Passport Number
   * @member {String} passportNumber
   */
  exports.prototype['passportNumber'] = undefined;
  /**
   * @member {module:model/UnderwritingConfigurationOrganizationInformationBusinessInformationAddress2} address
   */
  exports.prototype['address'] = undefined;



  return exports;
}));


