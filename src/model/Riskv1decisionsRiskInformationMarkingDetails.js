/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.Riskv1decisionsRiskInformationMarkingDetails = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Riskv1decisionsRiskInformationMarkingDetails model module.
   * @module model/Riskv1decisionsRiskInformationMarkingDetails
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>Riskv1decisionsRiskInformationMarkingDetails</code>.
   * Details for marking the transaction as either positive or negative.
   * @alias module:model/Riskv1decisionsRiskInformationMarkingDetails
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>Riskv1decisionsRiskInformationMarkingDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Riskv1decisionsRiskInformationMarkingDetails} obj Optional instance to populate.
   * @return {module:model/Riskv1decisionsRiskInformationMarkingDetails} The populated <code>Riskv1decisionsRiskInformationMarkingDetails</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('notes')) {
        obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
      }
      if (data.hasOwnProperty('reason')) {
        obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
      }
      if (data.hasOwnProperty('fieldsIncluded')) {
        obj['fieldsIncluded'] = ApiClient.convertToType(data['fieldsIncluded'], 'String');
      }
      if (data.hasOwnProperty('reportCode')) {
        obj['reportCode'] = ApiClient.convertToType(data['reportCode'], 'String');
      }
    }
    return obj;
  }

  /**
   * Notes or details that explain the reasons for adding the transaction to either the positive or negative list.
   * @member {String} notes
   */
  exports.prototype['notes'] = undefined;
  /**
   * Reason for adding the transaction to the negative list. This field can contain one of the following values: - fraud_chargeback: You have received a fraud-related chargeback for the transaction. - non_fraud_chargeback: You have received a non-fraudulent chargeback for the transaction. - suspected: You believe that you will probably receive a chargeback for the transaction. - creditback: You issued a refund to the customer to avoid a chargeback for the transaction. 
   * @member {String} reason
   */
  exports.prototype['reason'] = undefined;
  /**
   * Adds specified transaction information to the negative list. This field can contain one or more of the following values. When you specify more than one value, separate them with commas (,). - account_key_hash - customer_account_id - customer_email - customer_ipaddress - customer_phone - device_fingerprint - ship_address If no value is specified, account_key_hash, customer_email, and ship_address are used by default. Note account_key_hash adds the field that contains the card number (customer_cc_number). 
   * @member {String} fieldsIncluded
   */
  exports.prototype['fieldsIncluded'] = undefined;
  /**
   * Indicates whether to add, clear, or remove order data from the fraud history. This field can contain one of the following values: - ST: Marking reason for suspected fraud transaction; same action as Mark as Suspect link in the Business Center - CB: Marking reason for chargeback; same action as Mark as Suspect link - CM: Clear suspected fraud marking reason; same action as Clear Mark as Suspect link - VT: Remove from history 
   * @member {String} reportCode
   */
  exports.prototype['reportCode'] = undefined;



  return exports;
}));


