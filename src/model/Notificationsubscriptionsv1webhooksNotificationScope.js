/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.Notificationsubscriptionsv1webhooksNotificationScope = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Notificationsubscriptionsv1webhooksNotificationScope model module.
   * @module model/Notificationsubscriptionsv1webhooksNotificationScope
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>Notificationsubscriptionsv1webhooksNotificationScope</code>.
   * @alias module:model/Notificationsubscriptionsv1webhooksNotificationScope
   * @class
   */
  var exports = function() {
    var _this = this;



  };

  /**
   * Constructs a <code>Notificationsubscriptionsv1webhooksNotificationScope</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Notificationsubscriptionsv1webhooksNotificationScope} obj Optional instance to populate.
   * @return {module:model/Notificationsubscriptionsv1webhooksNotificationScope} The populated <code>Notificationsubscriptionsv1webhooksNotificationScope</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('scope')) {
        obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
      }
      if (data.hasOwnProperty('scopeData')) {
        obj['scopeData'] = ApiClient.convertToType(data['scopeData'], ['String']);
      }
    }
    return obj;
  }

  /**
   * The webhook scope. 1. SELF The Webhook is used to deliver webhooks for only this Organization (or Merchant). 2. DESCENDANTS The Webhook is used to deliver webhooks for this Organization and its children. 3. CUSTOM The Webhook is used to deliver webhooks for the OrgIds (or MiDs) explicitly listed in scopeData field
   * @member {String} scope
   * @default 'SELF'
   */
  exports.prototype['scope'] = 'SELF';
  /**
   * Applicable only if scope=CUSTOM. This should contains a Set of MIDs or OrgIDs for which this subscription is applicable.
   * @member {Array.<String>} scopeData
   */
  exports.prototype['scopeData'] = undefined;



  return exports;
}));


