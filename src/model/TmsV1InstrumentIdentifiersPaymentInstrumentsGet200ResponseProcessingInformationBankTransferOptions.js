/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.TmsV1InstrumentIdentifiersPaymentInstrumentsGet200ResponseProcessingInformationBankTransferOptions = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The TmsV1InstrumentIdentifiersPaymentInstrumentsGet200ResponseProcessingInformationBankTransferOptions model module.
   * @module model/TmsV1InstrumentIdentifiersPaymentInstrumentsGet200ResponseProcessingInformationBankTransferOptions
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>TmsV1InstrumentIdentifiersPaymentInstrumentsGet200ResponseProcessingInformationBankTransferOptions</code>.
   * @alias module:model/TmsV1InstrumentIdentifiersPaymentInstrumentsGet200ResponseProcessingInformationBankTransferOptions
   * @class
   */
  var exports = function() {
    var _this = this;


  };

  /**
   * Constructs a <code>TmsV1InstrumentIdentifiersPaymentInstrumentsGet200ResponseProcessingInformationBankTransferOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TmsV1InstrumentIdentifiersPaymentInstrumentsGet200ResponseProcessingInformationBankTransferOptions} obj Optional instance to populate.
   * @return {module:model/TmsV1InstrumentIdentifiersPaymentInstrumentsGet200ResponseProcessingInformationBankTransferOptions} The populated <code>TmsV1InstrumentIdentifiersPaymentInstrumentsGet200ResponseProcessingInformationBankTransferOptions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('SECCode')) {
        obj['SECCode'] = ApiClient.convertToType(data['SECCode'], 'String');
      }
    }
    return obj;
  }

  /**
   * **Important** This field is required if your processor is TeleCheck.  Code that specifies the authorization method for the transaction. Possible values:  - **CCD**: corporate cash disbursement. Charge or credit against a business checking account. You can use one-time or recurring CCD transactions to transfer funds to or from a corporate entity. A standing authorization is required for recurring transactions. - **PPD**: prearranged payment and deposit entry. Charge or credit against a personal checking or savings account. You can originate a PPD entry only when the payment and deposit terms between you and the customer are prearranged. A written authorization from the customer is required for one-time transactions and a written standing authorization is required for recurring transactions. - **TEL**: telephone-initiated entry. One-time charge against a personal checking or savings account. You can originate a TEL entry only when there is a business relationship between you and the customer or when the customer initiates a telephone call to you. For a TEL entry, you must obtain a payment authorization from the customer over the telephone. There is no recurring billing option for TEL. - **WEB**: internet-initiated entryâ€”charge against a personal checking or savings account. You can originate a one-time or recurring WEB entry when the customer initiates the transaction over the Internet. For a WEB entry, you must obtain payment authorization from the customer over the Internet. 
   * @member {module:model/TmsV1InstrumentIdentifiersPaymentInstrumentsGet200ResponseProcessingInformationBankTransferOptions.SECCodeEnum} SECCode
   */
  exports.prototype['SECCode'] = undefined;


  /**
   * Allowed values for the <code>SECCode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SECCodeEnum = {
    /**
     * value: "CCD"
     * @const
     */
    "CCD": "CCD",
    /**
     * value: "PPD"
     * @const
     */
    "PPD": "PPD",
    /**
     * value: "TEL"
     * @const
     */
    "TEL": "TEL",
    /**
     * value: "WEB"
     * @const
     */
    "WEB": "WEB"  };


  return exports;
}));


