/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.38
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse2012SetupsPaymentsAlternativePaymentMethods', 'model/InlineResponse2012SetupsPaymentsCardProcessing', 'model/InlineResponse2012SetupsPaymentsDigitalPayments'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InlineResponse2012SetupsPaymentsAlternativePaymentMethods'), require('./InlineResponse2012SetupsPaymentsCardProcessing'), require('./InlineResponse2012SetupsPaymentsDigitalPayments'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.InlineResponse2012SetupsPayments = factory(root.CyberSource.ApiClient, root.CyberSource.InlineResponse2012SetupsPaymentsAlternativePaymentMethods, root.CyberSource.InlineResponse2012SetupsPaymentsCardProcessing, root.CyberSource.InlineResponse2012SetupsPaymentsDigitalPayments);
  }
}(this, function(ApiClient, InlineResponse2012SetupsPaymentsAlternativePaymentMethods, InlineResponse2012SetupsPaymentsCardProcessing, InlineResponse2012SetupsPaymentsDigitalPayments) {
  'use strict';




  /**
   * The InlineResponse2012SetupsPayments model module.
   * @module model/InlineResponse2012SetupsPayments
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>InlineResponse2012SetupsPayments</code>.
   * @alias module:model/InlineResponse2012SetupsPayments
   * @class
   */
  var exports = function() {
    var _this = this;




















  };

  /**
   * Constructs a <code>InlineResponse2012SetupsPayments</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2012SetupsPayments} obj Optional instance to populate.
   * @return {module:model/InlineResponse2012SetupsPayments} The populated <code>InlineResponse2012SetupsPayments</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('cardProcessing')) {
        obj['cardProcessing'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['cardProcessing']);
      }
      if (data.hasOwnProperty('alternativePaymentMethods')) {
        obj['alternativePaymentMethods'] = InlineResponse2012SetupsPaymentsAlternativePaymentMethods.constructFromObject(data['alternativePaymentMethods']);
      }
      if (data.hasOwnProperty('cardPresentConnect')) {
        obj['cardPresentConnect'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['cardPresentConnect']);
      }
      if (data.hasOwnProperty('eCheck')) {
        obj['eCheck'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['eCheck']);
      }
      if (data.hasOwnProperty('payerAuthentication')) {
        obj['payerAuthentication'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['payerAuthentication']);
      }
      if (data.hasOwnProperty('digitalPayments')) {
        obj['digitalPayments'] = InlineResponse2012SetupsPaymentsDigitalPayments.constructFromObject(data['digitalPayments']);
      }
      if (data.hasOwnProperty('secureAcceptance')) {
        obj['secureAcceptance'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['secureAcceptance']);
      }
      if (data.hasOwnProperty('virtualTerminal')) {
        obj['virtualTerminal'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['virtualTerminal']);
      }
      if (data.hasOwnProperty('currencyConversion')) {
        obj['currencyConversion'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['currencyConversion']);
      }
      if (data.hasOwnProperty('tax')) {
        obj['tax'] = InlineResponse2012SetupsPaymentsDigitalPayments.constructFromObject(data['tax']);
      }
      if (data.hasOwnProperty('customerInvoicing')) {
        obj['customerInvoicing'] = InlineResponse2012SetupsPaymentsDigitalPayments.constructFromObject(data['customerInvoicing']);
      }
      if (data.hasOwnProperty('recurringBilling')) {
        obj['recurringBilling'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['recurringBilling']);
      }
      if (data.hasOwnProperty('cybsReadyTerminal')) {
        obj['cybsReadyTerminal'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['cybsReadyTerminal']);
      }
      if (data.hasOwnProperty('paymentOrchestration')) {
        obj['paymentOrchestration'] = InlineResponse2012SetupsPaymentsDigitalPayments.constructFromObject(data['paymentOrchestration']);
      }
      if (data.hasOwnProperty('payouts')) {
        obj['payouts'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['payouts']);
      }
      if (data.hasOwnProperty('payByLink')) {
        obj['payByLink'] = InlineResponse2012SetupsPaymentsDigitalPayments.constructFromObject(data['payByLink']);
      }
      if (data.hasOwnProperty('unifiedCheckout')) {
        obj['unifiedCheckout'] = InlineResponse2012SetupsPaymentsDigitalPayments.constructFromObject(data['unifiedCheckout']);
      }
      if (data.hasOwnProperty('receivablesManager')) {
        obj['receivablesManager'] = InlineResponse2012SetupsPaymentsDigitalPayments.constructFromObject(data['receivablesManager']);
      }
      if (data.hasOwnProperty('serviceFee')) {
        obj['serviceFee'] = InlineResponse2012SetupsPaymentsCardProcessing.constructFromObject(data['serviceFee']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} cardProcessing
   */
  exports.prototype['cardProcessing'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsAlternativePaymentMethods} alternativePaymentMethods
   */
  exports.prototype['alternativePaymentMethods'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} cardPresentConnect
   */
  exports.prototype['cardPresentConnect'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} eCheck
   */
  exports.prototype['eCheck'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} payerAuthentication
   */
  exports.prototype['payerAuthentication'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsDigitalPayments} digitalPayments
   */
  exports.prototype['digitalPayments'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} secureAcceptance
   */
  exports.prototype['secureAcceptance'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} virtualTerminal
   */
  exports.prototype['virtualTerminal'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} currencyConversion
   */
  exports.prototype['currencyConversion'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsDigitalPayments} tax
   */
  exports.prototype['tax'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsDigitalPayments} customerInvoicing
   */
  exports.prototype['customerInvoicing'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} recurringBilling
   */
  exports.prototype['recurringBilling'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} cybsReadyTerminal
   */
  exports.prototype['cybsReadyTerminal'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsDigitalPayments} paymentOrchestration
   */
  exports.prototype['paymentOrchestration'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} payouts
   */
  exports.prototype['payouts'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsDigitalPayments} payByLink
   */
  exports.prototype['payByLink'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsDigitalPayments} unifiedCheckout
   */
  exports.prototype['unifiedCheckout'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsDigitalPayments} receivablesManager
   */
  exports.prototype['receivablesManager'] = undefined;
  /**
   * @member {module:model/InlineResponse2012SetupsPaymentsCardProcessing} serviceFee
   */
  exports.prototype['serviceFee'] = undefined;



  return exports;
}));


