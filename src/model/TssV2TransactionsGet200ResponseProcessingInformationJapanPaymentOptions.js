/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.TssV2TransactionsGet200ResponseProcessingInformationJapanPaymentOptions = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The TssV2TransactionsGet200ResponseProcessingInformationJapanPaymentOptions model module.
   * @module model/TssV2TransactionsGet200ResponseProcessingInformationJapanPaymentOptions
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>TssV2TransactionsGet200ResponseProcessingInformationJapanPaymentOptions</code>.
   * @alias module:model/TssV2TransactionsGet200ResponseProcessingInformationJapanPaymentOptions
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>TssV2TransactionsGet200ResponseProcessingInformationJapanPaymentOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TssV2TransactionsGet200ResponseProcessingInformationJapanPaymentOptions} obj Optional instance to populate.
   * @return {module:model/TssV2TransactionsGet200ResponseProcessingInformationJapanPaymentOptions} The populated <code>TssV2TransactionsGet200ResponseProcessingInformationJapanPaymentOptions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('paymentMethod')) {
        obj['paymentMethod'] = ApiClient.convertToType(data['paymentMethod'], 'String');
      }
      if (data.hasOwnProperty('terminalId')) {
        obj['terminalId'] = ApiClient.convertToType(data['terminalId'], 'String');
      }
      if (data.hasOwnProperty('businessName')) {
        obj['businessName'] = ApiClient.convertToType(data['businessName'], 'String');
      }
      if (data.hasOwnProperty('businessNameKatakana')) {
        obj['businessNameKatakana'] = ApiClient.convertToType(data['businessNameKatakana'], 'String');
      }
    }
    return obj;
  }

  /**
   * This value is a 2-digit code indicating the payment method. Use Payment Method Code value that applies to the tranasction. - 10 (One-time payment) - 21, 22, 23, 24  (Bonus(one-time)payment) - 61 (Installment payment) - 31, 32, 33, 34  (Integrated (Bonus + Installment)payment) - 80 (Revolving payment) 
   * @member {String} paymentMethod
   */
  exports.prototype['paymentMethod'] = undefined;
  /**
   * This value is the 13-digit JCCA number.
   * @member {String} terminalId
   */
  exports.prototype['terminalId'] = undefined;
  /**
   * Business name in Japanese characters. This field is supported only on JCN Gateway and for the Sumitomo Mitsui Card Co. acquirer on CyberSource through VisaNet. 
   * @member {String} businessName
   */
  exports.prototype['businessName'] = undefined;
  /**
   * Business name in Katakana characters. This field is supported only on JCN Gateway and for the Sumitomo Mitsui Card Co. acquirer on CyberSource through VisaNet. 
   * @member {String} businessNameKatakana
   */
  exports.prototype['businessNameKatakana'] = undefined;



  return exports;
}));


