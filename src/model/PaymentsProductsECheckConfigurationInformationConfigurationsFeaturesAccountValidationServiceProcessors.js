/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.PaymentsProductsECheckConfigurationInformationConfigurationsFeaturesAccountValidationServiceProcessors = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The PaymentsProductsECheckConfigurationInformationConfigurationsFeaturesAccountValidationServiceProcessors model module.
   * @module model/PaymentsProductsECheckConfigurationInformationConfigurationsFeaturesAccountValidationServiceProcessors
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>PaymentsProductsECheckConfigurationInformationConfigurationsFeaturesAccountValidationServiceProcessors</code>.
   * *NEW* Name of the payment processor. Example - \&quot;wellsfargoach\&quot;
   * @alias module:model/PaymentsProductsECheckConfigurationInformationConfigurationsFeaturesAccountValidationServiceProcessors
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>PaymentsProductsECheckConfigurationInformationConfigurationsFeaturesAccountValidationServiceProcessors</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PaymentsProductsECheckConfigurationInformationConfigurationsFeaturesAccountValidationServiceProcessors} obj Optional instance to populate.
   * @return {module:model/PaymentsProductsECheckConfigurationInformationConfigurationsFeaturesAccountValidationServiceProcessors} The populated <code>PaymentsProductsECheckConfigurationInformationConfigurationsFeaturesAccountValidationServiceProcessors</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('avsAccountOwnershipService')) {
        obj['avsAccountOwnershipService'] = ApiClient.convertToType(data['avsAccountOwnershipService'], 'Boolean');
      }
      if (data.hasOwnProperty('avsAccountStatusService')) {
        obj['avsAccountStatusService'] = ApiClient.convertToType(data['avsAccountStatusService'], 'Boolean');
      }
      if (data.hasOwnProperty('avsSignedAgreement')) {
        obj['avsSignedAgreement'] = ApiClient.convertToType(data['avsSignedAgreement'], 'Boolean');
      }
      if (data.hasOwnProperty('avsAdditionalId')) {
        obj['avsAdditionalId'] = ApiClient.convertToType(data['avsAdditionalId'], 'String');
      }
      if (data.hasOwnProperty('enableAvs')) {
        obj['enableAvs'] = ApiClient.convertToType(data['enableAvs'], 'Boolean');
      }
      if (data.hasOwnProperty('avsEntityId')) {
        obj['avsEntityId'] = ApiClient.convertToType(data['avsEntityId'], 'String');
      }
      if (data.hasOwnProperty('enableAvsTokenCreation')) {
        obj['enableAvsTokenCreation'] = ApiClient.convertToType(data['enableAvsTokenCreation'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * *NEW* Determined in WF eTicket if account has opted into the Account Ownership Service.
   * @member {Boolean} avsAccountOwnershipService
   */
  exports.prototype['avsAccountOwnershipService'] = undefined;
  /**
   * *NEW* Determined in WF eTicket if account has opted into the Account Status Service.
   * @member {Boolean} avsAccountStatusService
   */
  exports.prototype['avsAccountStatusService'] = undefined;
  /**
   * *NEW* Taken from Addendum Agreement Column in boarding form.
   * @member {Boolean} avsSignedAgreement
   */
  exports.prototype['avsSignedAgreement'] = undefined;
  /**
   * *NEW* Also known as the Additional ID. Taken from the boarding form.
   * @member {String} avsAdditionalId
   */
  exports.prototype['avsAdditionalId'] = undefined;
  /**
   * *NEW*
   * @member {Boolean} enableAvs
   * @default true
   */
  exports.prototype['enableAvs'] = true;
  /**
   * *NEW* Also known as the AVS Gateway Entity ID.
   * @member {String} avsEntityId
   */
  exports.prototype['avsEntityId'] = undefined;
  /**
   * *NEW* Applicable if the merchant wants to run AVS on token creation requests only.
   * @member {Boolean} enableAvsTokenCreation
   * @default false
   */
  exports.prototype['enableAvsTokenCreation'] = false;



  return exports;
}));


