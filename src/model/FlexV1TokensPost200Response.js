/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.FlexV1TokensPost200Response = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The FlexV1TokensPost200Response model module.
   * @module model/FlexV1TokensPost200Response
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>FlexV1TokensPost200Response</code>.
   * @alias module:model/FlexV1TokensPost200Response
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>FlexV1TokensPost200Response</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FlexV1TokensPost200Response} obj Optional instance to populate.
   * @return {module:model/FlexV1TokensPost200Response} The populated <code>FlexV1TokensPost200Response</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('keyId')) {
        obj['keyId'] = ApiClient.convertToType(data['keyId'], 'String');
      }
      if (data.hasOwnProperty('token')) {
        obj['token'] = ApiClient.convertToType(data['token'], 'String');
      }
      if (data.hasOwnProperty('maskedPan')) {
        obj['maskedPan'] = ApiClient.convertToType(data['maskedPan'], 'String');
      }
      if (data.hasOwnProperty('cardType')) {
        obj['cardType'] = ApiClient.convertToType(data['cardType'], 'String');
      }
      if (data.hasOwnProperty('timestamp')) {
        obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
      }
      if (data.hasOwnProperty('signedFields')) {
        obj['signedFields'] = ApiClient.convertToType(data['signedFields'], 'String');
      }
      if (data.hasOwnProperty('signature')) {
        obj['signature'] = ApiClient.convertToType(data['signature'], 'String');
      }
      if (data.hasOwnProperty('discoverableServices')) {
        obj['discoverableServices'] = ApiClient.convertToType(data['discoverableServices'], {'String': Object});
      }
    }
    return obj;
  }

  /**
   * The Key ID.
   * @member {String} keyId
   */
  exports.prototype['keyId'] = undefined;
  /**
   * The generated token. The token replaces card data and is used as the Subscription ID in the CyberSource Simple Order API or SCMP API.
   * @member {String} token
   */
  exports.prototype['token'] = undefined;
  /**
   * The masked card number displaying the first 6 digits and the last 4 digits.
   * @member {String} maskedPan
   */
  exports.prototype['maskedPan'] = undefined;
  /**
   * The card type.
   * @member {String} cardType
   */
  exports.prototype['cardType'] = undefined;
  /**
   * The UTC date and time in milliseconds at which the signature was generated.
   * @member {Number} timestamp
   */
  exports.prototype['timestamp'] = undefined;
  /**
   * Indicates which fields from the response make up the data that is used when verifying the response signature. See the [sample code] (https://github.com/CyberSource/cybersource-flex-samples/blob/master/java/spring-boot/src/main/java/com/cybersource/flex/application/CheckoutController.java) on how to verify the signature.
   * @member {String} signedFields
   */
  exports.prototype['signedFields'] = undefined;
  /**
   * Flex-generated digital signature. To ensure the values have not been tampered with while passing through the client, verify this server-side using the public key generated from the /keys resource.
   * @member {String} signature
   */
  exports.prototype['signature'] = undefined;
  /**
   * @member {Object.<String, Object>} discoverableServices
   */
  exports.prototype['discoverableServices'] = undefined;



  return exports;
}));


