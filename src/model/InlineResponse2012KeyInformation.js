/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse2012KeyInformationErrorInformation'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InlineResponse2012KeyInformationErrorInformation'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.InlineResponse2012KeyInformation = factory(root.CyberSource.ApiClient, root.CyberSource.InlineResponse2012KeyInformationErrorInformation);
  }
}(this, function(ApiClient, InlineResponse2012KeyInformationErrorInformation) {
  'use strict';




  /**
   * The InlineResponse2012KeyInformation model module.
   * @module model/InlineResponse2012KeyInformation
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>InlineResponse2012KeyInformation</code>.
   * Egress Key Information 
   * @alias module:model/InlineResponse2012KeyInformation
   * @class
   */
  var exports = function() {
    var _this = this;












  };

  /**
   * Constructs a <code>InlineResponse2012KeyInformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2012KeyInformation} obj Optional instance to populate.
   * @return {module:model/InlineResponse2012KeyInformation} The populated <code>InlineResponse2012KeyInformation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('provider')) {
        obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
      }
      if (data.hasOwnProperty('tenant')) {
        obj['tenant'] = ApiClient.convertToType(data['tenant'], 'String');
      }
      if (data.hasOwnProperty('organizationId')) {
        obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
      }
      if (data.hasOwnProperty('clientKeyId')) {
        obj['clientKeyId'] = ApiClient.convertToType(data['clientKeyId'], 'String');
      }
      if (data.hasOwnProperty('keyId')) {
        obj['keyId'] = ApiClient.convertToType(data['keyId'], 'String');
      }
      if (data.hasOwnProperty('key')) {
        obj['key'] = ApiClient.convertToType(data['key'], 'String');
      }
      if (data.hasOwnProperty('keyType')) {
        obj['keyType'] = ApiClient.convertToType(data['keyType'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('expirationDate')) {
        obj['expirationDate'] = ApiClient.convertToType(data['expirationDate'], 'String');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('errorInformation')) {
        obj['errorInformation'] = InlineResponse2012KeyInformationErrorInformation.constructFromObject(data['errorInformation']);
      }
    }
    return obj;
  }

  /**
   * Provider name 
   * @member {String} provider
   */
  exports.prototype['provider'] = undefined;
  /**
   * Tenant name 
   * @member {String} tenant
   */
  exports.prototype['tenant'] = undefined;
  /**
   * Organization Id 
   * @member {String} organizationId
   */
  exports.prototype['organizationId'] = undefined;
  /**
   * Client key Id 
   * @member {String} clientKeyId
   */
  exports.prototype['clientKeyId'] = undefined;
  /**
   * Key Serial Number 
   * @member {String} keyId
   */
  exports.prototype['keyId'] = undefined;
  /**
   * Value of the key 
   * @member {String} key
   */
  exports.prototype['key'] = undefined;
  /**
   * Type of the key 
   * @member {String} keyType
   */
  exports.prototype['keyType'] = undefined;
  /**
   * The status of the key 
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * The expiration time in UTC. `Format: YYYY-MM-DDThh:mm:ssZ` Example 2016-08-11T22:47:57Z equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The T separates the date and the time. The Z indicates UTC. 
   * @member {String} expirationDate
   */
  exports.prototype['expirationDate'] = undefined;
  /**
   * Message in case of failed key 
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * @member {module:model/InlineResponse2012KeyInformationErrorInformation} errorInformation
   */
  exports.prototype['errorInformation'] = undefined;



  return exports;
}));


