/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.38
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.InlineResponse2012PayoutInformationPushFunds = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The InlineResponse2012PayoutInformationPushFunds model module.
   * @module model/InlineResponse2012PayoutInformationPushFunds
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>InlineResponse2012PayoutInformationPushFunds</code>.
   * @alias module:model/InlineResponse2012PayoutInformationPushFunds
   * @class
   */
  var exports = function() {
    var _this = this;















  };

  /**
   * Constructs a <code>InlineResponse2012PayoutInformationPushFunds</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2012PayoutInformationPushFunds} obj Optional instance to populate.
   * @return {module:model/InlineResponse2012PayoutInformationPushFunds} The populated <code>InlineResponse2012PayoutInformationPushFunds</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('moneyTransferFastFundsCrossBorder')) {
        obj['moneyTransferFastFundsCrossBorder'] = ApiClient.convertToType(data['moneyTransferFastFundsCrossBorder'], 'String');
      }
      if (data.hasOwnProperty('moneyTransferFastFundsDomestic')) {
        obj['moneyTransferFastFundsDomestic'] = ApiClient.convertToType(data['moneyTransferFastFundsDomestic'], 'String');
      }
      if (data.hasOwnProperty('moneyTransferCrossBorder')) {
        obj['moneyTransferCrossBorder'] = ApiClient.convertToType(data['moneyTransferCrossBorder'], 'String');
      }
      if (data.hasOwnProperty('moneyTransferDomestic')) {
        obj['moneyTransferDomestic'] = ApiClient.convertToType(data['moneyTransferDomestic'], 'String');
      }
      if (data.hasOwnProperty('nonMoneyTransferFastFundsCrossBorder')) {
        obj['nonMoneyTransferFastFundsCrossBorder'] = ApiClient.convertToType(data['nonMoneyTransferFastFundsCrossBorder'], 'String');
      }
      if (data.hasOwnProperty('nonMoneyTransferFastFundsDomestic')) {
        obj['nonMoneyTransferFastFundsDomestic'] = ApiClient.convertToType(data['nonMoneyTransferFastFundsDomestic'], 'String');
      }
      if (data.hasOwnProperty('nonMoneyTransferCrossBorder')) {
        obj['nonMoneyTransferCrossBorder'] = ApiClient.convertToType(data['nonMoneyTransferCrossBorder'], 'String');
      }
      if (data.hasOwnProperty('nonMoneyTransferDomestic')) {
        obj['nonMoneyTransferDomestic'] = ApiClient.convertToType(data['nonMoneyTransferDomestic'], 'String');
      }
      if (data.hasOwnProperty('onlineGamblingFastFundsCrossBorder')) {
        obj['onlineGamblingFastFundsCrossBorder'] = ApiClient.convertToType(data['onlineGamblingFastFundsCrossBorder'], 'String');
      }
      if (data.hasOwnProperty('onlineGamblingFastFundsDomestic')) {
        obj['onlineGamblingFastFundsDomestic'] = ApiClient.convertToType(data['onlineGamblingFastFundsDomestic'], 'String');
      }
      if (data.hasOwnProperty('onlineGamblingCrossBorder')) {
        obj['onlineGamblingCrossBorder'] = ApiClient.convertToType(data['onlineGamblingCrossBorder'], 'String');
      }
      if (data.hasOwnProperty('onlineGamblingDomestic')) {
        obj['onlineGamblingDomestic'] = ApiClient.convertToType(data['onlineGamblingDomestic'], 'String');
      }
      if (data.hasOwnProperty('domesticParticipant')) {
        obj['domesticParticipant'] = ApiClient.convertToType(data['domesticParticipant'], 'String');
      }
      if (data.hasOwnProperty('crossBorderParticipant')) {
        obj['crossBorderParticipant'] = ApiClient.convertToType(data['crossBorderParticipant'], 'String');
      }
    }
    return obj;
  }

  /**
   * This field indicates if cross-border money transfer OCTs (fast push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} moneyTransferFastFundsCrossBorder
   */
  exports.prototype['moneyTransferFastFundsCrossBorder'] = undefined;
  /**
   * This field indicates if domestic money transfer OCTs (fast push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} moneyTransferFastFundsDomestic
   */
  exports.prototype['moneyTransferFastFundsDomestic'] = undefined;
  /**
   * This field indicates if cross-border money transfer OCTs (push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} moneyTransferCrossBorder
   */
  exports.prototype['moneyTransferCrossBorder'] = undefined;
  /**
   * This field indicates if domestic money transfer OCTs (push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} moneyTransferDomestic
   */
  exports.prototype['moneyTransferDomestic'] = undefined;
  /**
   * This field indicates if cross-border non-money transfer OCTs (fast push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} nonMoneyTransferFastFundsCrossBorder
   */
  exports.prototype['nonMoneyTransferFastFundsCrossBorder'] = undefined;
  /**
   * This field indicates if domestic non-money transfer OCTs (fast push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} nonMoneyTransferFastFundsDomestic
   */
  exports.prototype['nonMoneyTransferFastFundsDomestic'] = undefined;
  /**
   * This field indicates if cross-border non-money transfer OCTs (push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} nonMoneyTransferCrossBorder
   */
  exports.prototype['nonMoneyTransferCrossBorder'] = undefined;
  /**
   * This field indicates if domestic non-money transfer OCTs (push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} nonMoneyTransferDomestic
   */
  exports.prototype['nonMoneyTransferDomestic'] = undefined;
  /**
   * This field indicates if cross-border gambling OCTs (fast push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} onlineGamblingFastFundsCrossBorder
   */
  exports.prototype['onlineGamblingFastFundsCrossBorder'] = undefined;
  /**
   * This field indicates if domestic gambling OCTs (fast push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} onlineGamblingFastFundsDomestic
   */
  exports.prototype['onlineGamblingFastFundsDomestic'] = undefined;
  /**
   * This field indicates if cross-border gambling OCTs (push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} onlineGamblingCrossBorder
   */
  exports.prototype['onlineGamblingCrossBorder'] = undefined;
  /**
   * This field indicates if domestic gambling OCTs (push funds) are allowed. Possible values:   - `Y`   - `N` 
   * @member {String} onlineGamblingDomestic
   */
  exports.prototype['onlineGamblingDomestic'] = undefined;
  /**
   * This field indicates if domestic OCTs (push funds) are allowed. Note: Supported only in US for domestic transactions involving Push Payments Gateway Service(PPGS). Possible values:   - `true`   - `false` 
   * @member {String} domesticParticipant
   */
  exports.prototype['domesticParticipant'] = undefined;
  /**
   * This field indicates if cross-border OCTs (push funds) are allowed. Note: Supported only in US for cross-border transactions involving Push Payments Gateway Service(PPGS). Possible values:   - `true`   - `false` 
   * @member {String} crossBorderParticipant
   */
  exports.prototype['crossBorderParticipant'] = undefined;



  return exports;
}));


