/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover model module.
   * @module model/PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover</code>.
   * Object containing supported Card Types and settings
   * @alias module:model/PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover} obj Optional instance to populate.
   * @return {module:model/PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover} The populated <code>PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('cardVerificationNumberSupported')) {
        obj['cardVerificationNumberSupported'] = ApiClient.convertToType(data['cardVerificationNumberSupported'], 'Boolean');
      }
      if (data.hasOwnProperty('cardVerificationNumberDisplay')) {
        obj['cardVerificationNumberDisplay'] = ApiClient.convertToType(data['cardVerificationNumberDisplay'], 'Boolean');
      }
      if (data.hasOwnProperty('payerAuthenticationSupported')) {
        obj['payerAuthenticationSupported'] = ApiClient.convertToType(data['payerAuthenticationSupported'], 'Boolean');
      }
      if (data.hasOwnProperty('supportedCurrencies')) {
        obj['supportedCurrencies'] = ApiClient.convertToType(data['supportedCurrencies'], ['String']);
      }
      if (data.hasOwnProperty('method')) {
        obj['method'] = ApiClient.convertToType(data['method'], 'String');
      }
      if (data.hasOwnProperty('cardVerificationNumberRequired')) {
        obj['cardVerificationNumberRequired'] = ApiClient.convertToType(data['cardVerificationNumberRequired'], 'Boolean');
      }
      if (data.hasOwnProperty('payerAuthenticationEnabled')) {
        obj['payerAuthenticationEnabled'] = ApiClient.convertToType(data['payerAuthenticationEnabled'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * Dictates whether or Card Verification Number is supported by the card type. Usually this is set at system level.
   * @member {Boolean} cardVerificationNumberSupported
   */
  exports.prototype['cardVerificationNumberSupported'] = undefined;
  /**
   * Toggles whether or Card Verification Number is displayed on the Hosted Checkout.
   * @member {Boolean} cardVerificationNumberDisplay
   */
  exports.prototype['cardVerificationNumberDisplay'] = undefined;
  /**
   * Dictates whether or Payer Authentication is supported by the card type. Usually this is set at system level.
   * @member {Boolean} payerAuthenticationSupported
   */
  exports.prototype['payerAuthenticationSupported'] = undefined;
  /**
   * Array of the supported  ISO 4217 alphabetic currency codes.
   * @member {Array.<String>} supportedCurrencies
   */
  exports.prototype['supportedCurrencies'] = undefined;
  /**
   * @member {String} method
   */
  exports.prototype['method'] = undefined;
  /**
   * @member {Boolean} cardVerificationNumberRequired
   */
  exports.prototype['cardVerificationNumberRequired'] = undefined;
  /**
   * @member {Boolean} payerAuthenticationEnabled
   */
  exports.prototype['payerAuthenticationEnabled'] = undefined;



  return exports;
}));


