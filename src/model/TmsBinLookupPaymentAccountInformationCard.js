/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.38
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/TmsBinLookupPaymentAccountInformationCardBrands'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TmsBinLookupPaymentAccountInformationCardBrands'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.TmsBinLookupPaymentAccountInformationCard = factory(root.CyberSource.ApiClient, root.CyberSource.TmsBinLookupPaymentAccountInformationCardBrands);
  }
}(this, function(ApiClient, TmsBinLookupPaymentAccountInformationCardBrands) {
  'use strict';




  /**
   * The TmsBinLookupPaymentAccountInformationCard model module.
   * @module model/TmsBinLookupPaymentAccountInformationCard
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>TmsBinLookupPaymentAccountInformationCard</code>.
   * @alias module:model/TmsBinLookupPaymentAccountInformationCard
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>TmsBinLookupPaymentAccountInformationCard</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TmsBinLookupPaymentAccountInformationCard} obj Optional instance to populate.
   * @return {module:model/TmsBinLookupPaymentAccountInformationCard} The populated <code>TmsBinLookupPaymentAccountInformationCard</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('brandName')) {
        obj['brandName'] = ApiClient.convertToType(data['brandName'], 'String');
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('maxLength')) {
        obj['maxLength'] = ApiClient.convertToType(data['maxLength'], 'String');
      }
      if (data.hasOwnProperty('credentialType')) {
        obj['credentialType'] = ApiClient.convertToType(data['credentialType'], 'String');
      }
      if (data.hasOwnProperty('brands')) {
        obj['brands'] = ApiClient.convertToType(data['brands'], [TmsBinLookupPaymentAccountInformationCardBrands]);
      }
    }
    return obj;
  }

  /**
   * This field contains a 3-digit numeric value that indicates the card type within Cybersource eco-system. Possible values from BIN Lookup Service (based on availability and enablement): - `000`: Unsupported Card Type - `001`: Visa - `002`: Mastercard - `003`: American Express - `004`: Discover - `005`: Diners Club - `007`: JCB - `036`: Cartes Bancaire - `042`: Maestro - `054`: Elo - `058`: Carnet - `060`: MADA - `061`: RuPay - `062`: China UnionPay - `064`: Prompt Card - `067`: Meeza - `068`: PayPak - `070`: EFTPOS - `081`: Jaywan - `082`: TPN  Glossary of possible values in the payments ecosystem: - `001`: Visa - `002`: Mastercard - `003`: American Express - `004`: Discover - `005`: Diners Club - `006`: Carte Blanche - `007`: JCB - `008`: Optima - `009`: GE Private Label - `010`: Beneficial Private Label - `011`: Twinpay Credit Card - `012`: Twinpay Debit Card - `013`: Walmart - `014`: EnRoute - `015`: Lowe's Consumer - `016`: Home Depot Consumer - `017`: MBNA - `018`: Dick's Sportwear - `019`: Casual Corner - `020`: Sears - `021`: JAL - `023`: Disney Card - `024`: Switch/Solo - `025`: Sam's Club Consumer - `026`: Sam's Club Business - `027`: Nico's - `028`: Paymentech Bill Me Later - `029`: Bebe - `030`: Restoration Hardware - `031`: Delta Online - `032`: Solo - `033`: Visa Electron - `034`: Dankort - `035`: Laser - `036`: Cartes Bancaire - `037`: Carta Si - `040`: UATP - `041`: HOUSEHOLD - `042`: Maestro - `043`: GE MONEY - `044`: Korean Cards - `045`: Style Cards - `046`: J.Crew - `047`: Payeasecn eWallet - `048`: Payeasecn Bank Transfer - `049`: Meijer - `050`: Hipercard - `051`: Aura - `052`: Redecard - `053`: Orico Card - `054`: Elo - `055`: Capital One Private Label - `057`: Costco Private Label - `058`: Carnet - `059`: ValueLink - `060`: MADA - `061`: RuPay - `062`: China UnionPay - `063`: Falabella Private Label - `064`: Prompt Card - `065`: Korean Domestic - `066`: Banricompras - `067`: Meeza - `068`: PayPak - `070`: EFTPOS - `071`: Codensa - `072`: Olimpica - `073`: Colsubsidio - `074`: Tuya - `075`: Sodexo - `076`: Naranja - `077`: Cabal - `078`: DINELCO - `079`: PANAL - `080`: EPM - `081`: Jaywan - `082`: TPN 
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * This field contains the card brand name.   Some of the possible values (not an exhaustive list) are -    - VISA   - MASTERCARD   - AMERICAN EXPRESS   - DISCOVER   - DINERS CLUB   - CARTE BLANCHE   - JCB   - OPTIMA   - TWINPAY CREDIT CARD   - TWINPAY DEBIT CARD   - WALMART   - ENROUTE   - LOWES CONSUMER   - HOME DEPOT CONSUMER   - MBNA   - DICKS SPORTWEAR   - CASUAL CORNER   - SEARS   - JAL   - DISNEY CARD   - SWITCH/SOLO   - SAMS CLUB CONSUMER   - SAMS CLUB BUSINESS   - NICOS HOUSE CARD   - BEBE   - RESTORATION HARDWARE   - DELTA ONLINE   - SOLO   - VISA ELECTRON   - DANKORT   - LASER   - CARTE BANCAIRE   - CARTA SI   - ENCODED ACCOUNT   - UATP   - HOUSEHOLD   - MAESTRO   - GE CAPITAL   - KOREAN CARDS   - STYLE CARDS   - JCREW   - MEIJER   - HIPERCARD   - AURA   - REDECARD   - ORICO HOUSE CARD   - MADA   - ELO   - CAPITAL ONE PRIVATE LABEL   - CARNET   - RUPAY   - CHINA UNION PAY   - FALABELLA PRIVATE LABEL   - PROMPTCARD   - KOREAN DOMESTIC   - BANRICOMPRAS   - MEEZA   - PAYPAK   - JAYWAN   - TPN 
   * @member {String} brandName
   */
  exports.prototype['brandName'] = undefined;
  /**
   * This field indicates the 3-letter [ISO Standard Currency Codes](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf) for the card currency. 
   * @member {String} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * This field contains the max length of the card. 
   * @member {String} maxLength
   */
  exports.prototype['maxLength'] = undefined;
  /**
   * This field contains the type of the payment credential. Possible values:   - PAN   - TOKEN  
   * @member {String} credentialType
   */
  exports.prototype['credentialType'] = undefined;
  /**
   * Array of brands
   * @member {Array.<module:model/TmsBinLookupPaymentAccountInformationCardBrands>} brands
   */
  exports.prototype['brands'] = undefined;



  return exports;
}));


