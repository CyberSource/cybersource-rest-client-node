/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.38
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Boardingv1registrationsOrganizationInformationBusinessInformationAddress', 'model/Boardingv1registrationsOrganizationInformationBusinessInformationBusinessContact'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Boardingv1registrationsOrganizationInformationBusinessInformationAddress'), require('./Boardingv1registrationsOrganizationInformationBusinessInformationBusinessContact'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.Boardingv1registrationsOrganizationInformationBusinessInformation = factory(root.CyberSource.ApiClient, root.CyberSource.Boardingv1registrationsOrganizationInformationBusinessInformationAddress, root.CyberSource.Boardingv1registrationsOrganizationInformationBusinessInformationBusinessContact);
  }
}(this, function(ApiClient, Boardingv1registrationsOrganizationInformationBusinessInformationAddress, Boardingv1registrationsOrganizationInformationBusinessInformationBusinessContact) {
  'use strict';




  /**
   * The Boardingv1registrationsOrganizationInformationBusinessInformation model module.
   * @module model/Boardingv1registrationsOrganizationInformationBusinessInformation
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>Boardingv1registrationsOrganizationInformationBusinessInformation</code>.
   * @alias module:model/Boardingv1registrationsOrganizationInformationBusinessInformation
   * @class
   * @param name {String} 
   */
  var exports = function(name) {
    var _this = this;

    _this['name'] = name;













  };

  /**
   * Constructs a <code>Boardingv1registrationsOrganizationInformationBusinessInformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Boardingv1registrationsOrganizationInformationBusinessInformation} obj Optional instance to populate.
   * @return {module:model/Boardingv1registrationsOrganizationInformationBusinessInformation} The populated <code>Boardingv1registrationsOrganizationInformationBusinessInformation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('doingBusinessAs')) {
        obj['doingBusinessAs'] = ApiClient.convertToType(data['doingBusinessAs'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('startDate')) {
        obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
      }
      if (data.hasOwnProperty('address')) {
        obj['address'] = Boardingv1registrationsOrganizationInformationBusinessInformationAddress.constructFromObject(data['address']);
      }
      if (data.hasOwnProperty('timeZone')) {
        obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
      }
      if (data.hasOwnProperty('websiteUrl')) {
        obj['websiteUrl'] = ApiClient.convertToType(data['websiteUrl'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('taxId')) {
        obj['taxId'] = ApiClient.convertToType(data['taxId'], 'String');
      }
      if (data.hasOwnProperty('phoneNumber')) {
        obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
      }
      if (data.hasOwnProperty('businessContact')) {
        obj['businessContact'] = Boardingv1registrationsOrganizationInformationBusinessInformationBusinessContact.constructFromObject(data['businessContact']);
      }
      if (data.hasOwnProperty('technicalContact')) {
        obj['technicalContact'] = Boardingv1registrationsOrganizationInformationBusinessInformationBusinessContact.constructFromObject(data['technicalContact']);
      }
      if (data.hasOwnProperty('emergencyContact')) {
        obj['emergencyContact'] = Boardingv1registrationsOrganizationInformationBusinessInformationBusinessContact.constructFromObject(data['emergencyContact']);
      }
      if (data.hasOwnProperty('merchantCategoryCode')) {
        obj['merchantCategoryCode'] = ApiClient.convertToType(data['merchantCategoryCode'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} doingBusinessAs
   */
  exports.prototype['doingBusinessAs'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * `Format: YYYY-MM-DD` Example 2016-08-11 equals August 11, 2016 
   * @member {Date} startDate
   */
  exports.prototype['startDate'] = undefined;
  /**
   * @member {module:model/Boardingv1registrationsOrganizationInformationBusinessInformationAddress} address
   */
  exports.prototype['address'] = undefined;
  /**
   * Merchant perferred time zone Possible Values: - 'Pacific/Pago_Pago' - 'Pacific/Honolulu' - 'America/Anchorage' - 'America/Vancouver' - 'America/Los_Angeles' - 'America/Phoenix' - 'America/Edmonton' - 'America/Denver' - 'America/Winnipeg' - 'America/Mexico_City' - 'America/Chicago' - 'America/Bogota' - 'America/Indianapolis' - 'America/New_York' - 'America/La_Paz' - 'America/Halifax' - 'America/St_Johns' - 'America/Buenos_Aires' - 'America/Godthab' - 'America/Sao_Paulo' - 'America/Noronha' - 'Atlantic/Cape_Verde' - 'GMT' - 'Europe/Dublin' - 'Europe/Lisbon' - 'Europe/London' - 'Africa/Tunis' - 'Europe/Vienna' - 'Europe/Brussels' - 'Europe/Zurich' - 'Europe/Prague' - 'Europe/Berlin' - 'Europe/Copenhagen' - 'Europe/Madrid' - 'Europe/Budapest' - 'Europe/Rome' - 'Africa/Tripoli' - 'Europe/Monaco' - 'Europe/Malta' - 'Europe/Amsterdam' - 'Europe/Oslo' - 'Europe/Warsaw' - 'Europe/Stockholm' - 'Europe/Belgrade' - 'Europe/Paris' - 'Africa/Johannesburg' - 'Europe/Minsk' - 'Africa/Cairo' - 'Europe/Helsinki' - 'Europe/Athens' - 'Asia/Jerusalem' - 'Europe/Riga' - 'Europe/Bucharest' - 'Europe/Istanbul' - 'Asia/Riyadh' - 'Europe/Moscow' - 'Asia/Dubai' - 'Asia/Baku' - 'Asia/Tbilisi' - 'Asia/Calcutta' - 'Asia/Katmandu' - 'Asia/Dacca' - 'Asia/Rangoon' - 'Asia/Jakarta' - 'Asia/Saigon' - 'Asia/Bangkok' - 'Australia/Perth' - 'Asia/Hong_Kong' - 'Asia/Macao' - 'Asia/Kuala_Lumpur' - 'Asia/Manila' - 'Asia/Singapore' - 'Asia/Taipei' - 'Asia/Shanghai' - 'Asia/Seoul' - 'Asia/Tokyo' - 'Asia/Yakutsk' - 'Australia/Adelaide' - 'Australia/Brisbane' - 'Australia/Broken_Hill' - 'Australia/Darwin' - 'Australia/Eucla' - 'Australia/Hobart' - 'Australia/Lindeman' - 'Australia/Sydney' - 'Australia/Lord_Howe' - 'Australia/Melbourne' - 'Asia/Magadan' - 'Pacific/Norfolk' - 'Pacific/Auckland' 
   * @member {module:model/Boardingv1registrationsOrganizationInformationBusinessInformation.TimeZoneEnum} timeZone
   */
  exports.prototype['timeZone'] = undefined;
  /**
   * @member {String} websiteUrl
   */
  exports.prototype['websiteUrl'] = undefined;
  /**
   * Business type Possible Values:   - 'PARTNERSHIP'   - 'SOLE_PROPRIETORSHIP'   - 'CORPORATION'   - 'LLC'   - 'NON_PROFIT'   - 'TRUST' 
   * @member {module:model/Boardingv1registrationsOrganizationInformationBusinessInformation.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {String} taxId
   */
  exports.prototype['taxId'] = undefined;
  /**
   * @member {String} phoneNumber
   */
  exports.prototype['phoneNumber'] = undefined;
  /**
   * @member {module:model/Boardingv1registrationsOrganizationInformationBusinessInformationBusinessContact} businessContact
   */
  exports.prototype['businessContact'] = undefined;
  /**
   * @member {module:model/Boardingv1registrationsOrganizationInformationBusinessInformationBusinessContact} technicalContact
   */
  exports.prototype['technicalContact'] = undefined;
  /**
   * @member {module:model/Boardingv1registrationsOrganizationInformationBusinessInformationBusinessContact} emergencyContact
   */
  exports.prototype['emergencyContact'] = undefined;
  /**
   * Industry standard Merchant Category Code (MCC)
   * @member {String} merchantCategoryCode
   */
  exports.prototype['merchantCategoryCode'] = undefined;


  /**
   * Allowed values for the <code>timeZone</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TimeZoneEnum = {
    /**
     * value: "Pacific/Pago_Pago"
     * @const
     */
    "pacificPagoPago": "Pacific/Pago_Pago",
    /**
     * value: "Pacific/Honolulu"
     * @const
     */
    "pacificHonolulu": "Pacific/Honolulu",
    /**
     * value: "America/Anchorage"
     * @const
     */
    "americaAnchorage": "America/Anchorage",
    /**
     * value: "America/Vancouver"
     * @const
     */
    "americaVancouver": "America/Vancouver",
    /**
     * value: "America/Los_Angeles"
     * @const
     */
    "americaLosAngeles": "America/Los_Angeles",
    /**
     * value: "America/Phoenix"
     * @const
     */
    "americaPhoenix": "America/Phoenix",
    /**
     * value: "America/Edmonton"
     * @const
     */
    "americaEdmonton": "America/Edmonton",
    /**
     * value: "America/Denver"
     * @const
     */
    "americaDenver": "America/Denver",
    /**
     * value: "America/Winnipeg"
     * @const
     */
    "americaWinnipeg": "America/Winnipeg",
    /**
     * value: "America/Mexico_City"
     * @const
     */
    "americaMexicoCity": "America/Mexico_City",
    /**
     * value: "America/Chicago"
     * @const
     */
    "americaChicago": "America/Chicago",
    /**
     * value: "America/Bogota"
     * @const
     */
    "americaBogota": "America/Bogota",
    /**
     * value: "America/Indianapolis"
     * @const
     */
    "americaIndianapolis": "America/Indianapolis",
    /**
     * value: "America/New_York"
     * @const
     */
    "americaNewYork": "America/New_York",
    /**
     * value: "America/La_Paz"
     * @const
     */
    "americaLaPaz": "America/La_Paz",
    /**
     * value: "America/Halifax"
     * @const
     */
    "americaHalifax": "America/Halifax",
    /**
     * value: "America/St_Johns"
     * @const
     */
    "americaStJohns": "America/St_Johns",
    /**
     * value: "America/Buenos_Aires"
     * @const
     */
    "americaBuenosAires": "America/Buenos_Aires",
    /**
     * value: "America/Godthab"
     * @const
     */
    "americaGodthab": "America/Godthab",
    /**
     * value: "America/Sao_Paulo"
     * @const
     */
    "americaSaoPaulo": "America/Sao_Paulo",
    /**
     * value: "America/Noronha"
     * @const
     */
    "americaNoronha": "America/Noronha",
    /**
     * value: "Atlantic/Cape_Verde"
     * @const
     */
    "atlanticCapeVerde": "Atlantic/Cape_Verde",
    /**
     * value: "GMT"
     * @const
     */
    "GMT": "GMT",
    /**
     * value: "Europe/Dublin"
     * @const
     */
    "europeDublin": "Europe/Dublin",
    /**
     * value: "Europe/Lisbon"
     * @const
     */
    "europeLisbon": "Europe/Lisbon",
    /**
     * value: "Europe/London"
     * @const
     */
    "europeLondon": "Europe/London",
    /**
     * value: "Africa/Tunis"
     * @const
     */
    "africaTunis": "Africa/Tunis",
    /**
     * value: "Europe/Vienna"
     * @const
     */
    "europeVienna": "Europe/Vienna",
    /**
     * value: "Europe/Brussels"
     * @const
     */
    "europeBrussels": "Europe/Brussels",
    /**
     * value: "Europe/Zurich"
     * @const
     */
    "europeZurich": "Europe/Zurich",
    /**
     * value: "Europe/Prague"
     * @const
     */
    "europePrague": "Europe/Prague",
    /**
     * value: "Europe/Berlin"
     * @const
     */
    "europeBerlin": "Europe/Berlin",
    /**
     * value: "Europe/Copenhagen"
     * @const
     */
    "europeCopenhagen": "Europe/Copenhagen",
    /**
     * value: "Europe/Madrid"
     * @const
     */
    "europeMadrid": "Europe/Madrid",
    /**
     * value: "Europe/Budapest"
     * @const
     */
    "europeBudapest": "Europe/Budapest",
    /**
     * value: "Europe/Rome"
     * @const
     */
    "europeRome": "Europe/Rome",
    /**
     * value: "Africa/Tripoli"
     * @const
     */
    "africaTripoli": "Africa/Tripoli",
    /**
     * value: "Europe/Monaco"
     * @const
     */
    "europeMonaco": "Europe/Monaco",
    /**
     * value: "Europe/Malta"
     * @const
     */
    "europeMalta": "Europe/Malta",
    /**
     * value: "Europe/Amsterdam"
     * @const
     */
    "europeAmsterdam": "Europe/Amsterdam",
    /**
     * value: "Europe/Oslo"
     * @const
     */
    "europeOslo": "Europe/Oslo",
    /**
     * value: "Europe/Warsaw"
     * @const
     */
    "europeWarsaw": "Europe/Warsaw",
    /**
     * value: "Europe/Stockholm"
     * @const
     */
    "europeStockholm": "Europe/Stockholm",
    /**
     * value: "Europe/Belgrade"
     * @const
     */
    "europeBelgrade": "Europe/Belgrade",
    /**
     * value: "Europe/Paris"
     * @const
     */
    "europeParis": "Europe/Paris",
    /**
     * value: "Africa/Johannesburg"
     * @const
     */
    "africaJohannesburg": "Africa/Johannesburg",
    /**
     * value: "Europe/Minsk"
     * @const
     */
    "europeMinsk": "Europe/Minsk",
    /**
     * value: "Africa/Cairo"
     * @const
     */
    "africaCairo": "Africa/Cairo",
    /**
     * value: "Europe/Helsinki"
     * @const
     */
    "europeHelsinki": "Europe/Helsinki",
    /**
     * value: "Europe/Athens"
     * @const
     */
    "europeAthens": "Europe/Athens",
    /**
     * value: "Asia/Jerusalem"
     * @const
     */
    "asiaJerusalem": "Asia/Jerusalem",
    /**
     * value: "Europe/Riga"
     * @const
     */
    "europeRiga": "Europe/Riga",
    /**
     * value: "Europe/Bucharest"
     * @const
     */
    "europeBucharest": "Europe/Bucharest",
    /**
     * value: "Europe/Istanbul"
     * @const
     */
    "europeIstanbul": "Europe/Istanbul",
    /**
     * value: "Asia/Riyadh"
     * @const
     */
    "asiaRiyadh": "Asia/Riyadh",
    /**
     * value: "Europe/Moscow"
     * @const
     */
    "europeMoscow": "Europe/Moscow",
    /**
     * value: "Asia/Dubai"
     * @const
     */
    "asiaDubai": "Asia/Dubai",
    /**
     * value: "Asia/Baku"
     * @const
     */
    "asiaBaku": "Asia/Baku",
    /**
     * value: "Asia/Tbilisi"
     * @const
     */
    "asiaTbilisi": "Asia/Tbilisi",
    /**
     * value: "Asia/Calcutta"
     * @const
     */
    "asiaCalcutta": "Asia/Calcutta",
    /**
     * value: "Asia/Katmandu"
     * @const
     */
    "asiaKatmandu": "Asia/Katmandu",
    /**
     * value: "Asia/Dacca"
     * @const
     */
    "asiaDacca": "Asia/Dacca",
    /**
     * value: "Asia/Rangoon"
     * @const
     */
    "asiaRangoon": "Asia/Rangoon",
    /**
     * value: "Asia/Jakarta"
     * @const
     */
    "asiaJakarta": "Asia/Jakarta",
    /**
     * value: "Asia/Saigon"
     * @const
     */
    "asiaSaigon": "Asia/Saigon",
    /**
     * value: "Asia/Bangkok"
     * @const
     */
    "asiaBangkok": "Asia/Bangkok",
    /**
     * value: "Australia/Perth"
     * @const
     */
    "australiaPerth": "Australia/Perth",
    /**
     * value: "Asia/Hong_Kong"
     * @const
     */
    "asiaHongKong": "Asia/Hong_Kong",
    /**
     * value: "Asia/Macao"
     * @const
     */
    "asiaMacao": "Asia/Macao",
    /**
     * value: "Asia/Kuala_Lumpur"
     * @const
     */
    "asiaKualaLumpur": "Asia/Kuala_Lumpur",
    /**
     * value: "Asia/Manila"
     * @const
     */
    "asiaManila": "Asia/Manila",
    /**
     * value: "Asia/Singapore"
     * @const
     */
    "asiaSingapore": "Asia/Singapore",
    /**
     * value: "Asia/Taipei"
     * @const
     */
    "asiaTaipei": "Asia/Taipei",
    /**
     * value: "Asia/Shanghai"
     * @const
     */
    "asiaShanghai": "Asia/Shanghai",
    /**
     * value: "Asia/Seoul"
     * @const
     */
    "asiaSeoul": "Asia/Seoul",
    /**
     * value: "Asia/Tokyo"
     * @const
     */
    "asiaTokyo": "Asia/Tokyo",
    /**
     * value: "Asia/Yakutsk"
     * @const
     */
    "asiaYakutsk": "Asia/Yakutsk",
    /**
     * value: "Australia/Adelaide"
     * @const
     */
    "australiaAdelaide": "Australia/Adelaide",
    /**
     * value: "Australia/Brisbane"
     * @const
     */
    "australiaBrisbane": "Australia/Brisbane",
    /**
     * value: "Australia/Broken_Hill"
     * @const
     */
    "australiaBrokenHill": "Australia/Broken_Hill",
    /**
     * value: "Australia/Darwin"
     * @const
     */
    "australiaDarwin": "Australia/Darwin",
    /**
     * value: "Australia/Eucla"
     * @const
     */
    "australiaEucla": "Australia/Eucla",
    /**
     * value: "Australia/Hobart"
     * @const
     */
    "australiaHobart": "Australia/Hobart",
    /**
     * value: "Australia/Lindeman"
     * @const
     */
    "australiaLindeman": "Australia/Lindeman",
    /**
     * value: "Australia/Sydney"
     * @const
     */
    "australiaSydney": "Australia/Sydney",
    /**
     * value: "Australia/Lord_Howe"
     * @const
     */
    "australiaLordHowe": "Australia/Lord_Howe",
    /**
     * value: "Australia/Melbourne"
     * @const
     */
    "australiaMelbourne": "Australia/Melbourne",
    /**
     * value: "Asia/Magadan"
     * @const
     */
    "asiaMagadan": "Asia/Magadan",
    /**
     * value: "Pacific/Norfolk"
     * @const
     */
    "pacificNorfolk": "Pacific/Norfolk",
    /**
     * value: "Pacific/Auckland"
     * @const
     */
    "pacificAuckland": "Pacific/Auckland"  };
  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "PARTNERSHIP"
     * @const
     */
    "PARTNERSHIP": "PARTNERSHIP",
    /**
     * value: "SOLE_PROPRIETORSHIP"
     * @const
     */
    "SOLE_PROPRIETORSHIP": "SOLE_PROPRIETORSHIP",
    /**
     * value: "CORPORATION"
     * @const
     */
    "CORPORATION": "CORPORATION",
    /**
     * value: "LLC"
     * @const
     */
    "LLC": "LLC",
    /**
     * value: "NON_PROFIT"
     * @const
     */
    "NON_PROFIT": "NON_PROFIT",
    /**
     * value: "TRUST"
     * @const
     */
    "TRUST": "TRUST"  };

  return exports;
}));


