/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.PredefinedSubscriptionRequestBean = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The PredefinedSubscriptionRequestBean model module.
   * @module model/PredefinedSubscriptionRequestBean
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>PredefinedSubscriptionRequestBean</code>.
   * @alias module:model/PredefinedSubscriptionRequestBean
   * @class
   * @param reportDefinitionName {String} Valid Report Definition Name
   * @param subscriptionType {String} The subscription type for which report definition is required. Valid values are CLASSIC and STANDARD. Valid Values:   - CLASSIC   - STANDARD 
   */
  var exports = function(reportDefinitionName, subscriptionType) {
    var _this = this;

    _this['reportDefinitionName'] = reportDefinitionName;
    _this['subscriptionType'] = subscriptionType;








  };

  /**
   * Constructs a <code>PredefinedSubscriptionRequestBean</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PredefinedSubscriptionRequestBean} obj Optional instance to populate.
   * @return {module:model/PredefinedSubscriptionRequestBean} The populated <code>PredefinedSubscriptionRequestBean</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('reportDefinitionName')) {
        obj['reportDefinitionName'] = ApiClient.convertToType(data['reportDefinitionName'], 'String');
      }
      if (data.hasOwnProperty('subscriptionType')) {
        obj['subscriptionType'] = ApiClient.convertToType(data['subscriptionType'], 'String');
      }
      if (data.hasOwnProperty('reportName')) {
        obj['reportName'] = ApiClient.convertToType(data['reportName'], 'String');
      }
      if (data.hasOwnProperty('reportMimeType')) {
        obj['reportMimeType'] = ApiClient.convertToType(data['reportMimeType'], 'String');
      }
      if (data.hasOwnProperty('reportFrequency')) {
        obj['reportFrequency'] = ApiClient.convertToType(data['reportFrequency'], 'String');
      }
      if (data.hasOwnProperty('reportInterval')) {
        obj['reportInterval'] = ApiClient.convertToType(data['reportInterval'], 'String');
      }
      if (data.hasOwnProperty('timezone')) {
        obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
      }
      if (data.hasOwnProperty('startTime')) {
        obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
      }
      if (data.hasOwnProperty('startDay')) {
        obj['startDay'] = ApiClient.convertToType(data['startDay'], 'Number');
      }
      if (data.hasOwnProperty('subscriptionStatus')) {
        obj['subscriptionStatus'] = ApiClient.convertToType(data['subscriptionStatus'], 'String');
      }
    }
    return obj;
  }

  /**
   * Valid Report Definition Name
   * @member {String} reportDefinitionName
   */
  exports.prototype['reportDefinitionName'] = undefined;
  /**
   * The subscription type for which report definition is required. Valid values are CLASSIC and STANDARD. Valid Values:   - CLASSIC   - STANDARD 
   * @member {String} subscriptionType
   */
  exports.prototype['subscriptionType'] = undefined;
  /**
   * @member {String} reportName
   */
  exports.prototype['reportName'] = undefined;
  /**
   * Report Format             Valid Values:   - application/xml   - text/csv 
   * @member {String} reportMimeType
   */
  exports.prototype['reportMimeType'] = undefined;
  /**
   * 'The frequency for which subscription is created. For Standard we can have DAILY, WEEKLY and MONTHLY. But for Classic we will have only DAILY.'  Valid Values: - 'DAILY' - 'WEEKLY' - 'MONTHLY' - 'USER_DEFINED' 
   * @member {String} reportFrequency
   */
  exports.prototype['reportFrequency'] = undefined;
  /**
   * If the reportFrequency is User-defined, reportInterval should be in **ISO 8601 time format** Please refer the following link to know more about ISO 8601 format.[Rfc Time Format](https://en.wikipedia.org/wiki/ISO_8601#Durations)  **Example time format for 2 hours and 30 Mins:**   - PT2H30M **NOTE: Do not document reportInterval field in developer center** 
   * @member {String} reportInterval
   */
  exports.prototype['reportInterval'] = undefined;
  /**
   * By Default the timezone for Standard subscription is PST. And for Classic subscription it will be GMT. If user provides any other time zone apart from PST for Standard subscription api should error out.
   * @member {String} timezone
   */
  exports.prototype['timezone'] = undefined;
  /**
   * The hour at which the report generation should start. It should be in hhmm format. By Default it will be 0000. The format is 24 hours format.
   * @member {String} startTime
   */
  exports.prototype['startTime'] = undefined;
  /**
   * This is the start day if the frequency is WEEKLY or MONTHLY. The value varies from 1-7 for WEEKLY and 1-31 for MONTHLY. For WEEKLY 1 means Sunday and 7 means Saturday. By default the value is 1.
   * @member {Number} startDay
   */
  exports.prototype['startDay'] = undefined;
  /**
   * The status for subscription which is either created or updated. By default it is ACTIVE. Valid Values:   - ACTIVE   - INACTIVE 
   * @member {String} subscriptionStatus
   */
  exports.prototype['subscriptionStatus'] = undefined;



  return exports;
}));


