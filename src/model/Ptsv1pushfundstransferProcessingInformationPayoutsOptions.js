/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.38
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.Ptsv1pushfundstransferProcessingInformationPayoutsOptions = factory(root.CyberSource.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Ptsv1pushfundstransferProcessingInformationPayoutsOptions model module.
   * @module model/Ptsv1pushfundstransferProcessingInformationPayoutsOptions
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>Ptsv1pushfundstransferProcessingInformationPayoutsOptions</code>.
   * @alias module:model/Ptsv1pushfundstransferProcessingInformationPayoutsOptions
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>Ptsv1pushfundstransferProcessingInformationPayoutsOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Ptsv1pushfundstransferProcessingInformationPayoutsOptions} obj Optional instance to populate.
   * @return {module:model/Ptsv1pushfundstransferProcessingInformationPayoutsOptions} The populated <code>Ptsv1pushfundstransferProcessingInformationPayoutsOptions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('sourceCurrency')) {
        obj['sourceCurrency'] = ApiClient.convertToType(data['sourceCurrency'], 'String');
      }
      if (data.hasOwnProperty('destinationCurrency')) {
        obj['destinationCurrency'] = ApiClient.convertToType(data['destinationCurrency'], 'String');
      }
      if (data.hasOwnProperty('sourceAmount')) {
        obj['sourceAmount'] = ApiClient.convertToType(data['sourceAmount'], 'String');
      }
      if (data.hasOwnProperty('retrievalReferenceNumber')) {
        obj['retrievalReferenceNumber'] = ApiClient.convertToType(data['retrievalReferenceNumber'], 'String');
      }
      if (data.hasOwnProperty('accountFundingReferenceId')) {
        obj['accountFundingReferenceId'] = ApiClient.convertToType(data['accountFundingReferenceId'], 'String');
      }
    }
    return obj;
  }

  /**
   * Use a 3-character alpha currency code for source currency of the funds transfer.  Required if sending processingInformation.payoutsOptions.sourceAmount.  ISO standard currencies: http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf 
   * @member {String} sourceCurrency
   */
  exports.prototype['sourceCurrency'] = undefined;
  /**
   * Use a 3-character alpha currency code for destination currency of the funds transfer.  Yellow Pepper  Supported for cross border funds transfers.  ISO standard currencies: http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf 
   * @member {String} destinationCurrency
   */
  exports.prototype['destinationCurrency'] = undefined;
  /**
   * Source Amount is required in certain markets to identify the transaction amount entered in the sender's currency code prior to FX conversion by the originating entity.  Format:  Minimum Value: 0  Maximum value: 999999999.99  Allowed fractional digits: 2 
   * @member {String} sourceAmount
   */
  exports.prototype['sourceAmount'] = undefined;
  /**
   * Unique reference number returned by the processor that identifies the transaction at the network. 
   * @member {String} retrievalReferenceNumber
   */
  exports.prototype['retrievalReferenceNumber'] = undefined;
  /**
   * Visa-generated transaction identifier (TID) that is unique for each original authorization and financial request. 
   * @member {String} accountFundingReferenceId
   */
  exports.prototype['accountFundingReferenceId'] = undefined;



  return exports;
}));


