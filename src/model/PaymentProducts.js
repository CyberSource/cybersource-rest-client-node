/**
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PaymentProductsCardPresentConnect', 'model/PaymentProductsCardProcessing', 'model/PaymentProductsCurrencyConversion', 'model/PaymentProductsCybsReadyTerminal', 'model/PaymentProductsDifferentialFee', 'model/PaymentProductsDigitalPayments', 'model/PaymentProductsECheck', 'model/PaymentProductsPayerAuthentication', 'model/PaymentProductsPayouts', 'model/PaymentProductsSecureAcceptance', 'model/PaymentProductsTax', 'model/PaymentProductsVirtualTerminal'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PaymentProductsCardPresentConnect'), require('./PaymentProductsCardProcessing'), require('./PaymentProductsCurrencyConversion'), require('./PaymentProductsCybsReadyTerminal'), require('./PaymentProductsDifferentialFee'), require('./PaymentProductsDigitalPayments'), require('./PaymentProductsECheck'), require('./PaymentProductsPayerAuthentication'), require('./PaymentProductsPayouts'), require('./PaymentProductsSecureAcceptance'), require('./PaymentProductsTax'), require('./PaymentProductsVirtualTerminal'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.PaymentProducts = factory(root.CyberSource.ApiClient, root.CyberSource.PaymentProductsCardPresentConnect, root.CyberSource.PaymentProductsCardProcessing, root.CyberSource.PaymentProductsCurrencyConversion, root.CyberSource.PaymentProductsCybsReadyTerminal, root.CyberSource.PaymentProductsDifferentialFee, root.CyberSource.PaymentProductsDigitalPayments, root.CyberSource.PaymentProductsECheck, root.CyberSource.PaymentProductsPayerAuthentication, root.CyberSource.PaymentProductsPayouts, root.CyberSource.PaymentProductsSecureAcceptance, root.CyberSource.PaymentProductsTax, root.CyberSource.PaymentProductsVirtualTerminal);
  }
}(this, function(ApiClient, PaymentProductsCardPresentConnect, PaymentProductsCardProcessing, PaymentProductsCurrencyConversion, PaymentProductsCybsReadyTerminal, PaymentProductsDifferentialFee, PaymentProductsDigitalPayments, PaymentProductsECheck, PaymentProductsPayerAuthentication, PaymentProductsPayouts, PaymentProductsSecureAcceptance, PaymentProductsTax, PaymentProductsVirtualTerminal) {
  'use strict';




  /**
   * The PaymentProducts model module.
   * @module model/PaymentProducts
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>PaymentProducts</code>.
   * @alias module:model/PaymentProducts
   * @class
   */
  var exports = function() {
    var _this = this;


















  };

  /**
   * Constructs a <code>PaymentProducts</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PaymentProducts} obj Optional instance to populate.
   * @return {module:model/PaymentProducts} The populated <code>PaymentProducts</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('cardProcessing')) {
        obj['cardProcessing'] = PaymentProductsCardProcessing.constructFromObject(data['cardProcessing']);
      }
      if (data.hasOwnProperty('cardPresentConnect')) {
        obj['cardPresentConnect'] = PaymentProductsCardPresentConnect.constructFromObject(data['cardPresentConnect']);
      }
      if (data.hasOwnProperty('cybsReadyTerminal')) {
        obj['cybsReadyTerminal'] = PaymentProductsCybsReadyTerminal.constructFromObject(data['cybsReadyTerminal']);
      }
      if (data.hasOwnProperty('eCheck')) {
        obj['eCheck'] = PaymentProductsECheck.constructFromObject(data['eCheck']);
      }
      if (data.hasOwnProperty('payerAuthentication')) {
        obj['payerAuthentication'] = PaymentProductsPayerAuthentication.constructFromObject(data['payerAuthentication']);
      }
      if (data.hasOwnProperty('digitalPayments')) {
        obj['digitalPayments'] = PaymentProductsDigitalPayments.constructFromObject(data['digitalPayments']);
      }
      if (data.hasOwnProperty('secureAcceptance')) {
        obj['secureAcceptance'] = PaymentProductsSecureAcceptance.constructFromObject(data['secureAcceptance']);
      }
      if (data.hasOwnProperty('virtualTerminal')) {
        obj['virtualTerminal'] = PaymentProductsVirtualTerminal.constructFromObject(data['virtualTerminal']);
      }
      if (data.hasOwnProperty('currencyConversion')) {
        obj['currencyConversion'] = PaymentProductsCurrencyConversion.constructFromObject(data['currencyConversion']);
      }
      if (data.hasOwnProperty('tax')) {
        obj['tax'] = PaymentProductsTax.constructFromObject(data['tax']);
      }
      if (data.hasOwnProperty('customerInvoicing')) {
        obj['customerInvoicing'] = PaymentProductsTax.constructFromObject(data['customerInvoicing']);
      }
      if (data.hasOwnProperty('recurringBilling')) {
        obj['recurringBilling'] = PaymentProductsTax.constructFromObject(data['recurringBilling']);
      }
      if (data.hasOwnProperty('paymentOrchestration')) {
        obj['paymentOrchestration'] = PaymentProductsTax.constructFromObject(data['paymentOrchestration']);
      }
      if (data.hasOwnProperty('payouts')) {
        obj['payouts'] = PaymentProductsPayouts.constructFromObject(data['payouts']);
      }
      if (data.hasOwnProperty('differentialFee')) {
        obj['differentialFee'] = PaymentProductsDifferentialFee.constructFromObject(data['differentialFee']);
      }
      if (data.hasOwnProperty('payByLink')) {
        obj['payByLink'] = PaymentProductsTax.constructFromObject(data['payByLink']);
      }
      if (data.hasOwnProperty('unifiedCheckout')) {
        obj['unifiedCheckout'] = PaymentProductsTax.constructFromObject(data['unifiedCheckout']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/PaymentProductsCardProcessing} cardProcessing
   */
  exports.prototype['cardProcessing'] = undefined;
  /**
   * @member {module:model/PaymentProductsCardPresentConnect} cardPresentConnect
   */
  exports.prototype['cardPresentConnect'] = undefined;
  /**
   * @member {module:model/PaymentProductsCybsReadyTerminal} cybsReadyTerminal
   */
  exports.prototype['cybsReadyTerminal'] = undefined;
  /**
   * @member {module:model/PaymentProductsECheck} eCheck
   */
  exports.prototype['eCheck'] = undefined;
  /**
   * @member {module:model/PaymentProductsPayerAuthentication} payerAuthentication
   */
  exports.prototype['payerAuthentication'] = undefined;
  /**
   * @member {module:model/PaymentProductsDigitalPayments} digitalPayments
   */
  exports.prototype['digitalPayments'] = undefined;
  /**
   * @member {module:model/PaymentProductsSecureAcceptance} secureAcceptance
   */
  exports.prototype['secureAcceptance'] = undefined;
  /**
   * @member {module:model/PaymentProductsVirtualTerminal} virtualTerminal
   */
  exports.prototype['virtualTerminal'] = undefined;
  /**
   * @member {module:model/PaymentProductsCurrencyConversion} currencyConversion
   */
  exports.prototype['currencyConversion'] = undefined;
  /**
   * @member {module:model/PaymentProductsTax} tax
   */
  exports.prototype['tax'] = undefined;
  /**
   * @member {module:model/PaymentProductsTax} customerInvoicing
   */
  exports.prototype['customerInvoicing'] = undefined;
  /**
   * @member {module:model/PaymentProductsTax} recurringBilling
   */
  exports.prototype['recurringBilling'] = undefined;
  /**
   * @member {module:model/PaymentProductsTax} paymentOrchestration
   */
  exports.prototype['paymentOrchestration'] = undefined;
  /**
   * @member {module:model/PaymentProductsPayouts} payouts
   */
  exports.prototype['payouts'] = undefined;
  /**
   * @member {module:model/PaymentProductsDifferentialFee} differentialFee
   */
  exports.prototype['differentialFee'] = undefined;
  /**
   * @member {module:model/PaymentProductsTax} payByLink
   */
  exports.prototype['payByLink'] = undefined;
  /**
   * @member {module:model/PaymentProductsTax} unifiedCheckout
   */
  exports.prototype['unifiedCheckout'] = undefined;



  return exports;
}));


