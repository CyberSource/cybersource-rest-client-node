{
    "swagger": "2.0",
    "info": {
        "description": "All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html",
        "version": "0.0.1",
        "title": "CyberSource Merged Spec"
    },
    "host": "apitest.cybersource.com",
    "schemes": [
        "https"
    ],
    "basePath": "/",
    "consumes": [
        "application/json;charset=utf-8"
    ],
    "produces": [
        "application/json;charset=utf-8"
    ],
    "tags": [],
    "x-devcenter-metaData": {
        "categoryTagArray": []
    },
    "paths": {
        "/flex/v1/keys": {
            "x-name": "Generate Key",
            "x-description": "Generate a one-time use public key and key ID to encrypt the card number in the follow-on Tokenize Card request. The key used to encrypt the card number on the cardholder\u2019s device or browser is valid for 15 minutes and must be used to verify the signature in the response message. CyberSource recommends creating a new key for each order. Generating a key is an authenticated request initiated from your servers, prior to requesting to tokenize the card data from your customer\u2019s device or browser.",
            "post": {
                "tags": [
                    "Key Generation"
                ],
                "summary": "Generate Key",
                "description": "Generate a one-time use public key and key ID to encrypt the card number in the follow-on Tokenize Card request. The key used to encrypt the card number on the cardholder\u2019s device or browser is valid for 15 minutes and must be used to verify the signature in the response message. CyberSource recommends creating a new key for each order. Generating a key is an authenticated request initiated from your servers, prior to requesting to tokenize the card data from your customer\u2019s device or browser.",
                "operationId": "generatePublicKey",
                "x-devcenter-metaData": {
                    "categoryTag": "Flex"
                },
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "generatePublicKeyRequest",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "encryptionType"
                            ],
                            "properties": {
                                "encryptionType": {
                                    "type": "string",
                                    "description": "How the card number should be encrypted in the subsequent Tokenize Card request. Possible values are RsaOaep256 or None (if using this value the card number must be in plain text when included in the Tokenize Card request). The Tokenize Card request uses a secure connection (TLS 1.2+) regardless of what encryption type is specified."
                                }
                            }
                        }
                    }
                ],
                "x-example": {
                    "example0": {
                        "summary": "Generate Key",
                        "value": {
                            "encryptionType": "RsaOaep256"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieved key.",
                        "schema": {
                            "title": "flexV1KeysPost200Response",
                            "properties": {
                                "keyId": {
                                    "type": "string",
                                    "description": "Unique identifier for the generated token. Used in the subsequent Tokenize Card request from your customer\u2019s device or browser."
                                },
                                "der": {
                                    "type": "object",
                                    "description": "The public key in DER format. Used to validate the response from the Tokenize Card request. Additionally this format is useful for client side encryption in Android and iOS implementations.",
                                    "properties": {
                                        "format": {
                                            "type": "string",
                                            "description": "Specifies the format of the public key; currently X.509."
                                        },
                                        "algorithm": {
                                            "type": "string",
                                            "description": "Algorithm used to encrypt the public key."
                                        },
                                        "publicKey": {
                                            "type": "string",
                                            "description": "Base64 encoded public key value."
                                        }
                                    }
                                },
                                "jwk": {
                                    "type": "object",
                                    "description": "The public key in JSON Web Key (JWK) format. This format is useful for client side encryption in JavaScript based implementations.",
                                    "properties": {
                                        "kty": {
                                            "type": "string",
                                            "description": "Algorithm used to encrypt the public key."
                                        },
                                        "use": {
                                            "type": "string",
                                            "description": "Defines whether to use the key for encryption (enc) or verifying a signature (sig). Always returned as enc."
                                        },
                                        "kid": {
                                            "type": "string",
                                            "description": "The key ID in JWK format."
                                        },
                                        "n": {
                                            "type": "string",
                                            "description": "JWK RSA Modulus"
                                        },
                                        "e": {
                                            "type": "string",
                                            "description": "JWK RSA Exponent"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error retrieving key.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "responseStatus": {
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP Status code."
                                        },
                                        "reason": {
                                            "type": "string",
                                            "description": "Error Reason Code."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Error Message."
                                        },
                                        "correlationId": {
                                            "type": "string",
                                            "description": "API correlation ID."
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "location": {
                                                        "type": "string",
                                                        "description": "Field name referred to for validation issues."
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Description or code of any error response."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "next": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string",
                                                        "description": "URI of the linked resource."
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Label of the linked resource."
                                                    },
                                                    "method": {
                                                        "type": "string",
                                                        "description": "HTTP method of the linked resource."
                                                    }
                                                }
                                            }
                                        },
                                        "documentation": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string",
                                                        "description": "URI of the linked resource."
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Label of the linked resource."
                                                    },
                                                    "method": {
                                                        "type": "string",
                                                        "description": "HTTP method of the linked resource."
                                                    }
                                                }
                                            }
                                        },
                                        "self": {
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "URI of the linked resource."
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Label of the linked resource."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "HTTP method of the linked resource."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-samplePayload": {
                    "encryptionType": "RsaOaep256"
                },
                "x-sampleResponse": {
                    "keyId": "05BgbFie7vX5vzSMKOoqEAAdfpdR4kas",
                    "der": {
                        "format": "X.509",
                        "algorithm": "RSA",
                        "publicKey": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgC1G6rVue4w/jjJrKPZusGN9G+Y7mWuLJ0O2/GHd94LvR51+ok7ahuQUVMZLdigixnspaGo/WVLvTTZ5J28Cc1uSx0o/BsxpNaAQD8/aBZL3nnAiBLACxI1JHAVo7SXbJQmz+mqVFYTppg9QmpB2ATTmXjUOQy+Fqkw3EByfCANHhHSNs4+HASovsfcRMUmmvDfTd5qBb23KzDJeDVqTYWa3XjUorlZOCJuLyPgeDEK8oOC9C4W9dn32z8FJ4E6Dz28M/2O3g8FLQD2F+NezkQJsl8MEYo4rl1nr7/oIkMsYLCCoG8jwmryErb7km9JWWgqZ80trkjijFqDAbHfUEwIDAQAB"
                    },
                    "jwk": {
                        "kty": "RSA",
                        "use": "enc",
                        "kid": "05BgbFie7vX5vzSMKOoqEAAdfpdR4kas",
                        "n": "fC1G6rVue4w_jjJrKPZusGN9G-Y7mWuLJ0O2_GHd94LvR51-ok7ahuQUVMZLdigixnspaGo_WVLvTTZ5J28Cc1uSx0o_BsxpNaAQD8_aBZL3nnAiBLACxI1JHAVo7SXAJQmz-mqVFYTppg9QmpB2ATTmXjUOQy-Fqkw3EByfCANHhHSNs4-HASovsfcRMUmmvDfTd5qBb23KzDJeDVqTYWa3XjUorlZOCJuLyPgeDEK8oOC9C4W9dn32z8FJ4E6Dz28M_2O3g8FLQD2F-NezkQJsl8MEYo4rl1nr7_oIkMsYLCCoG8jwmryErb7km9JWWgqZ80trkjijFqDAbHfUEw",
                        "e": "AQAB"
                    }
                }
            }
        },
        "/flex/v1/tokens": {
            "x-name": "Tokenize Card",
            "x-description": "Returns a token representing the supplied card details. The token replaces card data and can be used as the Subscription ID in the CyberSource Simple Order API or SCMP API. This is an unauthenticated call that you should initiate from your customer\u2019s device or browser.",
            "post": {
                "tags": [
                    "tokenization"
                ],
                "summary": "Tokenize card",
                "description": "Returns a token representing the supplied card details. The token replaces card data and can be used as the Subscription ID in the CyberSource Simple Order API or SCMP API. This is an unauthenticated call that you should initiate from your customer\u2019s device or browser.",
                "operationId": "tokenize",
                "x-devcenter-metaData": {
                    "categoryTag": "Flex",
                    "isClientSideApi": true,
                    "noAuth": true
                },
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "tokenizeRequest",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "keyId"
                            ],
                            "properties": {
                                "keyId": {
                                    "type": "string",
                                    "description": "Unique identifier for the generated token. This is obtained from the Generate Key request. See the [Java Script and Java examples] (http://apps.cybersource.com/library/documentation/dev_guides/Secure_Acceptance_Flex/Key/html) on how to import the key and encrypt using the imported key."
                                },
                                "cardInfo": {
                                    "type": "object",
                                    "required": [
                                        "cardNumber",
                                        "cardType"
                                    ],
                                    "properties": {
                                        "cardNumber": {
                                            "type": "string",
                                            "description": "Encrypted or plain text card number. If the encryption type of \u201cNone\u201d was used in the Generate Key request, this value can be set to the plaintext card number/Personal Account Number (PAN). If the encryption type of RsaOaep256 was used in the Generate Key request, this value needs to be the RSA OAEP 256 encrypted card number. The card number should be encrypted on the cardholders\u2019 device. The [WebCrypto API] (https://github.com/CyberSource/cybersource-flex-samples/blob/master/java/spring-boot/src/main/resources/public/flex.js) can be used with the JWK obtained in the Generate Key request."
                                        },
                                        "cardExpirationMonth": {
                                            "type": "string",
                                            "description": "Two digit expiration month"
                                        },
                                        "cardExpirationYear": {
                                            "type": "string",
                                            "description": "Four digit expiration year"
                                        },
                                        "cardType": {
                                            "type": "string",
                                            "description": "Card Type. This field is required. Refer to the CyberSource Credit Card Services documentation for supported card types."
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "x-example": {
                    "example0": {
                        "summary": "Flex Tokenize Card",
                        "value": {
                            "keyId": "08z9hCmn4pRpdNhPJBEYR3Mc2DGLWq5j",
                            "cardInfo": {
                                "cardNumber": "4111111111111111",
                                "cardExpirationMonth": "12",
                                "cardExpirationYear": "2031",
                                "cardType": "001"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created payment token.",
                        "schema": {
                            "title": "flexV1TokensPost200Response",
                            "properties": {
                                "keyId": {
                                    "type": "string",
                                    "description": "The Key ID."
                                },
                                "token": {
                                    "type": "string",
                                    "description": "The generated token. The token replaces card data and is used as the Subscription ID in the CyberSource Simple Order API or SCMP API."
                                },
                                "maskedPan": {
                                    "type": "string",
                                    "description": "The masked card number displaying the first 6 digits and the last 4 digits."
                                },
                                "cardType": {
                                    "type": "string",
                                    "description": "The card type."
                                },
                                "timestamp": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The UTC date and time in milliseconds at which the signature was generated."
                                },
                                "signedFields": {
                                    "type": "string",
                                    "description": "Indicates which fields from the response make up the data that is used when verifying the response signature. See the [sample code] (https://github.com/CyberSource/cybersource-flex-samples/blob/master/java/spring-boot/src/main/java/com/cybersource/flex/application/CheckoutController.java) on how to verify the signature."
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "Flex-generated digital signature. To ensure the values have not been tampered with while passing through the client, verify this server-side using the public key generated from the /keys resource."
                                },
                                "discoverableServices": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error creating token.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "responseStatus": {
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP Status code."
                                        },
                                        "reason": {
                                            "type": "string",
                                            "description": "Error Reason Code."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Error Message."
                                        },
                                        "correlationId": {
                                            "type": "string",
                                            "description": "API correlation ID."
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "location": {
                                                        "type": "string",
                                                        "description": "Field name referred to for validation issues."
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Description or code of any error response."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "next": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string",
                                                        "description": "URI of the linked resource."
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Label of the linked resource."
                                                    },
                                                    "method": {
                                                        "type": "string",
                                                        "description": "HTTP method of the linked resource."
                                                    }
                                                }
                                            }
                                        },
                                        "documentation": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string",
                                                        "description": "URI of the linked resource."
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Label of the linked resource."
                                                    },
                                                    "method": {
                                                        "type": "string",
                                                        "description": "HTTP method of the linked resource."
                                                    }
                                                }
                                            }
                                        },
                                        "self": {
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "URI of the linked resource."
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Label of the linked resource."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "HTTP method of the linked resource."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-samplePayload": {
                    "keyId": "05BgbFie7vX5vzSMKOoqEAAdfpdR4kas",
                    "cardDetails": {
                        "cardNumber": "ejbhIpMEgYnIODcB4//rrVxMHrqHcnLD6pDRF36jlEk72bETAfiOoxmpI9pGiidqMmkgAnvJfVgR3CLAV5EdG4Mu5IWK26QRnVtwvsVEUtpah7IylbxV9MLvXh2FjIJskKCWNLidb1G4PN5963hnV3IoZd2pF99JwV9lPhOHT5ymlNeg7sTzQQDN1I0/yJApds+t79hl9QVp4PusUDfSsPQTtR2frzlH4V3W+XjHDhmy5oNhiUaVxv27cyG1SWeCKkVC9tc8zLy4pvlgoplrLV8JRaS9hfWalJjv2xtk3DXmNT2urtFv2evcI3LM/S29KlJjPXZcBp0IYyB/taunCA==",
                        "cardType": "001"
                    }
                },
                "x-sampleResponse": {
                    "keyId": "05BgbFie7vX5vzSMKOoqEAAdfpdR4kas",
                    "token": "0100153497304242",
                    "maskedPan": "424242XXXXXX4242",
                    "cardType": "001",
                    "timestamp": 1472733222651,
                    "signedFields": "token,cardType,maskedPan,timestamp",
                    "signature": "TcM7METFOIidwbxWG2Xhawx/5gZ7hZB0Lyrhg3NRJ+Pma+Nq7BugvsqLCE2R24+h13xnM6vpJXR2cqfQPkxhb6joJT8jcciEf+lj6h/KjvXuR4pJ4fMll4WS1Z4+574ps0ysV/5zs7kT2IAZj7i+szlYwFJxGhOGC0218x1N0NxELTDyU/HI6n+Aa+mYBqkMXth42t+GNQ7goVXkJWRgQSjp2v0WTh2d2plDnxEWPURZXz7GLdQXRIYUWWx/L5JSf88F1zgjYDpBitNSYBMMILKfDd3KEg+6nIruCln5kDMbTRD8LwPpGYC9tyM9+UM8MBINPHhaqdFp2wHF7dccKA==",
                    "discoverableServices": {}
                }
            }
        },
        "/pts/v2/payments/": {
            "post": {
                "summary": "Process a Payment",
                "description": "Authorize the payment for the transaction.\n",
                "tags": [
                    "payments"
                ],
                "operationId": "createPayment",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "createPaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "transactionId": {
                                            "type": "string",
                                            "description": "Identifier that you assign to the transaction.\n\n**Note** Use this field only if you want to support merchant-initiated reversal and void operations.\n\nSee page 250 on [Merchant-Initiated Reversals and Voids.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SO_API/Credit_Cards_SO_API.pdf)\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "originalTransactionId": {
                                                    "type": "string",
                                                    "maxLength": 32,
                                                    "description": "Value that links the previous transaction to the current follow-on request. This value is assigned by the client\nsoftware that is installed on the POS terminal, which makes it available to the terminal\u2019s software and to\nCyberSource. Therefore, you can use this value to reconcile transactions between CyberSource and the terminal\u2019s\nsoftware.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                },
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "capture": {
                                            "type": "boolean",
                                            "description": "Flag that specifies whether to also include capture service in the submitted request or not.\n\nPossible values:\n- **true**\n- **false** (default).\n",
                                            "enum": [
                                                true,
                                                false
                                            ],
                                            "default": false
                                        },
                                        "processorId": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Value that identifies the processor/acquirer to use for the transaction. This value is supported only for\n**CyberSource through VisaNet**.\n\nContact CyberSource Customer Support to get the value for this field.\n"
                                        },
                                        "businessApplicationId": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "commerceIndicator": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Type of transaction. Some payment card companies use this information when determining discount rates. When you\nomit this field for **Ingenico ePayments**, the processor uses the default transaction type they have on file\nfor you instead of the default value listed here.\n"
                                        },
                                        "paymentSolution": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Type of digital payment solution for the transaction. Possible Values:\n\n - **visacheckout**: Visa Checkout. This value is required for Visa Checkout transactions. See Visa Checkout Using the SCMP API.\n - **005**: Masterpass. This value is required for Masterpass transactions on OmniPay Direct. See \"Masterpass,\" page 153.\n"
                                        },
                                        "reconciliationId": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Please check with Cybersource customer support to see if your merchant account is configured correctly so you\ncan include this field in your request.\n* For Payouts: max length for FDCCompass is String (22).\n"
                                        },
                                        "linkId": {
                                            "type": "string",
                                            "maxLength": 26,
                                            "description": "Value that links the current authorization request to the original authorization request. Set this value\nto the ID that was returned in the reply message from the original authorization request.\n\nThis value is used for:\n\n - Partial authorizations: See \"Partial Authorizations,\" page 88.\n - Split shipments: See \"Split Shipments,\" page 210.\n"
                                        },
                                        "purchaseLevel": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Set this field to 3 to indicate that the request includes Level III data."
                                        },
                                        "reportGroup": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Attribute that lets you define custom grouping for your processor reports. This field is supported only for **Worldpay VAP**.\n\nSee \"Report Groups,\" page 234.\n"
                                        },
                                        "visaCheckoutId": {
                                            "type": "string",
                                            "maxLength": 48,
                                            "description": "Identifier for the **Visa Checkout** order. Visa Checkout provides a unique order ID for every transaction in\nthe Visa Checkout **callID** field.\n\nFor more details, see Visa Checkout Using the SCMP API.\n"
                                        },
                                        "authorizationOptions": {
                                            "type": "object",
                                            "properties": {
                                                "authType": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Authorization type.\n\nPossible values:\n\n - **AUTOCAPTURE**: automatic capture.\n - **STANDARDCAPTURE**: standard capture.\n - **VERBAL**: forced capture. Include it in the payment request for a forced capture. Include it in the capture request for a verbal payment.\n\n**Asia, Middle East, and Africa Gateway; Cielo; Comercio Latino; and CyberSource Latin American Processing**\\\nSet this field to _AUTOCAPTURE_ and include it in a bundled request to indicate that you are requesting an automatic capture. If your account is configured to enable automatic captures, set this field to STANDARDCAPTURE and include it in a standard authorization or bundled request to indicate that you are overriding an automatic capture. For more information, see \"Automatic Captures,\" page 33.\n\n**Forced Capture**\\\nSet this field to _VERBAL_ and include it in the authorization request to indicate that you are performing a forced capture; therefore, you receive the authorization code outside the CyberSource system. For more information, see \"Forced Captures,\" page 123.\n\n**Verbal Authorization**\\\nSet this field to _VERBAL_ and include it in the capture request to indicate that the request is for a verbal authorization. For more information, see \"Verbal Authorizations,\" page 84.\n\nFor processor-specific information, see the auth_type field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "verbalAuthCode": {
                                                    "type": "string",
                                                    "maxLength": 7,
                                                    "description": "Authorization code.\n\n**Forced Capture**\\\nUse this field to send the authorization code you received from a payment that you authorized\noutside the CyberSource system.\n\n**Verbal Authorization**\\\nUse this field in CAPTURE API to send the verbally received authorization code.\n\nFor processor-specific information, see the _auth_code_ field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "verbalAuthTransactionId": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Transaction ID (TID)."
                                                },
                                                "authIndicator": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that specifies the purpose of the authorization.\n\nPossible values:\n - **0**: Preauthorization\n - **1**: Final authorization\n\nTo set the default for this field, contact CyberSource Customer Support.\nSee \"Final Authorization Indicator,\" page 119.\n\nBarclays and Elavon\nThe default for Barclays and Elavon is 1 (final authorization). To change the default for this field, contact CyberSource Customer Support.\n\nCyberSource through VisaNet\nWhen the value for this field is 0, it corresponds to the following data in the TC 33 capture file5:\n - Record: CP01 TCR0\n - Position: 164\n - Field: Additional Authorization Indicators\nWhen the value for this field is 1, it does not correspond to any data in the TC 33 capture file.\n\nFor processor-specific information, see the auth_indicator field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "partialAuthIndicator": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether the transaction is enabled for partial authorization or not. When your request\nincludes this field, this value overrides the information in your CyberSource account.  For processor-specific\ninformation, see the _auth_partial_auth_indicator_ field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\\\nTo set the default for this field, contact CyberSource Customer Support.\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR0\n- Position: 164\n- Field: Additional Authorization Indicators\n\nPossible values:\n- **true** Enable the transaction for partial authorization.\n- **false** Do not enable the transaction for partial authorization.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                },
                                                "balanceInquiry": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether to return balance information.\n\nPossible values:\n- **true**\n- **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                },
                                                "ignoreAvsResult": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether to allow the capture service to run, even when the payment\nreceives an AVS decline.\n\nPossible values:\n- **true**  Ignore the results of AVS checking and run the capture service.\n- **false**  (default): If the authorization receives an AVS decline, do not run the capture service.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                },
                                                "declineAvsFlags": {
                                                    "type": "array",
                                                    "description": "An array of AVS flags that cause the reply flag to be returned.\n\n`Important` To receive declines for the AVS code N, include the value N in the array.\n\nPossible values:\n- D\n- A\n- V\n- S\n- N\n- O\n",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "D",
                                                            "A",
                                                            "V",
                                                            "S",
                                                            "N",
                                                            "O"
                                                        ]
                                                    }
                                                },
                                                "ignoreCvResult": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether to allow the capture service to run even when\nthe payment receives a CVN decline.\n\nPossible values:\n- **true**  Ignore the results of CVN checking and run the capture service.\n- **false**  (default) If the authorization receives a CVN decline, do not run the capture service.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                },
                                                "initiator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "description": "This field indicates whether the transaction is a merchant-initiated transaction or customer-initiated transaction.\n\nValid values:\n- **customer**\n- **merchant**\n",
                                                            "enum": [
                                                                "customer",
                                                                "merchant"
                                                            ]
                                                        },
                                                        "credentialStoredOnFile": {
                                                            "type": "boolean",
                                                            "description": "Flag that indicates whether merchant intends to use this transaction to store payment credentials for follow-up\nmerchant-initiated transactions.\n\nValid values:\n- `true` means merchant will use this transaction to store payment credentials for follow-up merchant-initiated transactions.\n- `false` means merchant will not use this transaction to store payment credentials for follow-up merchant-initiated transactions.\n\nSee \"Merchant-Initiated Transactions,\" page 177.\n\n**NOTE:** The value for this field does not correspond to any data in the TC 33 capture file5.\nThis field is supported only for Visa transactions on CyberSource through VisaNet.\n",
                                                            "enum": [
                                                                true,
                                                                false
                                                            ]
                                                        },
                                                        "storedCredentialUsed": {
                                                            "type": "boolean",
                                                            "description": "Flag that indicates whether merchant is intend to use this transaction to store payment credential for follow-up\nmerchant-initiated transactions or not.\n\nPossible values:\n- **true**\n- **false**\n",
                                                            "enum": [
                                                                true,
                                                                false
                                                            ]
                                                        },
                                                        "merchantInitiatedTransaction": {
                                                            "type": "object",
                                                            "properties": {
                                                                "reason": {
                                                                    "type": "string",
                                                                    "maxLength": 1,
                                                                    "description": "Reason for the merchant-initiated transaction or incremental authorization. Possible values:\n- `1`: Resubmission\n- `2`: Delayed charge\n- `3`: Reauthorization for split shipment\n- `4`: No show\n- `5`: Account top up\nThis field is required only for the five kinds of transactions in the preceding list.\nThis field is supported only for merchant-initiated transactions and incremental authorizations.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR0\n- Position: 160-163\n- Field: Message Reason Code\n\n**All Processors**\\\nSee \"Merchant-Initiated Transactions,\" page 196. For CyberSource through VisaNet, see also \"Incremental Authorizations,\" page 40.\n"
                                                                },
                                                                "previousTransactionId": {
                                                                    "type": "string",
                                                                    "maxLength": 15,
                                                                    "description": "Network transaction identifier that was returned in the payment response field _processorInformation.transactionID_\nin the reply message for either the original merchant-initiated payment in the series or the previous\nmerchant-initiated payment in the series.\n\nIf the current payment request includes a token instead of an account number, the following time limits apply for the value of this field:\n- For a **resubmission**, the transaction ID must be less than 14 days old.\n- For a **delayed charge** or **reauthorization**, the transaction ID must be less than 30 days old.\n\n**NOTE**: The value for this field does not correspond to any data in the TC 33 capture file5. This field is supported\nonly for Visa transactions on CyberSource through VisaNet.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "billPayment": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates that this is a payment for a bill or for an existing contractual loan. See \"Visa Bill Payments,\" page 220, and \"Visa Debt Repayments,\" page 221, for lists of processors that support these features.\n\nPossible values:\n- true: Bill payment or loan payment.\n- false (default): Not a bill payment or loan payment.\n"
                                                },
                                                "billPaymentType": {
                                                    "type": "string",
                                                    "description": "Reason for the payment.\n\nPossible values:\n- 001: Utility payment\n- 002: Government services\n- 003: Mobile phone top-up\n- 004: Coupon payment\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR0\n- Position: 48-50\n- Field: Bill Payment Transaction Type Identifier\n\nThis field is supported only for bill payments in Brazil with Mastercard on CyberSource through VisaNet.\nSee Mastercard Bill Payments.\n\nNote For information about bill payments with Visa, see Visa Bill Payments.\n"
                                                }
                                            }
                                        },
                                        "captureOptions": {
                                            "type": "object",
                                            "properties": {
                                                "captureSequenceNumber": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 99,
                                                    "description": "Capture number when requesting multiple partial captures for one payment.\nUsed along with _totalCaptureCount_ to track which capture is being processed.\n\nFor example, the second of five captures would be passed to CyberSource as:\n  - _captureSequenceNumber_ = 2, and\n  - _totalCaptureCount_ = 5\n"
                                                },
                                                "totalCaptureCount": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 99,
                                                    "description": "Total number of captures when requesting multiple partial captures for one payment.\nUsed along with _captureSequenceNumber_ which capture is being processed.\n\nFor example, the second of five captures would be passed to CyberSource as:\n  - _captureSequenceNumber_ = 2, and\n  - _totalCaptureCount_ = 5\n"
                                                },
                                                "dateToCapture": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Date on which you want the capture to occur. This field is supported only for CyberSource through VisaNet.\\\n`Format: MMDD`\n"
                                                }
                                            }
                                        },
                                        "recurringOptions": {
                                            "type": "object",
                                            "properties": {
                                                "loanPayment": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether this is a payment towards an existing contractual loan.\n\nPossible values:\n- **true** Loan payment\n- **false** (default) Not a loan payment\n\nSee \"Visa Debt Repayments,\" page 218, for a list of processors that support this feature.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                },
                                                "firstRecurringPayment": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether this transaction is the first in a series of recurring payments.\n\nThis field is supported only for **Atos**, **FDC Nashville Global**, and **OmniPay Direct**.\n\nPossible values:\n - **true** Indicates this is the first payment in a series of recurring payments\n - **false** (default) Indicates this is not the first payment in a series of recurring payments.\n\nFor more details, see \"Recurring Payments,\" page 198.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                }
                                            }
                                        },
                                        "bankTransferOptions": {
                                            "type": "object",
                                            "properties": {
                                                "declineAvsFlags": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "List of AVS flags that cause the request to be declined for AVS reasons. Use a space to separate the flags in\nthe list. Important Make sure that you include the value N in the list if you want to receive declines for the\nAVS code N.\n"
                                                },
                                                "secCode": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Authorization method used for the transaction. See \"SEC Codes,\" page 89.\n\nTeleCheck Accepts only the following values:\n- **PPD**\n- **TEL**\n- **WEB**\n"
                                                },
                                                "terminalCity": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "City in which the terminal is located. If more than four alphanumeric characters are submitted, the transaction\nwill be declined.\n\nYou cannot include any special characters.\n"
                                                },
                                                "terminalState": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State in which the terminal is located. If more than two alphanumeric characters are submitted, the transaction\nwill be declined.\n\nYou cannot include any special characters.\n"
                                                },
                                                "effectiveDate": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Effective date for the transaction. The effective date must be within 45 days of the current day. If you do not\ninclude this value, CyberSource sets the effective date to the next business day.\n\nFormat: `MMDDYYYY`\n\nSupported only for the CyberSource ACH Service.\n"
                                                },
                                                "partialPaymentId": {
                                                    "type": "string",
                                                    "maxLength": 25,
                                                    "description": "Identifier for a partial payment or partial credit.\n\nThe value for each debit request or credit request must be unique within the scope of the order. See \"Multiple\nPartial Credits,\" page 41.\n"
                                                },
                                                "customerMemo": {
                                                    "type": "string",
                                                    "maxLength": 80,
                                                    "description": "Payment related information.\n\nThis information is included on the customer\u2019s statement.\n"
                                                },
                                                "paymentCategoryCode": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates whether to process the payment.\n\nUse with deferred payments. See \"Deferred and Partial Payments,\" page 37.\n\nPossible values:\n- **0**: Standard debit with immediate payment (default).\n- **1**: For deferred payments, indicates that this is a deferred payment and that you will send a debit request\nwith `paymentCategoryCode = 2` in the future.\n- **2**: For deferred payments, indicates notification to initiate payment.\n\nChase Paymentech Solutions and TeleCheck Use for deferred and partial payments.\n\nCyberSource ACH Service Not used.\n\nRBS WorldPay Atlanta Not used.\n"
                                                },
                                                "settlementMethod": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Method used for settlement.\n\nPossible values:\n- **A**: Automated Clearing House (default for credits and for transactions using Canadian dollars)\n- **F**: Facsimile draft (U.S. dollars only)\n- **B**: Best possible (U.S. dollars only) (default if the field has not already been configured for your\nmerchant ID)\n\nSee \"Settlement Delivery Methods,\" page 44.\n"
                                                },
                                                "fraudScreeningLevel": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Level of fraud screening.\n\nPossible values:\n- **1**: Validation \u2014 default if the field has not already been configured for your merchant ID\n- **2**: Verification\n\nFor a description of this feature and a list of supported processors, see \"Verification and Validation,\" page 24.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "issuerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "discretionaryData": {
                                            "type": "string",
                                            "maxLength": 255,
                                            "description": "Data defined by the issuer.\n\nThe value for this reply field will probably be the same as the value that you submitted in the authorization request, but it is possible for the processor, issuer, or acquirer to modify the value.\n\nThis field is supported only for Visa transactions on **CyberSource through VisaNet**.\n\nFor more information, see Appendix K, \"Formats for  Discretionary Data,\" on page 359.\n"
                                        }
                                    }
                                },
                                "paymentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "The customer\u2019s payment card number, also knows as the Primary Account Nunmber (PAN). You can also use this field\nfor encoded account numbers.\n\nFor processor-specific information, see the `customer_cc_number` field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Two-digit month in which the payment card expires.\n\nFormat: `MM`.\n\nValid values: `01` through `12`.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`01` through `12`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `12`.\n\nFor processor-specific information, see the `customer_cc_expmo` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Four-digit year in which the credit card expires.\n\nFormat: `YYYY`.\n\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`1900` through `3000`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**FDC Nashville Global and FDMS South**\\\nYou can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `2021`.\n\nFor processor-specific information, see the `customer_cc_expyr` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                },
                                                "useAs": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Flag that specifies the type of account associated with the card. The cardholder provides this information\nduring the payment process.\n\n**Cielo** and **Comercio Latino**\n\nPossible values:\n\n - CREDIT: Credit card\n - DEBIT: Debit card\n\nThis field is required for:\n - Debit transactions on Cielo and Comercio Latino.\n - Transactions with Brazilian-issued cards on CyberSource through VisaNet.\n"
                                                },
                                                "sourceAccountType": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Flag that specifies the type of account associated with the card. The cardholder provides this information\nduring the payment process.\n\nThis field is required in the following cases:\n  - Debit transactions on Cielo and Comercio Latino.\n  - Transactions with Brazilian-issued cards on CyberSource through VisaNet.\n  - Applicable only for Visa Platform Connect (VPC).\n    \n**Note**\\\nCombo cards in Brazil contain credit and debit functionality in a single card. Visa systems use a credit bank\nidentification number (BIN) for this type of card. Using the BIN to determine whether a card is debit or\ncredit can cause transactions with these cards to be processed incorrectly. CyberSource strongly recommends\nthat you include this field for combo card transactions.\n\nPossible values include the following.\n\n - **CHECKING**: Checking account\n - **CREDIT**: Credit card account\n - **SAVING**: Saving account\n - **LINE_OF_CREDIT**: Line of credit or credit portion of combo card\n - **PREPAID**: Prepaid card account or prepaid portion of combo card\n - **UNIVERSAL**: Universal account\n"
                                                },
                                                "securityCode": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Card Verification Number.\n\n**Ingenico ePayments**\nDo not include this field when _commerceIndicator=recurring_.\n**Note** Ingenico ePayments was previously called Global Collect.\n"
                                                },
                                                "securityCodeIndicator": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates whether a CVN code was sent. Possible values:\n\n - 0 (default): CVN service not requested. CyberSource uses this default value when you do not include\n     _securityCode_ field in the request.\n - 1 (default): CVN service requested and supported. CyberSource uses this default value when you include\n     _securityCode_ field in the request.\n - 2: CVN on credit card is illegible.\n - 9: CVN was not imprinted on credit card.\n"
                                                },
                                                "accountEncoderId": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Identifier for the issuing bank that provided the customer\u2019s encoded account number. Contact your processor for the bank\u2019s ID.\n"
                                                },
                                                "issueNumber": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder. The card might or might not have an issue number. The number can consist of one or two digits, and the first digit might be a zero. When you include this value in your request, include exactly what is printed on the card. A value of 2 is different than a value of 02. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card.\n\n**Note** The issue number is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "startMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Month of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: MM`. Possible values: 01 through 12.\n\n**Note** The start date is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "startYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Year of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: YYYY`.\n\n**Note** The start date is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "productName": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Name of the card product.\n\nPossible value:\n- BNDES\n\nThis field is supported only for BNDES transactions on CyberSource through VisaNet. See BNDES.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR4\n- Position: 115-120\n- Field: Brazil Country Data\n"
                                                }
                                            }
                                        },
                                        "tokenizedCard": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Customer\u2019s payment network token value.\n"
                                                },
                                                "expirationMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Two-digit month in which the payment network token expires. `Format: MM`. Possible values: 01 through 12.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (01 through 12) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use 12.\n\nFor processor-specific information, see the customer_cc_expmo field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Four-digit year in which the payment network token expires. `Format: YYYY`.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (1900 through 3000) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**FDC Nashville Global and FDMS South**\\\nYou can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (card_type=039), if there is no expiration date on the card, use 2021.\n\nFor processor-specific information, see the customer_cc_expyr field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                },
                                                "cryptogram": {
                                                    "type": "string",
                                                    "maxLength": 40,
                                                    "description": "This field is used internally."
                                                },
                                                "requestorId": {
                                                    "type": "string",
                                                    "maxLength": 11,
                                                    "description": "Value that identifies your business and indicates that the cardholder\u2019s account number is tokenized. This value\nis assigned by the token service provider and is unique within the token service provider\u2019s database.\n\n`Note` This field is supported only for **CyberSource through VisaNet** and **FDC Nashville Global**.\n"
                                                },
                                                "transactionType": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Type of transaction that provided the token data. This value does not specify the token service provider; it\nspecifies the entity that provided you with information about the token.\n\nSet the value for this field to 1. An application on the customer\u2019s mobile device provided the token data.\n"
                                                },
                                                "assuranceLevel": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Confidence level of the tokenization. This value is assigned by the token service provider.\n\n`Note` This field is supported only for **CyberSource through VisaNet** and **FDC Nashville Global**.\n"
                                                },
                                                "storageMethod": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Type of technology used in the device to store token data. Possible values:\n\n - 001: Secure Element (SE)\n\nSmart card or memory with restricted access and encryption to prevent data tampering. For storing payment\ncredentials, a SE is tested against a set of requirements defined by the payment networks.\n\n`Note` This field is supported only for **FDC Compass**.\n\n- 002: Host Card Emulation (HCE)\n\nEmulation of a smart card by using software to create a virtual and exact representation of the card.\nSensitive data is stored in a database that is hosted in the cloud. For storing payment credentials, a database\nmust meet very stringent security requirements that exceed PCI DSS.\n\n`Note` This field is supported only for **FDC Compass**.\n"
                                                },
                                                "securityCode": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Card Verification Number.\n\n**Ingenico ePayments**\nDo not include this field when _commerceIndicator=recurring_.\n**Note** Ingenico ePayments was previously called Global Collect. CVN.\n"
                                                }
                                            }
                                        },
                                        "fluidData": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string",
                                                    "description": "The name of the merchant-defined data field. The range of this field starts at 1 and terminiates at 100."
                                                },
                                                "descriptor": {
                                                    "type": "string",
                                                    "maxLength": 128,
                                                    "description": "The specific string for identifying the payment solution that is sending the encrypted payment data to CyberSource.\nValid values:\n- `Apple Pay`\n- `Samsung Pay`\n**NOTE**: For other payment solutions, the value may be specific to the customer's mobile device. For example, the descriptor for a Bluefin payment encryption would be a device-generated descriptor. Merchant needs to pass in this value.\n"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "maxLength": 3072,
                                                    "description": "Represents the encrypted payment data BLOB. The entry for this field is dependent on the payment solution a merchant uses.\n\nValid values:\n- Apple Pay: `RklEPUNPTU1PTi5BUFBMRS5JTkFQUC5QQVlNRU5U`\n- Samsung Pay: `RklEPUNPTU1PTi5TQU1TVU5HLklOQVBQLlBBWU1FTlQ=`\n**NOTE**: For other payment solutions, the value of the descriptor may be specific to the customer's mobile device. For example, the descriptor for a Bluefin payment encryption would be a device-generated descriptor. Merchant needs to pass in this value.\n"
                                                },
                                                "encoding": {
                                                    "type": "string",
                                                    "maxLength": 6,
                                                    "description": "Encoding method used to encrypt the payment data.\n\nValid value: Base64\n"
                                                }
                                            }
                                        },
                                        "customer": {
                                            "type": "object",
                                            "properties": {
                                                "customerId": {
                                                    "type": "string",
                                                    "description": "Unique identifier for the customer's card and billing information.\n\nWhen you use Payment Tokenization or Recurring Billing and you include this value in\nyour request, many of the fields that are normally required for an authorization or credit\nbecome optional.\n\n**NOTE** When you use Payment Tokenization or Recurring Billing, the value for the Customer ID is actually the Cybersource payment token for a customer. This token stores information such as the consumer\u2019s card number so it can be applied towards bill payments, recurring payments, or one-time payments. By using this token in a payment API request, the merchant doesn't need to pass in data such as the card number or expiration date in the request itself.\n\nSee \"Payment Tokenization,\" page 222, and \"Recurring Billing,\" page 225.\n"
                                                }
                                            }
                                        },
                                        "bank": {
                                            "type": "object",
                                            "properties": {
                                                "account": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "maxLength": 1,
                                                            "description": "Account type.\n\nPossible values:\n - **C**: Checking.\n - **G**: General ledger. This value is supported only on Wells Fargo ACH.\n - **S**: Savings (U.S. dollars only).\n - **X**: Corporate checking (U.S. dollars only).\n"
                                                        },
                                                        "number": {
                                                            "type": "string",
                                                            "maxLength": 17,
                                                            "description": "Account number.\n\nWhen processing encoded account numbers, use this field for the encoded account number.\n"
                                                        },
                                                        "encoderId": {
                                                            "type": "string",
                                                            "maxLength": 3,
                                                            "description": "Identifier for the bank that provided the customer\u2019s encoded account number.\n\nTo obtain the bank identifier, contact your processor. See \"Encoded Account Numbers,\" page 39.\n"
                                                        },
                                                        "checkNumber": {
                                                            "type": "string",
                                                            "maxLength": 8,
                                                            "description": "Check number.\n\nChase Paymentech Solutions - Optional.\nCyberSource ACH Service - Not used.\nRBS WorldPay Atlanta - Optional on debits. Required on credits.\nTeleCheck - Strongly recommended on debit requests. Optional on credits.\n"
                                                        },
                                                        "checkImageReferenceNumber": {
                                                            "type": "string",
                                                            "maxLength": 32,
                                                            "description": "Image reference number associated with the check. You cannot include any special characters.\n"
                                                        }
                                                    }
                                                },
                                                "routingNumber": {
                                                    "type": "string",
                                                    "maxLength": 9,
                                                    "description": "Bank routing number.\n\nThis is also called the transit number.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 19,
                                                    "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                },
                                                "discountAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Total discount amount applied to the order.\n\nFor processor-specific information, see the order_discount_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "dutyAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Total charges for any import or export duties included in the order.\n\nFor processor-specific information, see the duty_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "Total tax amount for all the items in the order.\n\nFor processor-specific information, see the total_tax_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "nationalTaxIncluded": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates whether a national tax is included in the order total.\n\nPossible values:\n\n - **0**: national tax not included\n - **1**: national tax included\n\nFor processor-specific information, see the national_tax_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAppliedAfterDiscount": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates how the merchant manages discounts.\n\nPossible values:\n\n - **0**: no invoice level discount included\n - **1**: tax calculated on the postdiscount invoice total\n - **2**: tax calculated on the prediscount invoice total\n\nFor processor-specific information, see the order_discount_management_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAppliedLevel": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates how you calculate tax.\n\nPossible values:\n\n - **0**: net prices with tax calculated at line item level\n - **1**: net prices with tax calculated at invoice level\n - **2**: gross prices with tax provided at line item level\n - **3**: gross prices with tax provided at invoice level\n - **4**: no tax applies on the invoice for the transaction\n\nFor processor-specific information, see the tax_management_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxTypeCode": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "For tax amounts that can be categorized as one tax type.\n\nThis field contains the tax type code that corresponds to the entry in the _lineItems.taxAmount_ field.\n\nPossible values:\n\n - **056**: sales tax (U.S only)\n - **TX~**: all taxes (Canada only)   Note ~ = space.\n\nFor processor-specific information, see the total_tax_type_code field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "freightAmount": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Total freight or shipping and handling charges for the order. When you include this field in your request, you\nmust also include the **totalAmount** field.\n\nFor processor-specific information, see the freight_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "foreignAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Set this field to the converted amount that was returned by the DCC provider. See \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\nFor processor-specific information, see the foreign_amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "foreignCurrency": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Your customer\u2019s billing currency. See \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\nFor processor-specific information, see the foreign_currency field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "exchangeRate": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Exchange rate returned by the DCC service. Includes a decimal point and a maximum of 4 decimal places.\n\nFor details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n\nFor processor-specific information, see the exchange_rate field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "exchangeRateTimeStamp": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "Time stamp for the exchange rate. This value is returned by the DCC service.\n\nFormat: `YYYYMMDD~HH:MM`  where ~ denotes a space.\n\nFor processor-specific information, see the exchange_rate_timestamp field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "surcharge": {
                                                    "type": "object",
                                                    "properties": {
                                                        "amount": {
                                                            "type": "string",
                                                            "maxLength": 15,
                                                            "description": "The surcharge amount is included in the total transaction amount but is passed in a separate field to the issuer and acquirer for tracking. The issuer can provide information about the surcharge amount to the customer.\n\nIf the amount is positive, then it is a debit for the customer.\\\nIf the amount is negative, then it is a credit for the customer.\n\n**NOTE**: This field is supported only for CyberSource through VisaNet (CtV) for Payouts. For CtV, the maximum string length is 8.\n\nFor processor-specific information, see the surcharge_amount field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "description": "Merchant-defined field for describing the surcharge amount."
                                                        }
                                                    }
                                                },
                                                "settlementAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "This is a multicurrency field. It contains the transaction amount (field 4), converted to the Currency used to bill the cardholder\u2019s account.\n"
                                                },
                                                "settlementCurrency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "This is a multicurrency-only field. It contains a 3-digit numeric code that identifies the currency used by the issuer to bill the cardholder's account.\n"
                                                },
                                                "amexAdditionalAmounts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 3,
                                                                "description": "Additional amount type. This field is supported only for **American Express Direct**.\n\nFor processor-specific information, see the additional_amount_type field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "maxLength": 12,
                                                                "description": "Additional amount. This field is supported only for **American Express Direct**.\n\nFor processor-specific information, see the additional_amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "taxDetails": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "description": "This is used to determine what type of tax related data should be inclued under _taxDetails_ object.\n\nPossible values:\n - alternate\n - local\n - national\n - vat\n",
                                                                "enum": [
                                                                    "alternate",
                                                                    "local",
                                                                    "national",
                                                                    "vat"
                                                                ]
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "maxLength": 13,
                                                                "description": "Please see below table for related decription based on above _type_ field.\n\n| type      | type description |\n|-----------|--------------------|\n| alternate | Total amount of alternate tax for the order. |\n| local     | Sales tax for the order. |\n| national  | National tax for the order. |\n| vat       | Total amount of VAT or other tax included in the order. |\n| other     | Other tax. |\n"
                                                            },
                                                            "rate": {
                                                                "type": "string",
                                                                "maxLength": 6,
                                                                "description": "Rate of VAT or other tax for the order.\n\nExample 0.040 (=4%)\n\nValid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated)\n"
                                                            },
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 4,
                                                                "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                            },
                                                            "taxId": {
                                                                "type": "string",
                                                                "maxLength": 15,
                                                                "description": "Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value,\nincluding zero. You may send this field without sending alternate tax amount.\n"
                                                            },
                                                            "applied": {
                                                                "type": "boolean",
                                                                "description": "The tax is applied. Valid value is `true` or `false`."
                                                            },
                                                            "exemptionCode": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "description": "Code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not\nverify the value or modify it in any way before sending it to the processor.\n\nFor possible values, see Exemption Status Values. See Numbered Elements.\n\nImportant For information about using this field, see Item-Level Tax Fields.\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "serviceFeeAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Service fee. Required for service fee transactions.\n"
                                                },
                                                "originalAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Amount in your original local pricing currency.\n\nThis value cannot be negative. You can include a decimal point (.) in this field to denote the currency\nexponent, but you cannot include any other special characters.\n\nIf needed, CyberSource truncates the amount to the correct number of decimal places.\n\nFor details, see Dynamic Currency Conversion with a Third Party Provider.\n"
                                                },
                                                "originalCurrency": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Your local pricing currency code.\n\nFor the possible values, see the ISO Standard Currency Codes.\n\nFor details, see Dynamic Currency Conversion with a Third Party Provider.\n"
                                                }
                                            }
                                        },
                                        "billTo": {
                                            "type": "object",
                                            "properties": {
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s first name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**:\\\nThis field may be sent only for FDC Compass.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_firstname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s last name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\n**For Payouts** : This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the customer_lastname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "middleName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s middle name.\n"
                                                },
                                                "nameSuffix": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s name suffix.\n"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Title.\n"
                                                },
                                                "company": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "maxLength": 60,
                                                            "description": "Name of the customer\u2019s company.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the company_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                        },
                                                        "address1": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "First line in the street address of the company purchasing the product."
                                                        },
                                                        "address2": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "Additional address information for the company purchasing the product."
                                                        },
                                                        "locality": {
                                                            "type": "string",
                                                            "maxLength": 30,
                                                            "description": "City in the address of the company purchasing the product."
                                                        },
                                                        "administrativeArea": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "State or province in the address of the company purchasing the product. Use the State, Province, and Territory\nCodes for the United States and Canada.\n"
                                                        },
                                                        "postalCode": {
                                                            "type": "string",
                                                            "maxLength": 10,
                                                            "description": "Postal code in the address of the company purchasing the product. The postal code must consist of 5 to 9 digits.\n\nWhen the company country is the U.S., the 9-digit postal code must follow this format:\n**[5 digits][dash][4 digits]**\nExample 12345-6789\n\nWhen the company country is Canada, the 6-digit postal code must follow this format:\n**[alpha][numeric][alpha][space][numeric][alpha][numeric]**\nExample A1B 2C3\n"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "Country in the address of the company purchasing the product. Use the two-character ISO Standard Country Codes.\n"
                                                        }
                                                    }
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the billing street address as it appears on the credit card issuer\u2019s records.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_address1 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Additional address information.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**Atos**\nThis field must not contain colons (:).\n\n**Chase Paymentech Solutions, FDC Compass, and TSYS Acquiring Solutions**\nThis value is used for AVS.\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_address2 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the billing address.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the bill_city field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the billing address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_state field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**American Express Direct**\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the remaining value is longer than nine characters, truncates the value starting from the right side.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_zip field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Country of the billing address. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_country field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "district": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "Customer\u2019s neighborhood, community, or region (a barrio in Brazil) within the city or municipality. This\nfield is available only on **Cielo**.\n"
                                                },
                                                "buildingNumber": {
                                                    "type": "string",
                                                    "maxLength": 256,
                                                    "description": "Building number in the street address.\n\nFor example, if the street address is:\nRua da Quitanda 187\nthen the building number is 187.\n\nThis field is supported only for:\n - Cielo transactions.\n - Redecard customer validation with CyberSource Latin American Processing.\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Customer's email address, including the full domain name.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_email field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Customer\u2019s phone number.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nCyberSource recommends that you include the country code when the order is from outside the U.S.\n\nFor processor-specific information, see the customer_phone field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n"
                                                },
                                                "phoneType": {
                                                    "type": "string",
                                                    "enum": [
                                                        "day",
                                                        "home",
                                                        "night",
                                                        "work"
                                                    ],
                                                    "description": "Customer's phone number type.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nPossible Values - \n* day\n* home\n* night\n* work\n"
                                                }
                                            }
                                        },
                                        "shipTo": {
                                            "type": "object",
                                            "properties": {
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First name of the recipient.\n\n**Processor specific maximum length**\n\n- Litle: 25\n- All other processors: 60\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Last name of the recipient.\n\n**Processor-specific maximum length**\n\n- Litle: 25\n- All other processors: 60\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the shipping address."
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Second line of the shipping address."
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the shipping address."
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the shipping address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the shipping address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\n**American Express Direct**\\\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the\nremaining value is longer than nine characters, truncates the value starting from the right side.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "description": "Country of the shipping address. Use the two-character ISO Standard Country Codes.",
                                                    "maxLength": 2
                                                },
                                                "district": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "Neighborhood, community, or region within a city or municipality."
                                                },
                                                "buildingNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Building number in the street address. For example, the building number is 187 in the following address:\n\nRua da Quitanda 187\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Phone number associated with the shipping address."
                                                },
                                                "company": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Name of the customer\u2019s company.\n\nFor processor-specific information, see the company_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        },
                                        "lineItems": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "productCode": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Type of product. This value is used to determine the category that the product is in: electronic, handling,\nphysical, service, or shipping. The default value is **default**.\nIf you are performing an authorization transaction (`processingOptions.capture` is set to `false`), and you set this field to a value other than default or any of the values related to\nshipping and handling, then the fields `quantity`, `productName`, and `productSku` are required.\nIt can also have a value of \"gift_card\".\n\nSee Appendix O, \"Product Codes,\" on page 373 for a list of valid values.\nFor a payment, when you set this field to a value other than default or any of the values related to\nshipping and handling, below fields _quantity_, _productName_, and _productSKU_ are required.\n"
                                                    },
                                                    "productName": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "For an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`),\nthis field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of\nthe other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "productSku": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Stock Keeping Unit (SKU) code for the product.\n\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when _orderInformation.lineItems[].productCode_ is not set to **default** or one of the other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "quantity": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 9999999999,
                                                        "description": "Number of units for this order.\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of the other values that are related to shipping and/or handling.\nWhen `orderInformation.lineItems[].productCode` is `gift_card`, this is the total count of individual prepaid gift cards purchased.\n",
                                                        "default": 1
                                                    },
                                                    "unitPrice": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you\ncannot include any other special characters. CyberSource truncates the amount to the correct number of decimal\nplaces.\n\nFor processor-specific information, see the amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n- Table 12, \"Authorization Information for Specific Processors,\" on page 36\n- Table 16, \"Capture Information for Specific Processors,\" on page 51\n- Table 20, \"Credit Information for Specific Processors,\" on page 65\n\n**DCC for First Data**\\\nThis value is the original amount in your local currency. You must include this field. You cannot use grand_total_amount. See \"Dynamic Currency Conversion for First Data,\" page 113.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 12, \"Authorization Information for Specific Processors,\" on page 36.\n\n**Zero Amount Authorizations**\\\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 220.\n"
                                                    },
                                                    "unitOfMeasure": {
                                                        "type": "string",
                                                        "maxLength": 12,
                                                        "description": "Unit of measure, or unit of measure code, for the item.\n"
                                                    },
                                                    "totalAmount": {
                                                        "type": "string",
                                                        "maxLength": 13,
                                                        "description": "Total amount for the item. Normally calculated as the unit price x quantity.\n\nWhen orderInformation.lineItems[].productCode is \"gift_card\", this is the purchase amount total\nfor prepaid gift cards in major units. Example: 123.45 USD= 123\n"
                                                    },
                                                    "taxAmount": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Total tax to apply to the product. This value cannot be negative. The tax amount and the offer amount must\nbe in the same currency. The tax amount field is additive.\n\nThe following example uses a two-exponent currency such as USD:\n\n 1. You include each line item in your request.\n ..- 1st line item has amount=10.00, quantity=1, and taxAmount=0.80\n ..- 2nd line item has amount=20.00, quantity=1, and taxAmount=1.60\n 2. The total amount authorized will be 32.40, not 30.00 with 2.40 of tax included.\n\nIf you want to include the tax amount and also request the ics_tax service, see Tax Calculation Service Using the SCMP API.\n\nThis field is frequently used for Level II and Level III transactions. See Level II and Level III Processing Using the SCMP API.\n"
                                                    },
                                                    "taxRate": {
                                                        "type": "string",
                                                        "maxLength": 7,
                                                        "description": "Tax rate applied to the item. See \"Numbered Elements,\" page 14.\n\nVisa: Valid range is 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated).\n\nMastercard: Valid range is 0.00001 to 0.99999 (0.001% to 99.999%).\n"
                                                    },
                                                    "taxAppliedAfterDiscount": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Flag to indicate how you handle discount at the line item level.\n\n - 0: no line level discount provided\n - 1: tax was calculated on the post-discount line item total\n - 2: tax was calculated on the pre-discount line item total\n\n`Note` Visa will inset 0 (zero) if an invalid value is included in this field.\n\nThis field relates to the value in the _lineItems[].discountAmount_ field.\n"
                                                    },
                                                    "taxStatusIndicator": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Flag to indicate whether tax is exempted or not included.\n\n - 0: tax not included\n - 1: tax included\n - 2: transaction is not subject to tax\n"
                                                    },
                                                    "taxTypeCode": {
                                                        "type": "string",
                                                        "maxLength": 4,
                                                        "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                    },
                                                    "amountIncludesTax": {
                                                        "type": "boolean",
                                                        "description": "Flag that indicates whether the tax amount is included in the Line Item Total.\n\nPossible values:\n - **true**\n - **false**\n",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "typeOfSupply": {
                                                        "type": "string",
                                                        "maxLength": 2,
                                                        "description": "Flag to indicate whether the purchase is categorized as goods or services.\nPossible values:\n\n - 00: goods\n - 01: services\n"
                                                    },
                                                    "commodityCode": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Commodity code or International description code used to classify the item. Contact your acquirer for a list of\ncodes.\n"
                                                    },
                                                    "discountAmount": {
                                                        "type": "string",
                                                        "maxLength": 13,
                                                        "description": "Discount applied to the item."
                                                    },
                                                    "discountApplied": {
                                                        "type": "boolean",
                                                        "description": "Flag that indicates whether the amount is discounted.\n\nIf you do not provide a value but you set Discount Amount to a value greater than zero, then CyberSource sets\nthis field to **true**.\n\nPossible values:\n - **true**\n - **false**\n",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "discountRate": {
                                                        "type": "string",
                                                        "maxLength": 6,
                                                        "description": "Rate the item is discounted. Maximum of 2 decimal places.\n\nExample 5.25 (=5.25%)\n"
                                                    },
                                                    "invoiceNumber": {
                                                        "type": "string",
                                                        "maxLength": 23,
                                                        "description": "Field to support an invoice number for a transaction. You must specify the number of line items that will\ninclude an invoice number. By default, the first line item will include an invoice number field. The invoice\nnumber field can be included for up to 10 line items.\n"
                                                    },
                                                    "taxDetails": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "description": "This is used to determine what type of tax related data should be inclued under _taxDetails_ object.\n\nPossible values:\n - alternate\n - local\n - national\n - vat\n",
                                                                    "enum": [
                                                                        "alternate",
                                                                        "local",
                                                                        "national",
                                                                        "vat"
                                                                    ]
                                                                },
                                                                "amount": {
                                                                    "type": "string",
                                                                    "maxLength": 13,
                                                                    "description": "Please see below table for related decription based on above _type_ field.\n\n| type      | type description |\n|-----------|--------------------|\n| alternate | Total amount of alternate tax for the order. |\n| local     | Sales tax for the order. |\n| national  | National tax for the order. |\n| vat       | Total amount of VAT or other tax included in the order. |\n| other     | Other tax. |\n"
                                                                },
                                                                "rate": {
                                                                    "type": "string",
                                                                    "maxLength": 6,
                                                                    "description": "Rate of VAT or other tax for the order.\n\nExample 0.040 (=4%)\n\nValid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated)\n"
                                                                },
                                                                "code": {
                                                                    "type": "string",
                                                                    "maxLength": 4,
                                                                    "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                                },
                                                                "taxId": {
                                                                    "type": "string",
                                                                    "maxLength": 15,
                                                                    "description": "Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value,\nincluding zero. You may send this field without sending alternate tax amount.\n"
                                                                },
                                                                "applied": {
                                                                    "type": "boolean",
                                                                    "description": "The tax is applied. Valid value is `true` or `false`."
                                                                },
                                                                "exemptionCode": {
                                                                    "type": "string",
                                                                    "maxLength": 1,
                                                                    "description": "Code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not\nverify the value or modify it in any way before sending it to the processor.\n\nFor possible values, see Exemption Status Values. See Numbered Elements.\n\nImportant For information about using this field, see Item-Level Tax Fields.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "fulfillmentType": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "weight": {
                                                        "type": "string",
                                                        "maxLength": 9,
                                                        "description": "Weight of the item. See Numbered Elements."
                                                    },
                                                    "weightIdentifier": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Type of weight. See Numbered Elements.\n\nPossible values:\n- B: Billed weight\n- N: Actual net weight\n"
                                                    },
                                                    "weightUnit": {
                                                        "type": "string",
                                                        "maxLength": 2,
                                                        "description": "Code that specifies the unit of measurement for the weight amount. For example, OZ specifies ounce and LB\nspecifies pound. The possible values are defined by the ANSI Accredited Standards Committee (ASC).\n\nSee Numbered Elements.\n"
                                                    },
                                                    "referenceDataCode": {
                                                        "type": "string",
                                                        "maxLength": 2,
                                                        "description": "Code that identifies the value of the corresponding item_#_referenceData_#_number field. See Numbered Elements.\n\nPossible values:\n- AN: Client-defined asset code\n- MG: Manufacturer's part number\n- PO: Purchase order number\n- SK: Supplier stock keeping unit number\n- UP: Universal product code\n- VC: Supplier catalog number\n- VP: Vendor part number\n\nThis field is a pass-through, which means that CyberSource does not verify the value or modify it in any way\nbefore sending it to the processor.\n"
                                                    },
                                                    "referenceDataNumber": {
                                                        "type": "string",
                                                        "maxLength": 30,
                                                        "description": "Reference number.\n\nThe meaning of this value is identified by the value of the corresponding `referenceDataCode` field.\nSee Numbered Elements.\n\nThe maximum length for this field depends on the value of the corresponding `referenceDataCode` field:\n- When the code is `PO`, the maximum length for the reference number is 22.\n- When the code is `VC`, the maximum length for the reference number is 20.\n- For all other codes, the maximum length for the reference number is 30.\n\nThis field is a pass-through, which means that CyberSource does not verify the value or modify it in any way\nbefore sending it to the processor.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "invoiceDetails": {
                                            "type": "object",
                                            "properties": {
                                                "invoiceNumber": {
                                                    "type": "string",
                                                    "description": "Invoice Number."
                                                },
                                                "barcodeNumber": {
                                                    "type": "string",
                                                    "description": "Barcode Number."
                                                },
                                                "expirationDate": {
                                                    "type": "string",
                                                    "description": "Expiration Date."
                                                },
                                                "purchaseOrderNumber": {
                                                    "type": "string",
                                                    "maxLength": 25,
                                                    "description": "Value used by your customer to identify the order. This value is typically a purchase order number. CyberSource\nrecommends that you do not populate the field with all zeros or nines.\n\nFor processor-specific information, see the user_po field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "purchaseOrderDate": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Date the order was processed. `Format: YYYY-MM-DD`.\n\nFor processor-specific information, see the purchaser_order_date field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "purchaseContactName": {
                                                    "type": "string",
                                                    "maxLength": 36,
                                                    "description": "The name of the individual or the company contacted for company authorized purchases.\n\nFor processor-specific information, see the authorized_contact_name field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxable": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether an order is taxable. This value must be true if the sum of all _lineItems[].taxAmount_ values > 0.\n\nIf you do not include any _lineItems[].taxAmount_ values in your request, CyberSource does not include\n_invoiceDetails.taxable_ in the data it sends to the processor.\n\nFor processor-specific information, see the tax_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n\nPossible values:\n - **true**\n - **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                },
                                                "vatInvoiceReferenceNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "VAT invoice number associated with the transaction.\n\nFor processor-specific information, see the vat_invoice_ref_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "commodityCode": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "International description code of the overall order\u2019s goods or services or the Categorizes purchases for VAT\nreporting. Contact your acquirer for a list of codes.\n\nFor processor-specific information, see the summary_commodity_code field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "merchandiseCode": {
                                                    "type": "number",
                                                    "description": "Identifier for the merchandise. Possible value:\n\n - 1000: Gift card\n\nThis field is supported only for **American Express Direct**.\n"
                                                },
                                                "transactionAdviceAddendum": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "data": {
                                                                "type": "string",
                                                                "maxLength": 40,
                                                                "description": "Four Transaction Advice Addendum (TAA) fields. These fields are used to display descriptive information\nabout a transaction on the customer\u2019s American Express card statement. When you send TAA fields, start\nwith amexdata_taa1, then ...taa2, and so on. Skipping a TAA field causes subsequent TAA fields to be\nignored.\n\nTo use these fields, contact CyberSource Customer Support to have your account enabled for this feature.\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "referenceDataCode": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Code that identifies the value of the reference_data_number field. For the possible values, see Reference Data\nCodes.\n\nThis field is a pass-through, which means that CyberSource does not verify the value or modify it in any way\nbefore sending it to the processor.\n"
                                                },
                                                "referenceDataNumber": {
                                                    "type": "string",
                                                    "maxLength": 30,
                                                    "description": "Reference number. The meaning of this value is identified by the value of the referenceDataCode field.\n\nThis field is a pass-through, which means that CyberSource does not verify the value or modify it in any way\nbefore sending it to the processor.\n"
                                                }
                                            }
                                        },
                                        "shippingDetails": {
                                            "type": "object",
                                            "description": "Contains shipping information not related to address.",
                                            "properties": {
                                                "giftWrap": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Boolean that indicates whether the customer requested gift wrapping for this\npurchase. This field can contain one of the following\nvalues:\n\n- `yes`: The customer requested gift wrapping.\n- `no`: The customer did not request gift wrapping.\n"
                                                },
                                                "shippingMethod": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Shipping method for the product. Possible values:\n\n - `lowcost`: Lowest-cost service\n - `sameday`: Courier or same-day service\n - `oneday`: Next-day or overnight service\n - `twoday`: Two-day service\n - `threeday`: Three-day service\n - `pickup`: Store pick-up\n - `other`: Other shipping method\n - `none`: No shipping method because product is a service or subscription\n"
                                                },
                                                "shipFromPostalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the address from which the goods are shipped, which is used to establish nexus. The default is\nthe postal code associated with your CyberSource account.\n\nThe postal code must consist of 5 to 9 digits. When the billing country is the U.S., the 9-digit postal code\nmust follow this format:\n\n`[5 digits][dash][4 digits]`\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n\n`[alpha][numeric][alpha][space] [numeric][alpha][numeric]`\n\nExample A1B 2C3\n\nThis field is frequently used for Level II and Level III transactions.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantCustomerId": {
                                            "type": "string",
                                            "maxLength": 100,
                                            "description": "Your identifier for the customer.\n\nWhen a subscription or customer profile is being created, the maximum length for this field for most processors is 30. Otherwise, the maximum length is 100.\n\n**Comercio Latino**\\\nFor recurring payments in Mexico, the value is the customer\u2019s contract number.\nNote Before you request the authorization, you must inform the issuer of the customer contract numbers that will be used for recurring transactions.\n\n**Litle**\\\nFor a follow-on credit with Litle, CyberSource checks the following locations, in the order\ngiven, for a customer account ID value and uses the first value it finds:\n1. `customer_account_id` value in the follow-on credit request\n2. Customer account ID value that was used for the capture that is being credited\n3. Customer account ID value that was used for the original authorization\nIf a customer account ID value cannot be found in any of these locations, then no value is used.\n\nFor processor-specific information, see the customer_account_id field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "dateOfBirth": {
                                            "type": "string",
                                            "maxLength": 8,
                                            "description": "Recipient\u2019s date of birth. **Format**: `YYYYMMDD`.\n\nThis field is a pass-through, which means that CyberSource ensures that the value is eight numeric characters\nbut otherwise does not verify the value or modify it in any way before sending it to the processor. If the field\nis not required for the transaction, CyberSource does not forward it to the processor.\n\nFor more details, see \"Recipients,\" page 224.\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Customer\u2019s government-assigned tax identification number.\n\nFor processor-specific information, see the purchaser_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "companyTaxId": {
                                            "type": "string",
                                            "maxLength": 9,
                                            "description": "Company\u2019s tax identifier. This is only used for eCheck service.\n\n** TeleCheck **\nContact your TeleCheck representative to find out whether this field is required or optional.\n\n** All Other Processors **\nNot used\n"
                                        },
                                        "personalIdentification": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "description": "The type of the identification.\n\nPossible values:\n  - `NATIONAL`\n  - `CPF`\n  - `CPNJ`\n  - `CURP`\n  - `SSN`\n  - `DRIVER_LICENSE`\n\nThis field is supported only on the following processors.\n\n**ComercioLatino**\\\nSet this field to the Cadastro de Pessoas Fisicas (CPF).\n\n**CyberSource Latin American Processing**\\\nSupported for Redecard in Brazil. Set this field to the Cadastro de Pessoas Fisicas (CPF), which is required for AVS for Redecard in Brazil.\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n",
                                                        "enum": [
                                                            "NATIONAL",
                                                            "CPF",
                                                            "CPNJ",
                                                            "CURP",
                                                            "SSN",
                                                            "DRIVER_LICENSE"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "maxLength": 26,
                                                        "description": "The value of the identification type. This field is supported only on the following processors.\n\n**ComercioLatino**\nSet this field to the Cadastro de Pessoas Fisicas (CPF).\n\n**CyberSource Latin American Processing**\nSupported for Redecard in Brazil. Set this field to the Cadastro de Pessoas Fisicas (CPF), which is required for AVS for Redecard in Brazil.\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\nFor processor-specific information, see the personal_id field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n  \nIf type = PASSPORT, this is the cardholder's passport number.\nRecommended for Discover ProtectBuy.\n"
                                                    },
                                                    "issuedBy": {
                                                        "type": "string",
                                                        "description": "If type = DRIVER_LICENSE, this is the State or province where the customer\u2019s driver\u2019s license was issued.\nUse the two-character State, Province, and Territory Codes for the United States and Canada.\n\n** TeleCheck **\nContact your TeleCheck representative to find out whether this field is required or optional.\n\n** All Other Processors **\nNot used.\n\nIf type = PASSPORT, this is the Issuing country for the cardholder\u2019s passport.\nRecommended for Discover ProtectBuy.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "hashedPassword": {
                                            "type": "string",
                                            "maxLength": 100,
                                            "description": "The description for this field is not available.\n"
                                        }
                                    }
                                },
                                "recipientInformation": {
                                    "type": "object",
                                    "properties": {
                                        "accountId": {
                                            "type": "string",
                                            "maxLength": 10,
                                            "description": "Identifier for the recipient\u2019s account. Use the first six digits and last four digits of the recipient\u2019s account\nnumber. This field is a pass-through, which means that CyberSource does not verify the value or modify it in\nany way before sending it to the processor. If the field is not required for the transaction, CyberSource does\nnot forward it to the processor.\n\nFor more details, see \"Recipients,\" page 224.\n"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "description": "Recipient\u2019s last name. This field is a passthrough, which means that CyberSource does not verify the value or\nmodify it in any way before sending it to the processor. If the field is not required for the transaction,\nCyberSource does not forward it to the processor.\n\nFor more details, see \"Recipients,\" page 224.\n"
                                        },
                                        "postalCode": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "description": "Partial postal code for the recipient\u2019s address. For example, if the postal code is **NN5 7SG**, the value for\nthis  field should be the first part of the postal code: **NN5**. This field is a pass-through, which means that\nCyberSource does not verify the value or modify it in any way before sending it to the processor. If the field\nis not required for the transaction, CyberSource does not forward it to the processor.\n\nFor more details, see \"Recipients,\" page 224.\n"
                                        }
                                    }
                                },
                                "deviceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "hostName": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Host name reported by the customer\u2019s browser to your Web server identified via the HTTP header."
                                        },
                                        "ipAddress": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Customer\u2019s IP address, such as 10.1.27.63, reported by your Web server via socket information.\n"
                                        },
                                        "userAgent": {
                                            "type": "string",
                                            "maxLength": 40,
                                            "description": "Customer\u2019s browser as identified from the HTTP header data. For example, Mozilla is the value that identifies\nthe Netscape browser.\n"
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nFor Payouts:\n* Paymentech (22)\n"
                                                },
                                                "alternateName": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n* FDCCompass (13)\n* Paymentech (13)\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Merchant City. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Merchant State. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        },
                                        "salesOrganizationId": {
                                            "type": "string",
                                            "maxLength": 11,
                                            "description": "Company ID assigned to an independent sales organization. Get this value from Mastercard.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file:\n- Record: CP01 TCR6\n- Position: 106-116\n- Field: Mastercard Independent Sales Organization ID\n\n**Note** The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant\u2019s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies.\n\nFor processor-specific information, see the sales_organization_ID field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "categoryCode": {
                                            "type": "integer",
                                            "maximum": 9999,
                                            "description": "Four-digit number that the payment card industry uses to classify merchants into market segments. Visa assigned\none or more of these values to your business when you started accepting Visa cards.\n\nIf you do not include this field in your request, CyberSource uses the value in your CyberSource account.\n\nFor processor-specific information, see the merchant_category_code field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR4\n- Position: 150-153\n- Field: Merchant Category Code\n"
                                        },
                                        "categoryCodeDomestic": {
                                            "type": "integer",
                                            "maximum": 9999,
                                            "description": "Merchant category code for domestic transactions. The value for this field is a four-digit number that the payment\ncard industry uses to classify merchants into market segments. A payment card company assigned one or more of these\nvalues to your business when you started accepting the payment card company\u2019s cards. Including this field in a request\nfor a domestic transaction might reduce interchange fees.\n\nWhen you include this field in a request:\n- Do not include the merchantCategoryCode field.\n- The value for this field overrides the value in your CyberSource account.\n\nThis field is supported only for:\n- Domestic transactions with Mastercard in Spain. Domestic means that you and the cardholder are in the same country.\n- Merchants enrolled in the OmniPay Direct interchange program.\n- First Data Merchant Solutions (Europe) on OmniPay Direct.\n"
                                        },
                                        "taxId": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Your Cadastro Nacional da Pessoa Jur\u00eddica (CNPJ) number.\n\nThis field is supported only for BNDES transactions on CyberSource through VisaNet. See BNDES.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR6\n- Position: 40-59\n- Field: BNDES Reference Field 1\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 21,
                                            "description": "Your government-assigned tax identification number.\n\nFor CtV processors, the maximum length is 20.\n\nFor other processor-specific information, see the merchant_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "cardAcceptorReferenceNumber": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Reference number that facilitates card acceptor/corporation communication and record keeping.\n\nFor processor-specific information, see the card_acceptor_ref_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "transactionLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Local date and time at your physical location. Include both the date and time in this field or leave it blank.\nThis field is supported only for **CyberSource through VisaNet**.\n\nFor processor-specific information, see the transaction_local_date_time field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n`Format: YYYYMMDDhhmmss`, where:\n\n - YYYY = year\n - MM = month\n - DD = day\n - hh = hour\n - mm = minutes\n - ss = seconds\n\n For processor-specific information, see the _transaction_local_date_time_ field in Credit Card Services Using the SCMP API.\n"
                                        },
                                        "serviceFeeDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 22,
                                                    "description": "Name of the service provider that is collecting the service fee. The service provider name must consist of\n3, 7, or 12 characters followed by an asterisk (*). This value must also include the words \u201cService Fee.\u201d\n\nWhen you include more than one consecutive space, extra spaces are removed. Use one of the following formats\nfor this value:\n- <3-character name>*Service Fee\n- <7-character name>*Service Fee\n- <12-character name>*Service Fee\n\nWhen payments are made in installments, this value must also include installment information such as\n\u201c1 of 5\u201d or \u201c3 of 7.\u201d For installment payments, use one of the following formats for this value:\n- <3-character name>*Service Fee*<N> of <M>\n- <7-character name>*Service Fee*<N> of <M>\n- <12-character name>*Service Fee*<N> of <M>\n\nwhere <N> is the payment number and <M> is the total number of payments.\n\nWhen you do not include this value in your request, CyberSource uses the value that is in your CyberSource\naccount.\n\nThis value might be displayed on the cardholder\u2019s statement.\n"
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "maxLength": 11,
                                                    "description": "Contact information for the service provider that is collecting the service fee. when you include more than one\nconsecutive space, extra spaces are removed.\n\nWhen you do not include this value in your request, CyberSource uses the value that is in your CyberSource account.\n\nThis value might be displayed on the cardholder\u2019s statement.\n"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "State or territory in which the service provider is located.\n\nWhen you do not include this value in your request, CyberSource uses the value that is in your CyberSource account.\n\nThis value might be displayed on the cardholder\u2019s statement.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "aggregatorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "aggregatorId": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Value that identifies you as a payment aggregator. Get this value from the\nprocessor.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR6\n- Position: 95-105\n- Field: MasterCard Payment Facilitator ID\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nccAuthService\\\n**American Express Direct**: R for all aggregator transactions.\\\n**CyberSource through VisaNet**: R for Mastercard aggregator transactions and for American Express aggregator authorizations; otherwise, not used.\\\n**FDC Compass**: R for all aggregator transactions.\\\n**FDC Nashville Global**: R for all aggregator transactions.\n\nFor processor-specific information, see the aggregator_id field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "name": {
                                            "type": "string",
                                            "maxLength": 37,
                                            "description": "Your payment aggregator business name.\n\n**American Express Direct**\\\nThe maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters.\\\n\n**CyberSource through VisaNet**\\\nWith American Express, the maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nFor processor-specific information, see the aggregator_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "subMerchant": {
                                            "type": "object",
                                            "properties": {
                                                "cardAcceptorId": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Unique identifier assigned by the payment card company to the sub-merchant."
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 37,
                                                    "description": "Sub-merchant\u2019s business name.\n\n**American Express Direct**\\\nThe maximum length of the sub-merchant name depends on the length of the aggregator name. The combined length for both values must not exceed 36 characters.\n\n**CyberSource through VisaNet**\\\nWith American Express, the maximum length of the sub-merchant name depends on the length of the aggregator name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\n**FDC Nashville Global**\\\nWith Mastercard, the maximum length of the sub-merchant name depends on the length of the aggregator name:\n- If aggregator name length is 1 through 3, maximum sub-merchant name length is 21.\n- If aggregator name length is 4 through 7, maximum sub-merchant name length is 17.\n- If aggregator name length is 8 through 12, maximum sub-merchant name length is 12.\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 38,
                                                    "description": "First line of the sub-merchant\u2019s street address.\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 21,
                                                    "description": "Sub-merchant\u2019s city.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nFor details, see \"Aggregator Support,\" page 100.\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s state or province. Use the State, Province, and Territory Codes for the United States and Canada.\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "region": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s region.\n\n**Example**\\\n`NE` indicates that the sub-merchant is in the northeast region.\n\nSee \"Aggregator Support,\" page 110.\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Partial postal code for the sub-merchant\u2019s address.\n\nSee \"Aggregator Support,\" page 100 for details.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s country. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nSee \"Aggregator Support,\" page 101.\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 40,
                                                    "description": "Sub-merchant\u2019s email address.\n\n**Maximum length for processors**\n\n - American Express Direct: 40\n - CyberSource through VisaNet: 40\n - FDC Compass: 40\n - FDC Nashville Global: 19\n\n**CyberSource through VisaNet**\\\nWith American Express, the value for this field corresponds to the following data in the TC 33 capture file:\n- Record: CP01 TCRB\n- Position: 25-64\n- Field: American Express Seller E-mail Address\n\n**Note** The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant\u2019s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies.\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Sub-merchant\u2019s telephone number.\n\n**Maximum length for procesors**\n\n - American Express Direct: 20\n - CyberSource through VisaNet: 20\n - FDC Compass: 13\n - FDC Nashville Global: 10\n\n**CyberSource through VisaNet**\\\nWith American Express, the value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCRB\n- Position: 5-24\n- Field: American Express Seller Telephone Number\n\n**FDC Compass**\\\nThis value must consist of uppercase characters. Use one of these recommended formats:\\\n`NNN-NNN-NNNN`\\\n`NNN-AAAAAAA`\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "consumerAuthenticationInformation": {
                                    "type": "object",
                                    "properties": {
                                        "cavv": {
                                            "type": "string",
                                            "maxLength": 40,
                                            "description": "Cardholder authentication verification value (CAVV)."
                                        },
                                        "cavvAlgorithm": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Algorithm used to generate the CAVV for Verified by Visa or the UCAF authentication data for Mastercard Identity Check.\n"
                                        },
                                        "eciRaw": {
                                            "type": "string",
                                            "maxLength": 2,
                                            "description": "Raw electronic commerce indicator (ECI). For the description and requirements, see \"Payer Authentication,\" page 180."
                                        },
                                        "paresStatus": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Payer authentication response status. For the description and requirements, see \"Payer Authentication,\" page 180.\n"
                                        },
                                        "veresEnrolled": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Verification response enrollment status. For the description and requirements, see \"Payer Authentication,\" page 180."
                                        },
                                        "xid": {
                                            "type": "string",
                                            "maxLength": 40,
                                            "description": "Transaction identifier. For the description and requirements, see \"Payer Authentication,\" page 180."
                                        },
                                        "ucafAuthenticationData": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Universal cardholder authentication field (UCAF) data.\n\nFor the description and requirements, see \"Payer Authentication,\" page 180.\n"
                                        },
                                        "ucafCollectionIndicator": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Universal cardholder authentication field (UCAF) collection indicator.\n\nFor the description and requirements, see \"Payer Authentication,\" page 180.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR7\n- Position: 5\n- Field: Mastercard Electronic Commerce Indicators\u2014-UCAF Collection Indicator\n"
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "terminalId": {
                                            "type": "string",
                                            "maxLength": 8,
                                            "description": "Identifier for the terminal at your retail location. You can define this value yourself, but consult the\nprocessor for requirements.\n\nFor Payouts: This field is applicable for CtV.\n"
                                        },
                                        "terminalSerialNumber": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Terminal serial number assigned by the hardware manufacturer. This value is provided by the client software that\nis installed on the POS terminal.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                        },
                                        "laneNumber": {
                                            "type": "string",
                                            "maxLength": 8,
                                            "description": "Identifier for an alternate terminal at your retail location. You define the value for this field.\n\nThis field is supported only for MasterCard transactions on FDC Nashville Global. Use the _terminalID_ field to\nidentify the main terminal at your retail location. If your retail location has multiple terminals, use this\n_alternateTerminalID_ field to identify the terminal used for the transaction.\n\nThis field is a pass-through, which means that CyberSource does not check the value or modify the value in any\nway before sending it to the processor.\n"
                                        },
                                        "catLevel": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 9,
                                            "description": "Type of cardholder-activated terminal. Possible values:\n\n - 1: Automated dispensing machine\n - 2: Self-service terminal\n - 3: Limited amount terminal\n - 4: In-flight commerce (IFC) terminal\n - 5: Radio frequency device\n - 6: Mobile acceptance terminal\n - 7: Electronic cash register\n - 8: E-commerce device at your location\n - 9: Terminal or cash register that uses a dialup connection to connect to the transaction processing network\n * Applicable only for CTV for Payouts.\n"
                                        },
                                        "entryMode": {
                                            "type": "string",
                                            "maxLength": 11,
                                            "description": "Method of entering credit card information into the POS terminal. Possible values:\n\n - contact: Read from direct contact with chip card.\n - contactless: Read from a contactless interface using chip data.\n - keyed: Manually keyed into POS terminal.\n - msd: Read from a contactless interface using magnetic stripe data (MSD).\n - swiped: Read from credit card magnetic stripe.\n\nThe contact, contactless, and msd values are supported only for EMV transactions.\n* Applicable only for CTV for Payouts.\n"
                                        },
                                        "terminalCapability": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 5,
                                            "description": "POS terminal\u2019s capability. Possible values:\n\n - 1: Terminal has a magnetic stripe reader only.\n - 2: Terminal has a magnetic stripe reader and manual entry capability.\n - 3: Terminal has manual entry capability only.\n - 4: Terminal can read chip cards.\n - 5: Terminal can read contactless chip cards.\n\nThe values of 4 and 5 are supported only for EMV transactions.\n* Applicable only for CTV for Payouts.  \n"
                                        },
                                        "pinEntryCapability": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 1,
                                            "description": "A one-digit code that identifies the capability of terminal to capture PINs. \nThis code does not necessarily mean that a PIN was entered or is included in this message. \nFor Payouts: This field is applicable for CtV.\n"
                                        },
                                        "operatingEnvironment": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Operating environment. Possible values:\n\n - 0: No terminal used or unknown environment.\n - 1: On merchant premises, attended.\n - 2: On merchant premises, unattended, or cardholder terminal. Examples: oil, kiosks, self-checkout, home\n      computer, mobile telephone, personal digital assistant (PDA). Cardholder terminal is supported only for\n      MasterCard transactions on **CyberSource through VisaNet**.\n - 3: Off merchant premises, attended. Examples: portable POS devices at trade shows, at service calls, or in\n      taxis.\n - 4: Off merchant premises, unattended, or cardholder terminal. Examples: vending machines, home computer,\n      mobile telephone, PDA. Cardholder terminal is supported only for MasterCard transactions on **CyberSource\n      through VisaNet**.\n - 5: On premises of cardholder, unattended.\n - 9: Unknown delivery mode.\n - S: Electronic delivery of product. Examples: music, software, or eTickets that are downloaded over the\n      internet.\n - T: Physical delivery of product. Examples: music or software that is delivered by mail or by a courier.\n\nThis field is supported only for **American Express Direct** and **CyberSource through VisaNet**.\n\n**CyberSource through VisaNet**\\\nFor MasterCard transactions, the only valid values are 2 and 4.\n"
                                        },
                                        "emv": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "maxLength": 1998,
                                                    "description": "EMV data that is transmitted from the chip card to the issuer, and from the issuer to the chip card. The EMV\ndata is in the tag-length-value format and includes chip card tags, terminal tags, and transaction detail tags.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10. For information about the individual tags, see the \u201cApplication Specification\u201d section in the EMV 4.3 Specifications: http://emvco.com\n\n**Important** The following tags contain sensitive information and **must not** be included in this field:\n\n - **56**: Track 1 equivalent data\n - **57**: Track 2 equivalent data\n - **5A**: Application PAN\n - **5F20**: Cardholder name\n - **5F24**: Application expiration date (This sensitivity has been relaxed for cmcic, amexdirect, fdiglobal, opdfde, and six)\n - **99**: Transaction PIN\n - **9F0B**: Cardholder name (extended)\n - **9F1F**: Track 1 discretionary data\n - **9F20**: Track 2 discretionary data\n\nFor captures, this field is required for contact EMV transactions. Otherwise, it is optional.\n\nFor credits, this field is required for contact EMV stand-alone credits and contactless EMV stand-alone credits.\nOtherwise, it is optional.\n\n**Important** For contact EMV captures, contact EMV stand-alone credits, and contactless EMV stand-alone credits,\nyou must include the following tags in this field. For all other types of EMV transactions, the following tags\nare optional.\n\n - **95**: Terminal verification results\n - **9F10**: Issuer application data\n - **9F26**: Application cryptogram\n"
                                                },
                                                "cardholderVerificationMethodUsed": {
                                                    "type": "number",
                                                    "description": "Method that was used to verify the cardholder's identity.\n\nPossible values:\n - **0**: No verification\n - **1**: Signature\n\nThis field is supported only on **American Express Direct**.\n"
                                                },
                                                "cardSequenceNumber": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Number assigned to a specific card when two or more cards are associated with the same primary account number.\nThis value enables issuers to distinguish among multiple cards that are linked to the same account. This value\ncan also act as a tracking tool when reissuing cards. When this value is available, it is provided by the chip\nreader. When the chip reader does not provide this value, do not include this field in your request.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10.\n"
                                                },
                                                "fallback": {
                                                    "type": "boolean",
                                                    "maxLength": 5,
                                                    "description": "Indicates whether a fallback method was used to enter credit card information into the POS terminal. When a\ntechnical problem prevents a successful exchange of information between a chip card and a chip-capable terminal:\n\n 1. Swipe the card or key the credit card information into the POS terminal.\n 2. Use the pointOfSaleInformation.entryMode field to indicate whether the information was swiped or keyed.\n\nPossible values:\n - **true**\n - **false** (default)\n\nThis field is supported only on **Chase Paymentech Solutions** and **GPN**.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                },
                                                "fallbackCondition": {
                                                    "type": "number",
                                                    "description": "Reason for the EMV fallback transaction. An EMV fallback transaction occurs when an EMV transaction fails for\none of these reasons:\n\n - Technical failure: the EMV terminal or EMV card cannot read and process chip data.\n - Empty candidate list failure: the EMV terminal does not have any applications in common with the EMV card.\n   EMV terminals are coded to determine whether the terminal and EMV card have any applications in common.\n   EMV terminals provide this information to you.\n\nPossible values:\n\n - **1**: Transaction was initiated with information from a magnetic stripe, and the previous transaction at the\n      EMV terminal either used information from a successful chip read or it was not a chip transaction.\n - **2**: Transaction was initiated with information from a magnetic stripe, and the previous transaction at the\n      EMV terminal was an EMV fallback transaction because the attempted chip read was unsuccessful.\n\nThis field is supported only on **GPN**.\n\n**NOTE**: Merchants must include this field in a request whenever a transaction must fall back to swiped mode.\n"
                                                }
                                            }
                                        },
                                        "amexCapnData": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Point-of-sale details for the transaction. This value is returned only for **American Express Direct**.\nCyberSource generates this value, which consists of a series of codes that identify terminal capability,\nsecurity data, and specific conditions present at the time the transaction occurred. To comply with the CAPN\nrequirements, this  value must be included in all subsequent follow-on requests, such as captures and follow-on\ncredits.\n\nWhen you perform authorizations, captures, and credits through CyberSource, CyberSource passes this value from\nthe authorization service to the subsequent services for you. However, when you perform authorizations through\nCyberSource and perform subsequent services through other financial institutions, you must ensure that your\nrequests for captures and credits include this value.\n"
                                        },
                                        "trackData": {
                                            "type": "string",
                                            "description": "Card\u2019s track 1 and 2 data. For all processors except FDMS Nashville, this value consists of\none of the following:\n\n - Track 1 data\n - Track 2 data\n - Data for both tracks 1 and 2\n\nFor FDMS Nashville, this value consists of one of the following:\n - Track 1 data\n - Data for both tracks 1 and 2\n\nExample: %B4111111111111111^SMITH/JOHN ^1612101976110000868000000?;4111111111111111=16121019761186800000?\n"
                                        },
                                        "storeAndForwardIndicator": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "When connectivity is unavailable, the client software that is installed on the POS terminal can store a\ntransaction in its memory and send it for authorization when connectivity is restored. This value is provided by\nthe client software that is installed on the POS terminal.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nPossible values:\n- Y: Transaction was stored and then forwarded.\n- N (default): Transaction was not stored and then forwarded.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                        },
                                        "cardholderVerificationMethod": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "Complete list of cardholder verification methods (CVMs) supported by the terminal.\n\nPossible values:\n- PIN\n- Signature\n\n**NOTE**: You can submit one of the values or both in a request.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                            },
                                            "example": [
                                                "PIN",
                                                "Signature"
                                            ]
                                        },
                                        "terminalInputCapability": {
                                            "type": "array",
                                            "items": {
                                                "description": "Complete list of card input methods supported by the terminal.\n\nPossible values:\n- Keyed: Terminal can accept card data that is entered manually.\n- Swiped: Terminal can accept card data from a magnetic stripe reader.\n- Contact: Terminal can accept card data in EMV contact mode.\n- Contactless: Terminal can accept card data in EMV contactless mode.\n- BarCode: Terminal can read bar codes.\n- QRcode: Terminal can read QR codes.\n- OCR: Terminal can perform optical character recognition (OCT).\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n",
                                                "type": "string"
                                            },
                                            "example": [
                                                "Keyed",
                                                "Swiped",
                                                "Contact",
                                                "QRcode"
                                            ]
                                        },
                                        "terminalCardCaptureCapability": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Indicates whether the terminal can capture the card.\n\nPossible values:\n- 1: Terminal can capture card.\n- 0: Terminal cannot capture card.\n\nThis field is supported only on American Express Direct.\n"
                                        },
                                        "terminalOutputCapability": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Indicates whether the terminal can print or display messages.\n\nPossible values:\n- 1: Neither\n- 2: Print only\n- 3: Display only\n- 4: Print and display\n\nThis field is supported only on American Express Direct.\n"
                                        },
                                        "terminalPinCapability": {
                                            "type": "integer",
                                            "description": "Maximum PIN length that the terminal can capture.\n\nPossible values:\n-  0: No PIN capture capability\n-  1: PIN capture capability unknown\n-  4: Four characters\n-  5: Five characters\n-  6: Six characters\n-  7: Seven characters\n-  8: Eight characters\n-  9: Nine characters\n- 10: Ten characters\n- 11: Eleven characters\n- 12: Twelve characters\n\nThis field is supported only on American Express Direct and SIX.\n"
                                        },
                                        "deviceId": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Value created by the client software that uniquely identifies the POS device. This value is provided by the\nclient software that is installed on the POS terminal.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                        },
                                        "pinBlockEncodingFormat": {
                                            "type": "integer",
                                            "maximum": 9,
                                            "description": "Format that is used to encode the PIN block. This value is provided by the client software that is installed on\nthe POS terminal.\n\nPossible values:\n- 0: ISO 9564 format 0\n- 1: ISO 9564 format 1\n- 2: ISO 9564 format 2\n- 3: ISO 9564 format 3\n\nIn the Credit Card Guide for the auth service: This field is supported only on American Express Direct, FDC\nNashville Global, and SIX.\n"
                                        },
                                        "encryptedPin": {
                                            "type": "string",
                                            "maxLength": 16,
                                            "description": "Encrypted PIN.\n\nThis value is provided by the client software that is installed on the POS terminal.\n\nIn the Credit Card Guide for the auth service: This field is supported only on American Express Direct, FDC\nNashville Global, and SIX.\n"
                                        },
                                        "encryptedKeySerialNumber": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "This is a combination of the device's unique identifier and a transaction counter that is used in the process of\ndecrypting the encrypted PIN.\n\nFor all terminals that are using derived unique key per transaction (DUKPT) encryption, this is generated as a\nsingle number within the terminal.\n"
                                        },
                                        "partnerSdkVersion": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Version of the software installed on the POS terminal. This value is provided by the client software that is\ninstalled on the POS terminal.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                        }
                                    }
                                },
                                "merchantDefinedInformation": {
                                    "type": "array",
                                    "description": "The description for this field is not available.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "maxLength": 50,
                                                "description": "The name you assign for your merchant-defined data field.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].key and\nmerchantDefinedInformation[1].key for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n"
                                            },
                                            "value": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "The value you assign for your merchant-defined data field.\n\n**Warning** Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields. Personally identifying information includes, but is not\nlimited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV,\nCVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].value and\nmerchantDefinedInformation[1].value for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n\nFor installment payments with Mastercard in Brazil:\n- The value for merchantDefinedInformation[0].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 25-44\n  - Field: Reference Field 2\n- The value for merchantDefinedInformation[1].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 45-64\n  - Field: Reference Field 3\n"
                                            }
                                        }
                                    }
                                },
                                "installmentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Amount for the current installment payment.\n\nThis field is supported only for CyberSource through VisaNet. See \"Installment Payments,\" page 127.\n"
                                        },
                                        "frequency": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Installment Frequency of the installment payments.\n\nThis field is supported only for CyberSource through VisaNet. Possible values:\n- B: Biweekly\n- M: Monthly\n- W: Weekly\n\nSee \"Installment Payments,\" page 127.\n"
                                        },
                                        "planType": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "**American Express Direct, Cielo, and CyberSource Latin American Processing**\\\nFlag that indicates the type of funding for the installment plan associated with the payment.\n\nPossible values:\n- 1: Merchant-funded installment plan\n- 2: Issuer-funded installment plan\nIf you do not include this field in the request, CyberSource uses the value in your CyberSource account.\n\nTo change the value in your CyberSource account, contact CyberSource Customer Service. See \"Installment Payments,\" page 136.\n\n**CyberSource through VisaNet and American Express**\\\nDefined code that indicates the type of installment plan for this transaction.\n\nContact American Express for:\n- Information about the kinds of installment plans that American Express provides\n- Values for this field\n\nSee \"Installment Payments,\" page 125.\n\nFor installment payments with American Express in Brazil, the value for this field corresponds to the following data in the TC 33 capture file*:\n- Record: CP07 TCR3\n- Position: 5-6\n- Field: Plan Type\n\n* The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant\u2019s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies.\n\n**CyberSource through VisaNet with Visa or Mastercard**\\\nFlag indicating the type of funding for the installment plan associated with the payment.\nPossible values:\n- 1 or 01: Merchant-funded installment plan\n- 2 or 02: Issuer-funded installment plan\n- 43: Crediario installment plan\u2014only with Visa in Brazil\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n\nFor installment payments with Visa in Brazil, the value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR1\n- Position: 5-6\n- Field: Installment Type\n\nFor all other kinds of installment payments, the value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR5\n- Position: 39-40\n- Field: Installment Plan Type (Issuer or Merchant)\n"
                                        },
                                        "sequence": {
                                            "type": "integer",
                                            "maximum": 99,
                                            "description": "Installment number when making payments in installments. Used along with _totalCount_ to track which payment is being processed.\n\nFor example, the second of 5 payments would be passed to CyberSource as _sequence_ = 2 and _totalCount_ = 5.\n\nSee \"Installment Payments,\" page 125.\n\n**Chase Paymentech Solutions and FDC Compass**\\\nThis field is optional because this value is required in the merchant descriptors. See \"Chase Paymentech\nSolutions Merchant Descriptors,\" page 142, and \"FDC Compass Merchant Descriptors,\" page 153.\n\n**CyberSource through VisaNet**\\\nWhen you do not include this field in a request for a Crediario installment payment, CyberSource sends a value of 0 to the processor.\n\nFor Crediario installment payments, the value for this field corresponds to the following data in the TC 33 capture file*:\n- Record: CP01 TCR9\n- Position: 38-40\n- Field: Installment Payment Number\n\n* The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant\u2019s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies.\n"
                                        },
                                        "totalAmount": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Total amount of the loan that is being paid in installments. This field is supported only for CyberSource\nthrough VisaNet. See \"Installment Payments,\" page 127.\n"
                                        },
                                        "totalCount": {
                                            "type": "integer",
                                            "maximum": 99,
                                            "description": "Total number of installments when making payments in installments. See \"Installment Payments,\" page 127.\n\n**Chase Paymentech Solutions and FDC Compass**\\\nThis field is optional because this value is required in the merchant descriptors. See \"Chase Paymentech\nSolutions Merchant Descriptors,\" page 144, and \"FDC Compass Merchant Descriptors,\" page 155.\n\n**American Express Direct, Cielo, and Comercio Latino**\\\nThis value is the total number of installments you approved.\n\n**CyberSource Latin American Processing in Brazil**\\\nThis value is the total number of installments that you approved. The default is 1.\n\n**All Other Processors**\\\nThis value is used along with _sequence_ to track which payment is being processed.\n\nFor example, the second of 5 payments would be passed to CyberSource as _sequence_ = 2 and _totalCount_ = 5.\n\n**CyberSource through VisaNet**\\\nFor Crediario installment payments, the value for this field corresponds to the following data in the TC 33 capture file*:\n- Record: CP01 TCR9\n- Position: 23-25\n- Field: Number of Installments\n\nFor installment payments with American Express in Brazil, the value for this field corresponds to the following data in the TC 33 capture file*:\n- Record: CP07 TCR3\n- Position: 7-8\n- Field: Number of Installments\n\nFor installment payments with Visa in Brazil, the value for this field corresponds to the following data in the TC 33 capture file*:\n- Record: CP07 TCR1\n- Position: 7-8\n- Field: Number of Installments\n\nFor all other kinds of installment payments, the value for this field corresponds to the following data in the TC 33 capture file*:\n- Record: CP01 TCR5\n- Position: 20-22\n- Field: Installment Total Count\n\n**Note** The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant\u2019s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies.\n"
                                        },
                                        "firstInstallmentDate": {
                                            "type": "string",
                                            "maximum": 6,
                                            "description": "Date of the first installment payment. Format: YYMMDD. When you do not include this field, CyberSource sends a\nstring of six zeros (000000) to the processor. See Installment Payments on CyberSource through VisaNet.\n\nThis field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR9\n- Position: 42-47\n- Field: Date of First Installment\n"
                                        },
                                        "invoiceData": {
                                            "type": "string",
                                            "maximum": 20,
                                            "description": "Invoice information that you want to provide to the issuer. This value is similar to a tracking number and is\nthe same for all installment payments for one purchase.\n\nThis field is supported only for installment payments with Mastercard on CyberSource through VisaNet in Brazil.\n\nSee Installment Payments on CyberSource through VisaNet.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR4\n- Position: 51-70\n- Field: Purchase Identification\n"
                                        },
                                        "paymentType": {
                                            "type": "string",
                                            "maximum": 1,
                                            "description": "Payment plan for the installments.\n\nPossible values:\n- 0 (default): Regular installment. This value is not allowed for airline transactions.\n- 1: Installment payment with down payment.\n- 2: Installment payment without down payment. This value is supported only for airline transactions.\n- 3: Installment payment; down payment and boarding fee will follow. This value is supported only for airline transactions.\n- 4: Down payment only; regular installment payment will follow.\n- 5: Boarding fee only. This value is supported only for airline transactions.\n\nThis field is supported only for installment payments with Visa on CyberSource through VisaNet in Brazil.\n\nSee Installment Payments on CyberSource through VisaNet.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR1\n- Position: 9\n- Field: Merchant Installment Supporting Information\n"
                                        },
                                        "eligibilityInquiry": {
                                            "type": "string",
                                            "maximum": 9,
                                            "description": "Indicates whether the authorization request is a Crediario eligibility inquiry.\n\nSee Installment Payments on CyberSource through VisaNet.\n\nSet the value for this field to `Crediario`.\n\nThis field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.\n"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "TC50171_3"
                                },
                                "processingInformation": {
                                    "commerceIndicator": "internet"
                                },
                                "aggregatorInformation": {
                                    "subMerchant": {
                                        "cardAcceptorId": "1234567890",
                                        "country": "US",
                                        "phoneNumber": "650-432-0000",
                                        "address1": "900 Metro Center",
                                        "postalCode": "94404-2775",
                                        "locality": "Foster City",
                                        "name": "Visa Inc",
                                        "administrativeArea": "CA",
                                        "region": "PEN",
                                        "email": "test@cybs.com"
                                    },
                                    "name": "V-Internatio",
                                    "aggregatorId": "123456789"
                                },
                                "orderInformation": {
                                    "billTo": {
                                        "country": "US",
                                        "lastName": "VDP",
                                        "address2": "Address 2",
                                        "address1": "201 S. Division St.",
                                        "postalCode": "48104-2201",
                                        "locality": "Ann Arbor",
                                        "administrativeArea": "MI",
                                        "firstName": "RTS",
                                        "phoneNumber": "999999999",
                                        "district": "MI",
                                        "buildingNumber": "123",
                                        "email": "test@cybs.com"
                                    },
                                    "amountDetails": {
                                        "totalAmount": "102.21",
                                        "currency": "USD"
                                    }
                                },
                                "paymentInformation": {
                                    "card": {
                                        "expirationYear": "2031",
                                        "number": "5555555555554444",
                                        "securityCode": "123",
                                        "expirationMonth": "12",
                                        "type": "002"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2PaymentsPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        },
                                        "reversal": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        },
                                        "capture": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - AUTHORIZED\n - PARTIAL_AUTHORIZED\n - AUTHORIZED_PENDING_REVIEW\n - DECLINED\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "AUTHORIZED",
                                        "PARTIAL_AUTHORIZED",
                                        "AUTHORIZED_PENDING_REVIEW",
                                        "DECLINED"
                                    ]
                                },
                                "reconciliationId": {
                                    "type": "string",
                                    "maxLength": 60,
                                    "description": "The reconciliation id for the submitted transaction. This value is not returned for all processors.\n"
                                },
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string",
                                            "description": "The reason of the status.\n\nPossible values:\n - AVS_FAILED\n - CONTACT_PROCESSOR\n - EXPIRED_CARD\n - PROCESSOR_DECLINED\n - INSUFFICIENT_FUND\n - STOLEN_LOST_CARD\n - ISSUER_UNAVAILABLE\n - UNAUTHORIZED_CARD\n - CVN_NOT_MATCH\n - EXCEEDS_CREDIT_LIMIT\n - INVALID_CVN\n - DECLINED_CHECK\n - BLACKLISTED_CUSTOMER\n - SUSPENDED_ACCOUNT\n - PAYMENT_REFUSED\n - CV_FAILED\n - INVALID_ACCOUNT\n - GENERAL_DECLINE\n - INVALID_MERCHANT_CONFIGURATION\n",
                                            "enum": [
                                                "AVS_FAILED",
                                                "CONTACT_PROCESSOR",
                                                "CV_FAILED",
                                                "EXPIRED_CARD",
                                                "PROCESSOR_DECLINED",
                                                "INSUFFICIENT_FUND",
                                                "STOLEN_LOST_CARD",
                                                "ISSUER_UNAVAILABLE",
                                                "UNAUTHORIZED_CARD",
                                                "CVN_NOT_MATCH",
                                                "EXCEEDS_CREDIT_LIMIT",
                                                "INVALID_CVN",
                                                "PAYMENT_REFUSED",
                                                "INVALID_ACCOUNT",
                                                "GENERAL_DECLINE"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "The detail message related to the status and reason listed above."
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                                    },
                                                    "reason": {
                                                        "type": "string",
                                                        "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                        "enum": [
                                                            "MISSING_FIELD",
                                                            "INVALID_DATA"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "bankTransferOptions": {
                                            "type": "object",
                                            "properties": {
                                                "settlementMethod": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Method used for settlement.\n\nPossible values:\n- **A**: Automated Clearing House (default for credits and for transactions using Canadian dollars)\n- **F**: Facsimile draft (U.S. dollars only)\n- **B**: Best possible (U.S. dollars only) (default if the field has not already been configured for your\nmerchant ID)\n\nSee \"Settlement Delivery Methods,\" page 44.\n"
                                                },
                                                "fraudScreeningLevel": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Level of fraud screening.\n\nPossible values:\n- **1**: Validation \u2014 default if the field has not already been configured for your merchant ID\n- **2**: Verification\n\nFor a description of this feature and a list of supported processors, see \"Verification and Validation,\" page 24.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "processorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "authIndicator": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Flag that specifies the purpose of the authorization.\n\nPossible values:\n - **0**: Preauthorization\n - **1**: Final authorization\n\nFor processor-specific information, see the auth_indicator field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "approvalCode": {
                                            "type": "string",
                                            "description": "Authorization code. Returned only when the processor returns this value.\n"
                                        },
                                        "transactionId": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Network transaction identifier (TID). You can use this value to identify a specific transaction when you are\ndiscussing the transaction with your processor. Not all processors provide this value.\n"
                                        },
                                        "networkTransactionId": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "providerTransactionId": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "responseCode": {
                                            "type": "string",
                                            "maxLength": 10,
                                            "description": "For most processors, this is the error message sent directly from the bank. Returned only when the processor\nreturns this value.\n\nImportant Do not use this field to evaluate the result of the authorization.\n"
                                        },
                                        "responseCodeSource": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Used by Visa only and contains the response source/reason code that identifies the source of the response decision.\n"
                                        },
                                        "responseDetails": {
                                            "type": "string",
                                            "maxLength": 255,
                                            "description": "This field might contain information about a decline. This field is supported only for **CyberSource through\nVisaNet**.\n"
                                        },
                                        "responseCategoryCode": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Processor-defined response category code. The associated detail error code is in the auth_auth_response\nfield or the auth_reversal_auth_ response field depending on which service you requested.\n\nThis field is supported only for:\n\n - Japanese issuers\n - Domestic transactions in Japan\n - Comercio Latino\u2014processor transaction ID required for troubleshooting\n\n**Maximum length for processors**:\n\n - Comercio Latino: 32\n - All other processors: 3\n"
                                        },
                                        "forwardedAcquirerCode": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Name of the Japanese acquirer that processed the transaction. Returned only for CCS (CAFIS) and JCN Gateway.\nPlease contact the CyberSource Japan Support Group for more information.\n"
                                        },
                                        "avs": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "description": "AVS result code.\n"
                                                },
                                                "codeRaw": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "AVS result code sent directly from the processor. Returned only when the processor returns this value.\nImportant Do not use this field to evaluate the result of AVS. Use for debugging purposes only.\n"
                                                }
                                            }
                                        },
                                        "cardVerification": {
                                            "type": "object",
                                            "properties": {
                                                "resultCode": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Result of card verification. Returned by the authorization service in the `processorInformation.cardVerification.resultCode`\nreply field. If ics_auth and ics_score are requested at the same time, the value is automatically\npassed from ics_auth to ics_score. For more information on using this field, see\n\"\"Sending the Results of Address and Card Verification Tests,\"\" page 16.\nThe field contains one of the following values:\n  - `I`: Card verification number failed processor's data\n  validation check.\n  - `M`: Card verification number matched.\n  - `N`: Card verification number not matched.\n  - `P`: Card verification number not processed.\n  - `S`: Card verification number is on the card but was not included in the request.\n  - `U`: Card verification is not supported by the issuing bank.\n  - `X`: Card verification is not supported by the payment card company.\n  - Space Character: Deprecated. Ignore this value.\n  - `1`: CyberSource does not support card verification for this processor or card type.\n  - `2`: Processor returned value unrecognized for card verification response.\n  - `3`: Processor did not return card verification result code.\n"
                                                },
                                                "resultCodeRaw": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "CVN result code sent directly from the processor. Returned only when the processor returns this value.\n\n`Important` Do not use this field to evaluate the result of card verification. Use for debugging purposes only.\n"
                                                }
                                            }
                                        },
                                        "merchantAdvice": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Reason the recurring payment transaction was declined. For some processors, this field is used only for\nMastercard. For other processors, this field is used for Visa and Mastercard. And for other processors, this\nfield is not implemented.\n\nPossible values:\n\n - **00**: Response not provided.\n - **01**: New account information is available. Obtain the new information.\n - **02**: Try again later.\n - **03**: Do not try again. Obtain another type of payment from the customer.\n - **04**: Problem with a token or a partial shipment indicator.\n - **21**: Recurring payment cancellation service.\n - **99**: An unknown value was returned from the processor.\n"
                                                },
                                                "codeRaw": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Raw merchant advice code sent directly from the processor. This field is used only for Mastercard.\n\nFor processor-specific information, see the auth_merchant_advice_code_raw field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        },
                                        "electronicVerificationResults": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Mapped Electronic Verification response code for the customer\u2019s name.\n"
                                                },
                                                "codeRaw": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Raw Electronic Verification response code from the processor for the customer\u2019s last name"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Mapped Electronic Verification response code for the customer\u2019s email address.\n"
                                                },
                                                "emailRaw": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Raw Electronic Verification response code from the processor for the customer\u2019s email address."
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Mapped Electronic Verification response code for the customer\u2019s phone number.\n"
                                                },
                                                "phoneNumberRaw": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Raw Electronic Verification response code from the processor for the customer\u2019s phone number."
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Mapped Electronic Verification response code for the customer\u2019s postal code.\n"
                                                },
                                                "postalCodeRaw": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Raw Electronic Verification response code from the processor for the customer\u2019s postal code."
                                                },
                                                "street": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Mapped Electronic Verification response code for the customer\u2019s street address.\n"
                                                },
                                                "streetRaw": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Raw Electronic Verification response code from the processor for the customer\u2019s street address."
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 30,
                                                    "description": "The description for this field is not available.\n"
                                                },
                                                "nameRaw": {
                                                    "type": "string",
                                                    "maxLength": 30,
                                                    "description": "The description for this field is not available."
                                                }
                                            }
                                        },
                                        "achVerification": {
                                            "type": "object",
                                            "properties": {
                                                "resultCode": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Results from the ACH verification service, which is described in \"ACH Verification,\" page 25. For the possible\nvalues, see Appendix H, \"Verification Codes,\" on page 91.\n"
                                                },
                                                "resultCodeRaw": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Raw results from the ACH verification service, which is described in \"ACH Verification,\" page 25. For the\npossible values, see Appendix H, \"Verification Codes,\" on page 91.\n"
                                                }
                                            }
                                        },
                                        "customer": {
                                            "type": "object",
                                            "properties": {
                                                "personalIdResult": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Personal identifier result. This field is supported only for Redecard in Brazil for CyberSource Latin\nAmerican Processing. If you included _buyerInformation.personalIdentification[].ID_ in the request, this\nvalue indicates whether or not _buyerInformation.personalIdentification[].ID_ matched a value in a record\non file. Returned only when the personal ID result is returned by the processor.\n\nPossible values:\n\n - **Y**: Match\n - **N**: No match\n - **K**: Not supported\n - **U**: Unknown\n - **Z**: No response returned\n"
                                                }
                                            }
                                        },
                                        "consumerAuthenticationResponse": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Mapped response code for Verified by Visa and American Express SafeKey:\n"
                                                },
                                                "codeRaw": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Raw response code sent directly from the processor for Verified by Visa and American Express SafeKey:\n"
                                                }
                                            }
                                        },
                                        "systemTraceAuditNumber": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "description": "This field is returned only for **American Express Direct** and **CyberSource through VisaNet**.\n\n**American Express Direct**\n\nSystem trace audit number (STAN). This value identifies the transaction and is useful when investigating a\nchargeback dispute.\n\n**CyberSource through VisaNet**\n\nSystem trace number that must be printed on the customer\u2019s receipt.\n"
                                        },
                                        "paymentAccountReferenceNumber": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Visa-generated reference number that identifies a card-present transaction for which youprovided one of the\nfollowing:\n\n - Visa primary account number (PAN)\n - Visa-generated token for a PAN\n\nThis reference number serves as a link to the cardholder account and to all transactions for that account.\n"
                                        },
                                        "transactionIntegrityCode": {
                                            "type": "string",
                                            "maxLength": 2,
                                            "description": "Transaction integrity classification provided by Mastercard. This value specifies Mastercard\u2019s evaluation of\nthe transaction\u2019s safety and security. This field is returned only for **CyberSource through VisaNet**.\n\nFor card-present transactions, possible values:\n\n - **A1**: EMV or token in a secure, trusted environment\n - **B1**: EMV or chip equivalent\n - **C1**: Magnetic stripe\n - **E1**: Key entered\n - **U0**: Unclassified\n\nFor card-not-present transactions, possible values:\n\n - **A2**: Digital transactions\n - **B2**: Authenticated checkout\n - **C2**: Transaction validation\n - **D2**: Enhanced data\n - **E2**: Generic messaging\n - **U0**: Unclassified\n\nFor information about these values, contact Mastercard or your acquirer.\n"
                                        },
                                        "amexVerbalAuthReferenceNumber": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "description": "Referral response number for a verbal authorization with FDMS Nashville when using an American Express card.\nGive this number to American Express when you call them for the verbal authorization.\n"
                                        },
                                        "salesSlipNumber": {
                                            "type": "number",
                                            "maximum": 99999,
                                            "description": "Transaction identifier that CyberSource generates. You have the option of printing the sales slip number on\nthe receipt.\n\nThis field is supported only for **JCN Gateway**.\n"
                                        },
                                        "masterCardServiceCode": {
                                            "type": "string",
                                            "maxLength": 2,
                                            "description": "Mastercard service that was used for the transaction. Mastercard provides this value to CyberSource.\n\nPossible value:\n - 53: Mastercard card-on-file token service\n"
                                        },
                                        "masterCardServiceReplyCode": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Result of the Mastercard card-on-file token service. Mastercard provides this value to CyberSource.\n\nPossible values:\n\n - **C**: Service completed successfully.\n - **F**: One of the following:\n   - Incorrect Mastercard POS entry mode. The Mastercard POS entry mode should be 81 for an authorization or\n     authorization reversal.\n   - Incorrect Mastercard POS entry mode. The Mastercard POS entry mode should be 01 for a tokenized request.\n   - Token requestor ID is missing or formatted incorrectly.\n - **I**: One of the following:\n   - Invalid token requestor ID.\n   - Suspended or deactivated token.\n   - Invalid token (not in mapping table).\n - **T**: Invalid combination of token requestor ID and token.\n - **U**: Expired token.\n - **W**: Primary account number (PAN) listed in electronic warning bulletin.\n\nNote This field is returned only for **CyberSource through VisaNet**.\n"
                                        },
                                        "masterCardAuthenticationType": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Type of authentication for which the transaction qualifies as determined by the Mastercard authentication\nservice, which confirms the identity of the cardholder. Mastercard provides this value to CyberSource.\n\nPossible values:\n\n - **1**: Transaction qualifies for Mastercard authentication type 1.\n - **2**: Transaction qualifies for Mastercard authentication type 2.\n"
                                        },
                                        "name": {
                                            "type": "string",
                                            "maxLength": 30,
                                            "description": "Name of the Processor.\n"
                                        },
                                        "routing": {
                                            "type": "object",
                                            "properties": {
                                                "network": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Indicates whether the transaction was routed on a credit network, a debit network, or the STAR signature debit\nnetwork.\n\nPossible values:\n- C: Credit network\n- D: Debit network (without signature)\n- S: STAR signature debit network\n\nThis field is supported only on FDC Nashville Global.\n"
                                                },
                                                "networkName": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Name of the network on which the transaction was routed.\n\nThis field is supported only on FDC Nashville Global.\n"
                                                },
                                                "customerSignatureRequired": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Indicates whether you need to obtain the cardholder's signature.\n\nPossible values:\n- Y: You need to obtain the cardholder's signature.\n- N: You do not need to obtain the cardholder's signature.\n\nThis field is supported only on FDC Nashville Global.\n"
                                                }
                                            }
                                        },
                                        "merchantNumber": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Identifier that was assigned to you by your acquirer.\n\nThis value must be printed on the receipt.\n\nThis field is supported only on **American Express Direct**, **FDC Nashville Global**, and **SIX**.\n"
                                        }
                                    }
                                },
                                "issuerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "country": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Country in which the card was issued. This information enables you to determine whether the card was issued\ndomestically or internationally. Use the two-character ISO Standard Country Codes.\n\nThis field is supported for Visa, Mastercard, Discover, Diners Club, JCB, and Maestro (International) on Chase\nPaymentech Solutions.\n"
                                        },
                                        "discretionaryData": {
                                            "type": "string",
                                            "maxLength": 255,
                                            "description": "Data defined by the issuer.\n\nThe value for this reply field will probably be the same as the value that you submitted in the authorization request, but it is possible for the processor, issuer, or acquirer to modify the value.\n\nThis field is supported only for Visa transactions on **CyberSource through VisaNet**.\n\nFor more information, see Appendix K, \"Formats for  Discretionary Data,\" on page 359.\n"
                                        },
                                        "responseCode": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "description": "Additional authorization code that must be printed on the receipt when returned by the processor.\n\nThis value is generated by the processor and is returned only for a successful transaction.\n\nThis field is supported only on FDC Nashville Global and SIX.\n"
                                        }
                                    }
                                },
                                "paymentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "suffix": {
                                                    "type": "string",
                                                    "description": "Last four digits of the cardholder\u2019s account number. This field is returned only for tokenized transactions.\nYou can use this value on the receipt that you give to the cardholder.\n"
                                                }
                                            }
                                        },
                                        "tokenizedCard": {
                                            "type": "object",
                                            "properties": {
                                                "prefix": {
                                                    "type": "string",
                                                    "maxLength": 6,
                                                    "description": "First six digits of token. CyberSource includes this field in the reply message when it decrypts the payment\nblob for the tokenized transaction.\n"
                                                },
                                                "suffix": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Last four digits of token. CyberSource includes this field in the reply message when it decrypts the payment\nblob for the tokenized transaction.\n"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                },
                                                "assuranceLevel": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Confidence level of the tokenization. This value is assigned by the token service provider.\n\n`Note` This field is supported only for **CyberSource through VisaNet** and **FDC Nashville Global**.\n"
                                                },
                                                "expirationMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Two-digit month in which the payment network token expires. `Format: MM`. Possible values: 01 through 12.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (01 through 12) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use 12.\n\nFor processor-specific information, see the customer_cc_expmo field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Four-digit year in which the payment network token expires. `Format: YYYY`.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (1900 through 3000) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**FDC Nashville Global and FDMS South**\\\nYou can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (card_type=039), if there is no expiration date on the card, use 2021.\n\nFor processor-specific information, see the customer_cc_expyr field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "requestorId": {
                                                    "type": "string",
                                                    "maxLength": 11,
                                                    "description": "Value that identifies your business and indicates that the cardholder\u2019s account number is tokenized. This value\nis assigned by the token service provider and is unique within the token service provider\u2019s database.\n\n`Note` This field is supported only for **CyberSource through VisaNet** and **FDC Nashville Global**.\n"
                                                }
                                            }
                                        },
                                        "accountFeatures": {
                                            "type": "object",
                                            "properties": {
                                                "accountType": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Type of account. This value is returned only if you requested a balance inquiry. Possible values:\n\n - **00**: Not applicable or not specified\n - **10**: Savings account\n - **20**: Checking account\n - **30**: Credit card account\n - **40**: Universal account\n"
                                                },
                                                "accountStatus": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Possible values:\n\n - **N**: Nonregulated\n - **R**: Regulated\n\n`Note` This field is returned only for CyberSource through VisaNet.\n"
                                                },
                                                "balanceAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "Remaining balance on the account.\n"
                                                },
                                                "balanceAmountType": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Type of amount. This value is returned only if you requested a balance inquiry. The issuer determines the value\nthat is returned. Possible values for deposit accounts:\n\n - **01**: Current ledger (posted) balance.\n - **02**: Current available balance, which is typically the ledger balance less outstanding authorizations.\n\nSome depository institutions also include pending deposits and the credit or overdraft line associated with the\naccount. Possible values for credit card accounts:\n\n - **01**: Credit amount remaining for customer (open to buy).\n - **02**: Credit limit.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Currency of the remaining balance on the account. For the possible values, see the ISO Standard Currency Codes.\n"
                                                },
                                                "balanceSign": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Sign for the remaining balance on the account. Returned only when the processor returns this value. Possible values:\n\nPossible values:\n - **+**\n - **-**\n",
                                                    "enum": [
                                                        "+",
                                                        "-"
                                                    ]
                                                },
                                                "affluenceIndicator": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "**Chase Paymentech Solutions**\n\nIndicates whether a customer has high credit limits. This information enables you to market high cost items to\nthese customers and to understand the kinds of cards that high income customers are using.\n\nThis field is supported for Visa, Mastercard, Discover, and Diners Club. Possible values:\n\n - **Y**: Yes\n - **N**: No\n - **X**: Not applicable / Unknown\n\n**Litle**\n\nFlag that indicates that a Visa cardholder or Mastercard cardholder is in one of the affluent categories.\nPossible values:\n\n - **AFFLUENT**: High income customer with high spending pattern (>100k USD annual income and >40k USD annual\n   card usage).\n - **MASS AFFLUENT**: High income customer (>100k USD annual income).\n\n**Processor specific maximum length**:\n\n - Chase Paymentech Solutions: 1\n - Litle: 13\n"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "maxLength": 7,
                                                    "description": "**CyberSource through VisaNet**\n\nVisa product ID.\n\n**GPN**\n\nVisa or Mastercard product ID.\n\n**Litle**\n\nType of card used in the transaction. The only possible value is:\n\n - PREPAID: Prepaid Card\n\n**RBS WorldPay Atlanta**\n\nType of card used in the transaction. Possible values:\n\n - **B**: Business Card\n - **O**: Noncommercial Card\n - **R**: Corporate Card\n - **S**: Purchase Card\n - **Blank**: Purchase card not supported\n\n**Maximum length for processors**:\n\n - CyberSource through VisaNet: 3\n - GPN: 3\n - Litle: 7\n - RBS WorldPay Atlanta: 1\n"
                                                },
                                                "commercial": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Indicates whether the card is a commercial card, which enables you to include Level II data in your transaction\nrequests. This field is supported for Visa and Mastercard on **Chase Paymentech Solutions**. Possible values:\n\n - **Y**: Yes\n - **N**: No\n - **X**: Not applicable / Unknown\n"
                                                },
                                                "group": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Type of commercial card. This field is supported only for CyberSource through VisaNet. Possible values:\n\n - **B**: Business card\n - **R**: Corporate card\n - **S**: Purchasing card\n - **0**: Noncommercial card\n"
                                                },
                                                "healthCare": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Indicates whether the card is a healthcare card. This field is supported for Visa and Mastercard on **Chase\nPaymentech Solutions**. Possible values:\n\n - **Y**: Yes\n - **N**: No\n - **X**: Not applicable / Unknown\n"
                                                },
                                                "payroll": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Indicates whether the card is a payroll card. This field is supported for Visa, Discover, Diners Club, and JCB\non **Chase Paymentech Solutions**. Possible values:\n\n - **Y**: Yes\n - **N**: No\n - **X**: Not applicable / Unknown\n"
                                                },
                                                "level3Eligible": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Indicates whether the card is eligible for Level III interchange fees, which enables you to include Level III\ndata in your transaction requests. This field is supported for Visa and Mastercard on **Chase Paymentech\nSolutions**. Possible values:\n\n - **Y**: Yes\n - **N**: No\n - **X**: Not applicable / Unknown\n"
                                                },
                                                "pinlessDebit": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Indicates whether the card is a PINless debit card. This field is supported for Visa and Mastercard on **Chase\nPaymentech Solutions**. Possible values:\n\n - **Y**: Yes\n - **N**: No\n - **X**: Not applicable / Unknown\n"
                                                },
                                                "signatureDebit": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Indicates whether the card is a signature debit card. This information enables you to alter the way an order is\nprocessed. For example, you might not want to reauthorize a transaction for a signature debit card, or you might\nwant to perform reversals promptly for a signature debit card. This field is supported for Visa, Mastercard, and\nMaestro (International) on Chase Paymentech Solutions. Possible values:\n\n - **Y**: Yes\n - **N**: No\n - **X**: Not applicable / Unknown\n"
                                                },
                                                "prepaid": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Indicates whether the card is a prepaid card. This information enables you to determine when a gift card or\nprepaid card is presented for use when establishing a new recurring, installment, or deferred billing\nrelationship.\n\nThis field is supported for Visa, Mastercard, Discover, Diners Club, and JCB on Chase Paymentech Solutions.\nPossible values:\n\n - **Y**: Yes\n - **N**: No\n - **X**: Not applicable / Unknown\n"
                                                },
                                                "regulated": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Indicates whether the card is regulated according to the Durbin Amendment. If the card is regulated, the card\nissuer is subject to price caps and interchange rules. This field is supported for Visa, Mastercard, Discover,\nDiners Club, and JCB on Chase Paymentech Solutions. Possible values:\n\n - **Y**: Yes (assets greater than 10B USD)\n - **N**: No (assets less than 10B USD)\n - **X**: Not applicable / Unknown\n"
                                                }
                                            }
                                        },
                                        "bank": {
                                            "type": "object",
                                            "properties": {
                                                "account": {
                                                    "type": "object",
                                                    "properties": {
                                                        "correctedAccountNumber": {
                                                            "type": "string",
                                                            "maxLength": 17,
                                                            "description": "Corrected account number from the ACH verification service, which is described in \"ACH Verification,\" page 25.\n"
                                                        }
                                                    }
                                                },
                                                "correctedRoutingNumber": {
                                                    "type": "string",
                                                    "maxLength": 9,
                                                    "description": "The description for this field is not available."
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Amount you requested for the payment or capture.\n\nThis value is returned for partial authorizations.\n"
                                                },
                                                "authorizedAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Amount that was authorized.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                }
                                            }
                                        },
                                        "invoiceDetails": {
                                            "type": "object",
                                            "properties": {
                                                "level3TransmissionStatus": {
                                                    "type": "boolean",
                                                    "description": "Indicates whether CyberSource sent the Level III information to the processor. The possible values are:\n\nIf your account is not enabled for Level III data or if you did not include the purchasing level field in your\nrequest, CyberSource does not include the Level III data in the request sent to the processor.\n\nFor processor-specific information, see the bill_purchasing_level3_enabled field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n\nPossible values:\n- **true**\n- **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "emv": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "maxLength": 1998,
                                                    "description": "EMV data that is transmitted from the chip card to the issuer, and from the issuer to the chip card. The EMV\ndata is in the tag-length-value format and includes chip card tags, terminal tags, and transaction detail tags.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10. For information about the individual tags, see the \u201cApplication Specification\u201d section in the EMV 4.3 Specifications: http://emvco.com\n\n**Important** The following tags contain sensitive information and **must not** be included in this field:\n\n - **56**: Track 1 equivalent data\n - **57**: Track 2 equivalent data\n - **5A**: Application PAN\n - **5F20**: Cardholder name\n - **5F24**: Application expiration date (This sensitivity has been relaxed for cmcic, amexdirect, fdiglobal, opdfde, and six)\n - **99**: Transaction PIN\n - **9F0B**: Cardholder name (extended)\n - **9F1F**: Track 1 discretionary data\n - **9F20**: Track 2 discretionary data\n\nFor captures, this field is required for contact EMV transactions. Otherwise, it is optional.\n\nFor credits, this field is required for contact EMV stand-alone credits and contactless EMV stand-alone credits.\nOtherwise, it is optional.\n\n**Important** For contact EMV captures, contact EMV stand-alone credits, and contactless EMV stand-alone credits,\nyou must include the following tags in this field. For all other types of EMV transactions, the following tags\nare optional.\n\n - **95**: Terminal verification results\n - **9F10**: Issuer application data\n - **9F26**: Application cryptogram\n"
                                                }
                                            }
                                        },
                                        "amexCapnData": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Point-of-sale details for the transaction. This value is returned only for **American Express Direct**.\nCyberSource generates this value, which consists of a series of codes that identify terminal capability,\nsecurity data, and specific conditions present at the time the transaction occurred. To comply with the CAPN\nrequirements, this  value must be included in all subsequent follow-on requests, such as captures and follow-on\ncredits.\n\nWhen you perform authorizations, captures, and credits through CyberSource, CyberSource passes this value from\nthe authorization service to the subsequent services for you. However, when you perform authorizations through\nCyberSource and perform subsequent services through other financial institutions, you must ensure that your\nrequests for captures and credits include this value.\n"
                                        }
                                    }
                                },
                                "installmentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "additionalCosts": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Additional costs charged by the issuer to fund the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 128-139\n- Field: Total Other Costs\n"
                                        },
                                        "additionalCostsPercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Additional costs divided by the amount funded.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 140-143\n- Field: Percent of Total Other Costs\n"
                                        },
                                        "amountFunded": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Amount funded.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 48-59\n- Field: Total Amount Funded\n"
                                        },
                                        "amountRequestedPercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Amount requested divided by the amount funded.\n\nFor example:\n- A value of 90.0 specifies 90%.\n- A value of 93.7 specifies 93.7%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 60-63\n- Field: Percent of Amount Requested\n"
                                        },
                                        "annualFinancingCost": {
                                            "type": "string",
                                            "maximum": 7,
                                            "description": "Annual cost of financing the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 158-164\n- Field: Annual Total Cost of Financing\n"
                                        },
                                        "annualInterestRate": {
                                            "type": "string",
                                            "maximum": 7,
                                            "description": "Annual interest rate.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 151-157\n- Field: Annual Interest Rate\n"
                                        },
                                        "expenses": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Expenses charged by the issuer to fund the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 64-75\n- Field: Total Expenses\n"
                                        },
                                        "expensesPercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Expenses divided by the amount funded.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 76-79\n- Field: Percent of Total Expenses\n"
                                        },
                                        "fees": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Fees charged by the issuer to fund the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 80-91\n- Field: Total Fees\n"
                                        },
                                        "feesPercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Fees divided by the amount funded.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 92-95\n- Field: Percent of Total Fees\n"
                                        },
                                        "insurance": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Insurance charged by the issuer to fund the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 112-123\n- Field: Total Insurance\n"
                                        },
                                        "insurancePercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Insurance costs divided by the amount funded.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 124-127\n- Field: Percent Of Total Insurance\n"
                                        },
                                        "monthlyInterestRate": {
                                            "type": "string",
                                            "maximum": 7,
                                            "description": "Monthly interest rate.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 144-150\n- Field: Monthly Interest Rate\n"
                                        },
                                        "taxes": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Taxes collected by the issuer to fund the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 96-107\n- Field: Total Taxes\n"
                                        },
                                        "taxesPercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Taxes divided by the amount funded.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 108-111\n- Field: Percent of Total Taxes\n"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/payments/4963015972176007901546",
                                        "method": "GET"
                                    },
                                    "authReversal": {
                                        "href": "/pts/v2/payments/4963015972176007901546/reversals",
                                        "method": "POST"
                                    },
                                    "capture": {
                                        "href": "/pts/v2/payments/4963015972176007901546/captures",
                                        "method": "POST"
                                    },
                                    "refund": {
                                        "href": "/pts/v2/payments/4963015972176007901546/refunds",
                                        "method": "POST"
                                    },
                                    "void": {
                                        "href": "/pts/v2/payments/4963015972176007901546/voids",
                                        "method": "POST"
                                    }
                                },
                                "id": "4963015972176007901546",
                                "submitTimeUtc": "2017-06-01T071957Z",
                                "status": "200",
                                "reconciliationId": "39570726X3E1LBQR",
                                "statusInformation": {
                                    "reason": "SUCCESS",
                                    "message": "Successful transaction."
                                },
                                "clientReferenceInformation": {
                                    "code": "TC50171_3"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "authorizedAmount": "102.21",
                                        "currency": "USD"
                                    }
                                },
                                "processorInformation": {
                                    "approvalCode": "888888",
                                    "cardVerification": {
                                        "resultCode": ""
                                    },
                                    "avs": {
                                        "code": "X",
                                        "codeRaw": "I1"
                                    },
                                    "responseCode": "100"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "type": "object",
                            "title": "ptsV2PaymentsPost400Response",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_CARD\n - CARD_TYPE_NOT_ACCEPTED\n - INVALID_MERCHANT_CONFIGURATION\n - PROCESSOR_UNAVAILABLE\n - INVALID_AMOUNT\n - INVALID_CARD_TYPE\n - INVALID_PAYMENT_ID\n - DEBIT_CARD_USEAGE_EXCEEDD_LIMIT\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_CARD",
                                        "CARD_TYPE_NOT_ACCEPTED",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "PROCESSOR_UNAVAILABLE",
                                        "INVALID_AMOUNT",
                                        "INVALID_CARD_TYPE",
                                        "DEBIT_CARD_USEAGE_EXCEEDD_LIMIT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2PaymentsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Simple Authorization(Internet)",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_3"
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address2": "Address 2",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "102.21",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationYear": "2031",
                                    "number": "4111111111111111",
                                    "securityCode": "123",
                                    "expirationMonth": "12"
                                }
                            }
                        }
                    },
                    "example1": {
                        "summary": "Simple Authorization(Retail)",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_8"
                            },
                            "pointOfSaleInformation": {
                                "terminalId": "001",
                                "cardPresent": "Y",
                                "entryMode": "keyed",
                                "terminalCapability": "2"
                            },
                            "processingInformation": {
                                "commerceIndicator": "retail"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address2": "Address 2",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "108.00",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationYear": "2031",
                                    "number": "5555555555554444",
                                    "securityCode": "123",
                                    "expirationMonth": "12",
                                    "type": "002"
                                }
                            }
                        }
                    },
                    "example2": {
                        "summary": "Payment with Payment Instrument Token",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_3"
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "22",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "customer": {
                                    "customerId": "7500BB199B4270EFE05340588D0AFCAD"
                                }
                            }
                        }
                    },
                    "example3": {
                        "summary": "Payment Network Tokenization",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC_123122"
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "100",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "tokenizedCard": {
                                    "expirationYear": "2031",
                                    "number": "4111111111111111",
                                    "expirationMonth": "12",
                                    "transactionType": "1"
                                }
                            },
                            "consumerAuthenticationInformation": {
                                "cavv": "AAABCSIIAAAAAAACcwgAEMCoNh+=",
                                "xid": "T1Y0OVcxMVJJdkI0WFlBcXptUzE="
                            }
                        }
                    },
                    "example4": {
                        "summary": "Digital Payment - GooglePay",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC_1231223"
                            },
                            "processingInformation": {
                                "paymentSolution": "012",
                                "commerceIndicator": "internet"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "country": "US",
                                    "firstName": "John",
                                    "lastName": "Deo",
                                    "phoneNumber": "6504327113",
                                    "address1": "901 Metro Center Blvd",
                                    "postalCode": "94404",
                                    "locality": "Foster City",
                                    "administrativeArea": "CA",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "20",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "tokenizedCard": {
                                    "expirationYear": "2020",
                                    "number": "4111111111111111",
                                    "expirationMonth": "12",
                                    "transactionType": "1",
                                    "cryptogram": "EHuWW9PiBkWvqE5juRwDzAUFBAk="
                                }
                            }
                        }
                    },
                    "example5": {
                        "summary": "Digital Payments - ApplePay",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC_1231223"
                            },
                            "processingInformation": {
                                "paymentSolution": "001",
                                "commerceIndicator": "internet"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "country": "US",
                                    "firstName": "John",
                                    "lastName": "Deo",
                                    "phoneNumber": "6504327113",
                                    "address2": "Desk M3-5573",
                                    "address1": "901 Metro Center Blvd",
                                    "postalCode": "94404",
                                    "locality": "Foster City",
                                    "administrativeArea": "CA",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "10",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "tokenizedCard": {
                                    "expirationYear": "2031",
                                    "number": "4111111111111111",
                                    "expirationMonth": "12",
                                    "transactionType": "1",
                                    "cryptogram": "AceY+igABPs3jdwNaDg3MAACAAA="
                                }
                            }
                        }
                    },
                    "example6": {
                        "summary": "CyberSource MPOS - EMV",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_16"
                            },
                            "pointOfSaleInformation": {
                                "cardPresent": "Y",
                                "catLevel": "1",
                                "endlessAisleTransactionIndicator": "true",
                                "entryMode": "contact",
                                "terminalCapability": "1",
                                "emv": {
                                    "fallbackCondition": "1",
                                    "fallback": "true"
                                }
                            },
                            "processingInformation": {
                                "commerceIndicator": "retail",
                                "paymentSolution": "011"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address2": "Address 2",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "15.0",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "fluidData": {
                                    "descriptor": "EMV.PAYMENT.AnywhereCommerce.Walker",
                                    "value": "ewogICJkYXRhIiA6ICJOZmNwRURiK1dLdzBnQkpsaTRcL1hlWm1ITzdUSng0bnRoMnc2Mk9ITVJQK3hCRlFPdFE0WWpRcnY0RmFkOHh6VExqT2VFQm5iNHFzeGZMYTNyNXcxVEdXblFGQnNzMWtPYnA0XC95alNtVE1JSGVjbGc5OFROaEhNb0VRcjJkRkFqYVpBTFAxSlBsdVhKSVwvbTZKSmVwNGh3VHRWZE16Z2laSUhnaWFCYzNXZVd1ZnYzc1l0cGRaZDZYZENEUFdLeXFkYjBJdUtkdkpBPT0iLAogICJzaWduYXR1cmUiIDogIkFxck1pKzc0cm1GeVBKVE9HN3NuN2p5K1YxTlpBZUNJVE56TW01N1B5cmc9IiwKICAic2lnbmF0dXJlQWxnSW5mbyIgOiAiSE1BQ3dpdGhTSEEyNTYiLAogICJoZWFkZXIiIDogewogICAgInRyYW5zYWN0aW9uSWQiIDogIjE1MTU2MjI2NjIuMTcyMjIwIiwKICAgICJwdWJsaWNLZXlIYXNoIiA6ICJcLzdmdldqRVhMazJPRWpcL3Z5bk1jeEZvMmRWSTlpRXVoT2Nab0tHQnpGTmM9IiwKICAgICJhcHBsaWNhdGlvbkRhdGEiIDogIkN5YmVyU291cmNlLlZNcG9zS2l0IiwKICAgICJlcGhlbWVyYWxQdWJsaWNLZXkiIDogIk1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRW1JN0tScnRNN2NNelk5Zmw2UWt2NEQzdE9jU0NYR1hoOFwvK2R4K2s5c1Zrbk05UFQrOXRqMzk2YWF6QjRcL0hYaWlLRW9DXC9jUzdoSzF6UFk3MVwvN0pUUT09IgogIH0sCiAgInZlcnNpb24iIDogIjEuMCIKfQ=="
                                }
                            }
                        }
                    },
                    "example7": {
                        "summary": "Zero Dollar Authorization",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "1234567890"
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": 0,
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationYear": "2031",
                                    "number": "5555555555554444",
                                    "securityCode": "123",
                                    "expirationMonth": "12"
                                }
                            }
                        }
                    },
                    "example8": {
                        "summary": "Level II Data",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_12"
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "invoiceDetails": {
                                    "purchaseOrderNumber": "LevelII Auth Po"
                                },
                                "amountDetails": {
                                    "totalAmount": "112.00",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationYear": "2031",
                                    "number": "4111111111111111",
                                    "securityCode": "123",
                                    "expirationMonth": "12",
                                    "type": "001"
                                }
                            }
                        }
                    },
                    "example9": {
                        "summary": "Level III Data",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_14"
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet",
                                "purchaseLevel": "3"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "invoiceDetails": {
                                    "purchaseOrderNumber": "LevelIII Auth Po"
                                },
                                "lineItems": [
                                    {
                                        "discountApplied": "false",
                                        "quantity": "10",
                                        "unitPrice": "10.00",
                                        "totalAmount": "100",
                                        "productCode": "default",
                                        "amountIncludesTax": "false"
                                    }
                                ],
                                "amountDetails": {
                                    "totalAmount": "100.00",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationYear": "2031",
                                    "number": "4111111111111111",
                                    "securityCode": "123",
                                    "expirationMonth": "12",
                                    "type": "001"
                                }
                            }
                        }
                    },
                    "example10": {
                        "summary": "Partial Authorization",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "1234567890"
                            },
                            "pointOfSaleInformation": {
                                "cardPresent": "true",
                                "catLevel": "6",
                                "emv": {
                                    "fallbackCondition": "1",
                                    "fallback": "false"
                                },
                                "terminalCapability": "4"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "7012.00",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationYear": "2031",
                                    "number": "4111111111111111",
                                    "securityCode": "123",
                                    "expirationMonth": "12"
                                }
                            }
                        }
                    },
                    "example11": {
                        "summary": "Electronic Check Debits",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_3"
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "100",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "bank": {
                                    "account": {
                                        "number": "4100",
                                        "type": "C"
                                    },
                                    "routingNumber": "071923284"
                                }
                            }
                        }
                    },
                    "example12": {
                        "summary": "Service Fees with Credit Card transaction",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_3"
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "2325.00",
                                    "currency": "USD",
                                    "serviceFeeAmount": "30.0"
                                }
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationYear": "2031",
                                    "number": "4111111111111111",
                                    "securityCode": "123",
                                    "expirationMonth": "12"
                                }
                            },
                            "merchantInformation": {
                                "serviceFeeDescriptor": {
                                    "name": "CyberVacations Service Fee",
                                    "contact": "800-999-9999",
                                    "state": "CA"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v2/payments/{id}/reversals": {
            "post": {
                "summary": "Process an Authorization Reversal",
                "description": "Include the payment ID in the POST request to reverse the payment amount.",
                "tags": [
                    "reversal"
                ],
                "operationId": "authReversal",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The payment ID returned from a previous payment request.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "authReversalRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "reversalInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 19,
                                                    "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                }
                                            }
                                        },
                                        "reason": {
                                            "type": "string",
                                            "description": "Reason for the authorization reversal. Possible value:\n\n - 34: Suspected fraud\n\nCyberSource ignores this field for processors that do not support this value.\n"
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "paymentSolution": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Type of digital payment solution for the transaction. Possible Values:\n\n - **visacheckout**: Visa Checkout. This value is required for Visa Checkout transactions. See Visa Checkout Using the SCMP API.\n - **005**: Masterpass. This value is required for Masterpass transactions on OmniPay Direct. See \"Masterpass,\" page 153.\n"
                                        },
                                        "reconciliationId": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Please check with Cybersource customer support to see if your merchant account is configured correctly so you\ncan include this field in your request.\n* For Payouts: max length for FDCCompass is String (22).\n"
                                        },
                                        "linkId": {
                                            "type": "string",
                                            "maxLength": 26,
                                            "description": "Value that links the current authorization request to the original authorization request. Set this value\nto the ID that was returned in the reply message from the original authorization request.\n\nThis value is used for:\n\n - Partial authorizations: See \"Partial Authorizations,\" page 88.\n - Split shipments: See \"Split Shipments,\" page 210.\n"
                                        },
                                        "reportGroup": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Attribute that lets you define custom grouping for your processor reports. This field is supported only for **Worldpay VAP**.\n\nSee \"Report Groups,\" page 234.\n"
                                        },
                                        "visaCheckoutId": {
                                            "type": "string",
                                            "maxLength": 48,
                                            "description": "Identifier for the **Visa Checkout** order. Visa Checkout provides a unique order ID for every transaction in\nthe Visa Checkout **callID** field.\n\nFor more details, see Visa Checkout Using the SCMP API.\n"
                                        },
                                        "issuer": {
                                            "type": "object",
                                            "properties": {
                                                "discretionaryData": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Data defined by the issuer.\n\nThe value for this reply field will probably be the same as the value that you submitted in the authorization request, but it is possible for the processor, issuer, or acquirer to modify the value.\n\nThis field is supported only for Visa transactions on **CyberSource through VisaNet**.\n\nFor more information, see Appendix K, \"Formats for  Discretionary Data,\" on page 359.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "serviceFeeAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Service fee. Required for service fee transactions.\n"
                                                }
                                            }
                                        },
                                        "lineItems": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "quantity": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 9999999999,
                                                        "description": "Number of units for this order.\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of the other values that are related to shipping and/or handling.\nWhen `orderInformation.lineItems[].productCode` is `gift_card`, this is the total count of individual prepaid gift cards purchased.\n",
                                                        "default": 1
                                                    },
                                                    "unitPrice": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you\ncannot include any other special characters. CyberSource truncates the amount to the correct number of decimal\nplaces.\n\nFor processor-specific information, see the amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n- Table 12, \"Authorization Information for Specific Processors,\" on page 36\n- Table 16, \"Capture Information for Specific Processors,\" on page 51\n- Table 20, \"Credit Information for Specific Processors,\" on page 65\n\n**DCC for First Data**\\\nThis value is the original amount in your local currency. You must include this field. You cannot use grand_total_amount. See \"Dynamic Currency Conversion for First Data,\" page 113.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 12, \"Authorization Information for Specific Processors,\" on page 36.\n\n**Zero Amount Authorizations**\\\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 220.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "emv": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "maxLength": 1998,
                                                    "description": "EMV data that is transmitted from the chip card to the issuer, and from the issuer to the chip card. The EMV\ndata is in the tag-length-value format and includes chip card tags, terminal tags, and transaction detail tags.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10. For information about the individual tags, see the \u201cApplication Specification\u201d section in the EMV 4.3 Specifications: http://emvco.com\n\n**Important** The following tags contain sensitive information and **must not** be included in this field:\n\n - **56**: Track 1 equivalent data\n - **57**: Track 2 equivalent data\n - **5A**: Application PAN\n - **5F20**: Cardholder name\n - **5F24**: Application expiration date (This sensitivity has been relaxed for cmcic, amexdirect, fdiglobal, opdfde, and six)\n - **99**: Transaction PIN\n - **9F0B**: Cardholder name (extended)\n - **9F1F**: Track 1 discretionary data\n - **9F20**: Track 2 discretionary data\n\nFor captures, this field is required for contact EMV transactions. Otherwise, it is optional.\n\nFor credits, this field is required for contact EMV stand-alone credits and contactless EMV stand-alone credits.\nOtherwise, it is optional.\n\n**Important** For contact EMV captures, contact EMV stand-alone credits, and contactless EMV stand-alone credits,\nyou must include the following tags in this field. For all other types of EMV transactions, the following tags\nare optional.\n\n - **95**: Terminal verification results\n - **9F10**: Issuer application data\n - **9F26**: Application cryptogram\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "TC50171_3"
                                },
                                "reversalInformation": {
                                    "reason": "testing",
                                    "amountDetails": {
                                        "totalAmount": "102.21"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2PaymentsReversalsPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - REVERSED\n",
                                    "enum": [
                                        "REVERSED"
                                    ]
                                },
                                "reconciliationId": {
                                    "type": "string",
                                    "maxLength": 60,
                                    "description": "The reconciliation id for the submitted transaction. This value is not returned for all processors.\n"
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "reversalAmountDetails": {
                                    "type": "object",
                                    "properties": {
                                        "reversedAmount": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Total reversed amount."
                                        },
                                        "originalTransactionAmount": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Amount of the original transaction."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                        }
                                    }
                                },
                                "processorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "transactionId": {
                                            "type": "string",
                                            "maxLength": 18,
                                            "description": "Processor transaction ID.\n\nThis value identifies the transaction on a host system. This value is supported only for Moneris. It contains\nthis information:\n\n - Terminal used to process the transaction\n - Shift during which the transaction took place\n - Batch number\n - Transaction number within the batch\n\nYou must store this value. If you give the customer a receipt, display this value on the receipt.\n\nExample For the value 66012345001069003:\n\n - Terminal ID = 66012345\n - Shift number = 001\n - Batch number = 069\n - Transaction number = 003\n"
                                        },
                                        "responseCode": {
                                            "type": "string",
                                            "maxLength": 10,
                                            "description": "For most processors, this is the error message sent directly from the bank. Returned only when the processor\nreturns this value.\n\nImportant Do not use this field to evaluate the result of the authorization.\n"
                                        },
                                        "responseCategoryCode": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Processor-defined response category code. The associated detail error code is in the auth_auth_response\nfield or the auth_reversal_auth_ response field depending on which service you requested.\n\nThis field is supported only for:\n\n - Japanese issuers\n - Domestic transactions in Japan\n - Comercio Latino\u2014processor transaction ID required for troubleshooting\n\n**Maximum length for processors**:\n\n - Comercio Latino: 32\n - All other processors: 3\n"
                                        },
                                        "forwardedAcquirerCode": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Name of the Japanese acquirer that processed the transaction. Returned only for CCS (CAFIS) and JCN Gateway.\nPlease contact the CyberSource Japan Support Group for more information.\n"
                                        },
                                        "masterCardServiceCode": {
                                            "type": "string",
                                            "maxLength": 2,
                                            "description": "Mastercard service that was used for the transaction. Mastercard provides this value to CyberSource.\n\nPossible value:\n - 53: Mastercard card-on-file token service\n"
                                        },
                                        "masterCardServiceReplyCode": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Result of the Mastercard card-on-file token service. Mastercard provides this value to CyberSource.\n\nPossible values:\n\n - **C**: Service completed successfully.\n - **F**: One of the following:\n   - Incorrect Mastercard POS entry mode. The Mastercard POS entry mode should be 81 for an authorization or\n     authorization reversal.\n   - Incorrect Mastercard POS entry mode. The Mastercard POS entry mode should be 01 for a tokenized request.\n   - Token requestor ID is missing or formatted incorrectly.\n - **I**: One of the following:\n   - Invalid token requestor ID.\n   - Suspended or deactivated token.\n   - Invalid token (not in mapping table).\n - **T**: Invalid combination of token requestor ID and token.\n - **U**: Expired token.\n - **W**: Primary account number (PAN) listed in electronic warning bulletin.\n\nNote This field is returned only for **CyberSource through VisaNet**.\n"
                                        }
                                    }
                                },
                                "issuerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "responseCode": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "description": "Additional authorization code that must be printed on the receipt when returned by the processor.\n\nThis value is generated by the processor and is returned only for a successful transaction.\n\nThis field is supported only on FDC Nashville Global and SIX.\n"
                                        }
                                    }
                                },
                                "authorizationInformation": {
                                    "type": "object",
                                    "properties": {
                                        "approvalCode": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "description": "The authorization code returned by the processor."
                                        },
                                        "reasonCode": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Reply flag for the original transaction."
                                        },
                                        "reversalSubmitted": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Flag indicating whether a full authorization reversal was successfully submitted.\n\nPossible values:\n- Y: The authorization reversal was successfully submitted.\n- N: The authorization reversal was not successfully submitted. You must send a credit request for a refund.\n\nThis field is supported only for **FDC Nashville Global**.\n"
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "emv": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "maxLength": 1998,
                                                    "description": "EMV data that is transmitted from the chip card to the issuer, and from the issuer to the chip card. The EMV\ndata is in the tag-length-value format and includes chip card tags, terminal tags, and transaction detail tags.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10. For information about the individual tags, see the \u201cApplication Specification\u201d section in the EMV 4.3 Specifications: http://emvco.com\n\n**Important** The following tags contain sensitive information and **must not** be included in this field:\n\n - **56**: Track 1 equivalent data\n - **57**: Track 2 equivalent data\n - **5A**: Application PAN\n - **5F20**: Cardholder name\n - **5F24**: Application expiration date (This sensitivity has been relaxed for cmcic, amexdirect, fdiglobal, opdfde, and six)\n - **99**: Transaction PIN\n - **9F0B**: Cardholder name (extended)\n - **9F1F**: Track 1 discretionary data\n - **9F20**: Track 2 discretionary data\n\nFor captures, this field is required for contact EMV transactions. Otherwise, it is optional.\n\nFor credits, this field is required for contact EMV stand-alone credits and contactless EMV stand-alone credits.\nOtherwise, it is optional.\n\n**Important** For contact EMV captures, contact EMV stand-alone credits, and contactless EMV stand-alone credits,\nyou must include the following tags in this field. For all other types of EMV transactions, the following tags\nare optional.\n\n - **95**: Terminal verification results\n - **9F10**: Issuer application data\n - **9F26**: Application cryptogram\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/reversals/4963015523026180001545",
                                        "method": "GET"
                                    }
                                },
                                "id": "4963015523026180001545",
                                "submitTimeUtc": "2017-06-01T071912Z",
                                "status": "200",
                                "statusInformation": {
                                    "reason": "SUCCESS",
                                    "message": "Successful transaction."
                                },
                                "clientReferenceInformation": {
                                    "code": "TC50171_3"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "currency": "USD"
                                    }
                                },
                                "processorInformation": {
                                    "responseCode": "100"
                                },
                                "reversalAmountDetails": {
                                    "reversedAmount": "102.21",
                                    "currency": "USD"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "type": "object",
                            "title": "ptsV2PaymentsReversalsPost400Response",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_MERCHANT_CONFIGURATION\n - PROCESSOR_UNAVAILABLE\n - AUTH_ALREADY_REVERSED\n - TRANSACTION_ALREADY_SETTLED\n - INVALID_AMOUNT\n - MISSING_AUTH\n - TRANSACTION_ALREADY_REVERSED_OR_SETTLED\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "AUTH_ALREADY_REVERSED",
                                        "MISSING_AUTH",
                                        "TRANSACTION_ALREADY_REVERSED_OR_SETTLED"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2PaymentsReversalsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Process an Authorization Reversal",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_3"
                            },
                            "reversalInformation": {
                                "reason": "testing",
                                "amountDetails": {
                                    "totalAmount": "102.21"
                                }
                            }
                        }
                    },
                    "example1": {
                        "summary": "Service Fees Authorization Reversal",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_3"
                            },
                            "reversalInformation": {
                                "reason": "34",
                                "amountDetails": {
                                    "totalAmount": "2325.00",
                                    "serviceFeeAmount": "30.0"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v2/reversals/": {
            "post": {
                "summary": "Merchant Initiated Reversal",
                "description": "This is to reverse a previous payment that merchant does not receive a reply.",
                "tags": [
                    "reversal"
                ],
                "operationId": "mitReversal",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "mitReversalRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "transactionId": {
                                            "type": "string",
                                            "description": "Identifier that you assign to the transaction.\n\n**Note** Use this field only if you want to support merchant-initiated reversal and void operations.\n\nSee page 250 on [Merchant-Initiated Reversals and Voids.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SO_API/Credit_Cards_SO_API.pdf)\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "originalTransactionId": {
                                                    "type": "string",
                                                    "maxLength": 32,
                                                    "description": "Value that links the previous transaction to the current follow-on request. This value is assigned by the client\nsoftware that is installed on the POS terminal, which makes it available to the terminal\u2019s software and to\nCyberSource. Therefore, you can use this value to reconcile transactions between CyberSource and the terminal\u2019s\nsoftware.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                },
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "reversalInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 19,
                                                    "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                }
                                            }
                                        },
                                        "reason": {
                                            "type": "string",
                                            "description": "Reason for the authorization reversal. Possible value:\n\n - 34: Suspected fraud\n\nCyberSource ignores this field for processors that do not support this value.\n"
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "paymentSolution": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Type of digital payment solution for the transaction. Possible Values:\n\n - **visacheckout**: Visa Checkout. This value is required for Visa Checkout transactions. See Visa Checkout Using the SCMP API.\n - **005**: Masterpass. This value is required for Masterpass transactions on OmniPay Direct. See \"Masterpass,\" page 153.\n"
                                        },
                                        "reconciliationId": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Please check with Cybersource customer support to see if your merchant account is configured correctly so you\ncan include this field in your request.\n* For Payouts: max length for FDCCompass is String (22).\n"
                                        },
                                        "linkId": {
                                            "type": "string",
                                            "maxLength": 26,
                                            "description": "Value that links the current authorization request to the original authorization request. Set this value\nto the ID that was returned in the reply message from the original authorization request.\n\nThis value is used for:\n\n - Partial authorizations: See \"Partial Authorizations,\" page 88.\n - Split shipments: See \"Split Shipments,\" page 210.\n"
                                        },
                                        "reportGroup": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Attribute that lets you define custom grouping for your processor reports. This field is supported only for **Worldpay VAP**.\n\nSee \"Report Groups,\" page 234.\n"
                                        },
                                        "visaCheckoutId": {
                                            "type": "string",
                                            "maxLength": 48,
                                            "description": "Identifier for the **Visa Checkout** order. Visa Checkout provides a unique order ID for every transaction in\nthe Visa Checkout **callID** field.\n\nFor more details, see Visa Checkout Using the SCMP API.\n"
                                        },
                                        "issuer": {
                                            "type": "object",
                                            "properties": {
                                                "discretionaryData": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Data defined by the issuer.\n\nThe value for this reply field will probably be the same as the value that you submitted in the authorization request, but it is possible for the processor, issuer, or acquirer to modify the value.\n\nThis field is supported only for Visa transactions on **CyberSource through VisaNet**.\n\nFor more information, see Appendix K, \"Formats for  Discretionary Data,\" on page 359.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "serviceFeeAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Service fee. Required for service fee transactions.\n"
                                                }
                                            }
                                        },
                                        "lineItems": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "quantity": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 9999999999,
                                                        "description": "Number of units for this order.\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of the other values that are related to shipping and/or handling.\nWhen `orderInformation.lineItems[].productCode` is `gift_card`, this is the total count of individual prepaid gift cards purchased.\n",
                                                        "default": 1
                                                    },
                                                    "unitPrice": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you\ncannot include any other special characters. CyberSource truncates the amount to the correct number of decimal\nplaces.\n\nFor processor-specific information, see the amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n- Table 12, \"Authorization Information for Specific Processors,\" on page 36\n- Table 16, \"Capture Information for Specific Processors,\" on page 51\n- Table 20, \"Credit Information for Specific Processors,\" on page 65\n\n**DCC for First Data**\\\nThis value is the original amount in your local currency. You must include this field. You cannot use grand_total_amount. See \"Dynamic Currency Conversion for First Data,\" page 113.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 12, \"Authorization Information for Specific Processors,\" on page 36.\n\n**Zero Amount Authorizations**\\\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 220.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "emv": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "maxLength": 1998,
                                                    "description": "EMV data that is transmitted from the chip card to the issuer, and from the issuer to the chip card. The EMV\ndata is in the tag-length-value format and includes chip card tags, terminal tags, and transaction detail tags.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10. For information about the individual tags, see the \u201cApplication Specification\u201d section in the EMV 4.3 Specifications: http://emvco.com\n\n**Important** The following tags contain sensitive information and **must not** be included in this field:\n\n - **56**: Track 1 equivalent data\n - **57**: Track 2 equivalent data\n - **5A**: Application PAN\n - **5F20**: Cardholder name\n - **5F24**: Application expiration date (This sensitivity has been relaxed for cmcic, amexdirect, fdiglobal, opdfde, and six)\n - **99**: Transaction PIN\n - **9F0B**: Cardholder name (extended)\n - **9F1F**: Track 1 discretionary data\n - **9F20**: Track 2 discretionary data\n\nFor captures, this field is required for contact EMV transactions. Otherwise, it is optional.\n\nFor credits, this field is required for contact EMV stand-alone credits and contactless EMV stand-alone credits.\nOtherwise, it is optional.\n\n**Important** For contact EMV captures, contact EMV stand-alone credits, and contactless EMV stand-alone credits,\nyou must include the following tags in this field. For all other types of EMV transactions, the following tags\nare optional.\n\n - **95**: Terminal verification results\n - **9F10**: Issuer application data\n - **9F26**: Application cryptogram\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "TC50171_3",
                                    "transactionId": "496301552302618"
                                },
                                "reversalInformation": {
                                    "reason": "testing",
                                    "amountDetails": {
                                        "totalAmount": "102.21"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - REVERSED\n",
                                    "enum": [
                                        "REVERSED"
                                    ]
                                },
                                "reconciliationId": {
                                    "type": "string",
                                    "maxLength": 60,
                                    "description": "The reconciliation id for the submitted transaction. This value is not returned for all processors.\n"
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "reversalAmountDetails": {
                                    "type": "object",
                                    "properties": {
                                        "reversedAmount": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Total reversed amount."
                                        },
                                        "originalTransactionAmount": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Amount of the original transaction."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                        }
                                    }
                                },
                                "processorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "transactionId": {
                                            "type": "string",
                                            "maxLength": 18,
                                            "description": "Processor transaction ID.\n\nThis value identifies the transaction on a host system. This value is supported only for Moneris. It contains\nthis information:\n\n - Terminal used to process the transaction\n - Shift during which the transaction took place\n - Batch number\n - Transaction number within the batch\n\nYou must store this value. If you give the customer a receipt, display this value on the receipt.\n\nExample For the value 66012345001069003:\n\n - Terminal ID = 66012345\n - Shift number = 001\n - Batch number = 069\n - Transaction number = 003\n"
                                        },
                                        "responseCode": {
                                            "type": "string",
                                            "maxLength": 10,
                                            "description": "For most processors, this is the error message sent directly from the bank. Returned only when the processor\nreturns this value.\n\nImportant Do not use this field to evaluate the result of the authorization.\n"
                                        },
                                        "responseCategoryCode": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Processor-defined response category code. The associated detail error code is in the auth_auth_response\nfield or the auth_reversal_auth_ response field depending on which service you requested.\n\nThis field is supported only for:\n\n - Japanese issuers\n - Domestic transactions in Japan\n - Comercio Latino\u2014processor transaction ID required for troubleshooting\n\n**Maximum length for processors**:\n\n - Comercio Latino: 32\n - All other processors: 3\n"
                                        },
                                        "forwardedAcquirerCode": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Name of the Japanese acquirer that processed the transaction. Returned only for CCS (CAFIS) and JCN Gateway.\nPlease contact the CyberSource Japan Support Group for more information.\n"
                                        },
                                        "masterCardServiceCode": {
                                            "type": "string",
                                            "maxLength": 2,
                                            "description": "Mastercard service that was used for the transaction. Mastercard provides this value to CyberSource.\n\nPossible value:\n - 53: Mastercard card-on-file token service\n"
                                        },
                                        "masterCardServiceReplyCode": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Result of the Mastercard card-on-file token service. Mastercard provides this value to CyberSource.\n\nPossible values:\n\n - **C**: Service completed successfully.\n - **F**: One of the following:\n   - Incorrect Mastercard POS entry mode. The Mastercard POS entry mode should be 81 for an authorization or\n     authorization reversal.\n   - Incorrect Mastercard POS entry mode. The Mastercard POS entry mode should be 01 for a tokenized request.\n   - Token requestor ID is missing or formatted incorrectly.\n - **I**: One of the following:\n   - Invalid token requestor ID.\n   - Suspended or deactivated token.\n   - Invalid token (not in mapping table).\n - **T**: Invalid combination of token requestor ID and token.\n - **U**: Expired token.\n - **W**: Primary account number (PAN) listed in electronic warning bulletin.\n\nNote This field is returned only for **CyberSource through VisaNet**.\n"
                                        }
                                    }
                                },
                                "issuerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "responseCode": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "description": "Additional authorization code that must be printed on the receipt when returned by the processor.\n\nThis value is generated by the processor and is returned only for a successful transaction.\n\nThis field is supported only on FDC Nashville Global and SIX.\n"
                                        }
                                    }
                                },
                                "authorizationInformation": {
                                    "type": "object",
                                    "properties": {
                                        "approvalCode": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "description": "The authorization code returned by the processor."
                                        },
                                        "reasonCode": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Reply flag for the original transaction."
                                        },
                                        "reversalSubmitted": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Flag indicating whether a full authorization reversal was successfully submitted.\n\nPossible values:\n- Y: The authorization reversal was successfully submitted.\n- N: The authorization reversal was not successfully submitted. You must send a credit request for a refund.\n\nThis field is supported only for **FDC Nashville Global**.\n"
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "emv": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "maxLength": 1998,
                                                    "description": "EMV data that is transmitted from the chip card to the issuer, and from the issuer to the chip card. The EMV\ndata is in the tag-length-value format and includes chip card tags, terminal tags, and transaction detail tags.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10. For information about the individual tags, see the \u201cApplication Specification\u201d section in the EMV 4.3 Specifications: http://emvco.com\n\n**Important** The following tags contain sensitive information and **must not** be included in this field:\n\n - **56**: Track 1 equivalent data\n - **57**: Track 2 equivalent data\n - **5A**: Application PAN\n - **5F20**: Cardholder name\n - **5F24**: Application expiration date (This sensitivity has been relaxed for cmcic, amexdirect, fdiglobal, opdfde, and six)\n - **99**: Transaction PIN\n - **9F0B**: Cardholder name (extended)\n - **9F1F**: Track 1 discretionary data\n - **9F20**: Track 2 discretionary data\n\nFor captures, this field is required for contact EMV transactions. Otherwise, it is optional.\n\nFor credits, this field is required for contact EMV stand-alone credits and contactless EMV stand-alone credits.\nOtherwise, it is optional.\n\n**Important** For contact EMV captures, contact EMV stand-alone credits, and contactless EMV stand-alone credits,\nyou must include the following tags in this field. For all other types of EMV transactions, the following tags\nare optional.\n\n - **95**: Terminal verification results\n - **9F10**: Issuer application data\n - **9F26**: Application cryptogram\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/reversals/4963015523026180001545",
                                        "method": "GET"
                                    }
                                },
                                "id": "4963015523026180001545",
                                "submitTimeUtc": "2017-06-01T071912Z",
                                "status": "200",
                                "statusInformation": {
                                    "reason": "SUCCESS",
                                    "message": "Successful transaction."
                                },
                                "clientReferenceInformation": {
                                    "code": "TC50171_3"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "currency": "USD"
                                    }
                                },
                                "processorInformation": {
                                    "responseCode": "100"
                                },
                                "reversalAmountDetails": {
                                    "reversedAmount": "102.21",
                                    "currency": "USD"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_MERCHANT_CONFIGURATION\n - PROCESSOR_UNAVAILABLE\n - AUTH_ALREADY_REVERSED\n - TRANSACTION_ALREADY_SETTLED\n - INVALID_AMOUNT\n - MISSING_AUTH\n - TRANSACTION_ALREADY_REVERSED_OR_SETTLED\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "AUTH_ALREADY_REVERSED",
                                        "MISSING_AUTH",
                                        "TRANSACTION_ALREADY_REVERSED_OR_SETTLED"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v2/payments/{id}/captures": {
            "post": {
                "summary": "Capture a Payment",
                "description": "Include the payment ID in the POST request to capture the payment amount.",
                "tags": [
                    "capture"
                ],
                "operationId": "capturePayment",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "capturePaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "transactionId": {
                                            "type": "string",
                                            "description": "Identifier that you assign to the transaction.\n\n**Note** Use this field only if you want to support merchant-initiated reversal and void operations.\n\nSee page 250 on [Merchant-Initiated Reversals and Voids.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SO_API/Credit_Cards_SO_API.pdf)\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "originalTransactionId": {
                                                    "type": "string",
                                                    "maxLength": 32,
                                                    "description": "Value that links the previous transaction to the current follow-on request. This value is assigned by the client\nsoftware that is installed on the POS terminal, which makes it available to the terminal\u2019s software and to\nCyberSource. Therefore, you can use this value to reconcile transactions between CyberSource and the terminal\u2019s\nsoftware.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                },
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "paymentSolution": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Type of digital payment solution for the transaction. Possible Values:\n\n - **visacheckout**: Visa Checkout. This value is required for Visa Checkout transactions. See Visa Checkout Using the SCMP API.\n - **005**: Masterpass. This value is required for Masterpass transactions on OmniPay Direct. See \"Masterpass,\" page 153.\n"
                                        },
                                        "reconciliationId": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Please check with Cybersource customer support to see if your merchant account is configured correctly so you\ncan include this field in your request.\n* For Payouts: max length for FDCCompass is String (22).\n"
                                        },
                                        "linkId": {
                                            "type": "string",
                                            "maxLength": 26,
                                            "description": "Value that links the current authorization request to the original authorization request. Set this value\nto the ID that was returned in the reply message from the original authorization request.\n\nThis value is used for:\n\n - Partial authorizations: See \"Partial Authorizations,\" page 88.\n - Split shipments: See \"Split Shipments,\" page 210.\n"
                                        },
                                        "reportGroup": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Attribute that lets you define custom grouping for your processor reports. This field is supported only for **Worldpay VAP**.\n\nSee \"Report Groups,\" page 234.\n"
                                        },
                                        "visaCheckoutId": {
                                            "type": "string",
                                            "maxLength": 48,
                                            "description": "Identifier for the **Visa Checkout** order. Visa Checkout provides a unique order ID for every transaction in\nthe Visa Checkout **callID** field.\n\nFor more details, see Visa Checkout Using the SCMP API.\n"
                                        },
                                        "purchaseLevel": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Set this field to 3 to indicate that the request includes Level III data."
                                        },
                                        "issuer": {
                                            "type": "object",
                                            "properties": {
                                                "discretionaryData": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Data defined by the issuer.\n\nThe value for this reply field will probably be the same as the value that you submitted in the authorization request, but it is possible for the processor, issuer, or acquirer to modify the value.\n\nThis field is supported only for Visa transactions on **CyberSource through VisaNet**.\n\nFor more information, see Appendix K, \"Formats for  Discretionary Data,\" on page 359.\n"
                                                }
                                            }
                                        },
                                        "authorizationOptions": {
                                            "type": "object",
                                            "properties": {
                                                "authType": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Authorization type.\n\nPossible values:\n\n - **AUTOCAPTURE**: automatic capture.\n - **STANDARDCAPTURE**: standard capture.\n - **VERBAL**: forced capture. Include it in the payment request for a forced capture. Include it in the capture request for a verbal payment.\n\n**Asia, Middle East, and Africa Gateway; Cielo; Comercio Latino; and CyberSource Latin American Processing**\\\nSet this field to _AUTOCAPTURE_ and include it in a bundled request to indicate that you are requesting an automatic capture. If your account is configured to enable automatic captures, set this field to STANDARDCAPTURE and include it in a standard authorization or bundled request to indicate that you are overriding an automatic capture. For more information, see \"Automatic Captures,\" page 33.\n\n**Forced Capture**\\\nSet this field to _VERBAL_ and include it in the authorization request to indicate that you are performing a forced capture; therefore, you receive the authorization code outside the CyberSource system. For more information, see \"Forced Captures,\" page 123.\n\n**Verbal Authorization**\\\nSet this field to _VERBAL_ and include it in the capture request to indicate that the request is for a verbal authorization. For more information, see \"Verbal Authorizations,\" page 84.\n\nFor processor-specific information, see the auth_type field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "verbalAuthCode": {
                                                    "type": "string",
                                                    "maxLength": 7,
                                                    "description": "Authorization code.\n\n**Forced Capture**\\\nUse this field to send the authorization code you received from a payment that you authorized\noutside the CyberSource system.\n\n**Verbal Authorization**\\\nUse this field in CAPTURE API to send the verbally received authorization code.\n\nFor processor-specific information, see the _auth_code_ field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "verbalAuthTransactionId": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Transaction ID (TID)."
                                                }
                                            }
                                        },
                                        "captureOptions": {
                                            "type": "object",
                                            "properties": {
                                                "captureSequenceNumber": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 99,
                                                    "description": "Capture number when requesting multiple partial captures for one payment.\nUsed along with _totalCaptureCount_ to track which capture is being processed.\n\nFor example, the second of five captures would be passed to CyberSource as:\n  - _captureSequenceNumber_ = 2, and\n  - _totalCaptureCount_ = 5\n"
                                                },
                                                "totalCaptureCount": {
                                                    "type": "number",
                                                    "minimum": 1,
                                                    "maximum": 99,
                                                    "description": "Total number of captures when requesting multiple partial captures for one payment.\nUsed along with _captureSequenceNumber_ which capture is being processed.\n\nFor example, the second of five captures would be passed to CyberSource as:\n  - _captureSequenceNumber_ = 2, and\n  - _totalCaptureCount_ = 5\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "paymentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "customer": {
                                            "type": "object",
                                            "properties": {
                                                "customerId": {
                                                    "type": "string",
                                                    "description": "Unique identifier for the customer's card and billing information.\n\nWhen you use Payment Tokenization or Recurring Billing and you include this value in\nyour request, many of the fields that are normally required for an authorization or credit\nbecome optional.\n\n**NOTE** When you use Payment Tokenization or Recurring Billing, the value for the Customer ID is actually the Cybersource payment token for a customer. This token stores information such as the consumer\u2019s card number so it can be applied towards bill payments, recurring payments, or one-time payments. By using this token in a payment API request, the merchant doesn't need to pass in data such as the card number or expiration date in the request itself.\n\nSee \"Payment Tokenization,\" page 222, and \"Recurring Billing,\" page 225.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 19,
                                                    "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                },
                                                "discountAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Total discount amount applied to the order.\n\nFor processor-specific information, see the order_discount_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "dutyAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Total charges for any import or export duties included in the order.\n\nFor processor-specific information, see the duty_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "Total tax amount for all the items in the order.\n\nFor processor-specific information, see the total_tax_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "nationalTaxIncluded": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates whether a national tax is included in the order total.\n\nPossible values:\n\n - **0**: national tax not included\n - **1**: national tax included\n\nFor processor-specific information, see the national_tax_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAppliedAfterDiscount": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates how the merchant manages discounts.\n\nPossible values:\n\n - **0**: no invoice level discount included\n - **1**: tax calculated on the postdiscount invoice total\n - **2**: tax calculated on the prediscount invoice total\n\nFor processor-specific information, see the order_discount_management_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAppliedLevel": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates how you calculate tax.\n\nPossible values:\n\n - **0**: net prices with tax calculated at line item level\n - **1**: net prices with tax calculated at invoice level\n - **2**: gross prices with tax provided at line item level\n - **3**: gross prices with tax provided at invoice level\n - **4**: no tax applies on the invoice for the transaction\n\nFor processor-specific information, see the tax_management_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxTypeCode": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "For tax amounts that can be categorized as one tax type.\n\nThis field contains the tax type code that corresponds to the entry in the _lineItems.taxAmount_ field.\n\nPossible values:\n\n - **056**: sales tax (U.S only)\n - **TX~**: all taxes (Canada only)   Note ~ = space.\n\nFor processor-specific information, see the total_tax_type_code field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "freightAmount": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Total freight or shipping and handling charges for the order. When you include this field in your request, you\nmust also include the **totalAmount** field.\n\nFor processor-specific information, see the freight_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "foreignAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Set this field to the converted amount that was returned by the DCC provider. See \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\nFor processor-specific information, see the foreign_amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "foreignCurrency": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Your customer\u2019s billing currency. See \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\nFor processor-specific information, see the foreign_currency field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "exchangeRate": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Exchange rate returned by the DCC service. Includes a decimal point and a maximum of 4 decimal places.\n\nFor details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n\nFor processor-specific information, see the exchange_rate field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "exchangeRateTimeStamp": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "Time stamp for the exchange rate. This value is returned by the DCC service.\n\nFormat: `YYYYMMDD~HH:MM`  where ~ denotes a space.\n\nFor processor-specific information, see the exchange_rate_timestamp field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "amexAdditionalAmounts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 3,
                                                                "description": "Additional amount type. This field is supported only for **American Express Direct**.\n\nFor processor-specific information, see the additional_amount_type field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "maxLength": 12,
                                                                "description": "Additional amount. This field is supported only for **American Express Direct**.\n\nFor processor-specific information, see the additional_amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "taxDetails": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "description": "This is used to determine what type of tax related data should be inclued under _taxDetails_ object.\n\nPossible values:\n - alternate\n - local\n - national\n - vat\n",
                                                                "enum": [
                                                                    "alternate",
                                                                    "local",
                                                                    "national",
                                                                    "vat"
                                                                ]
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "maxLength": 13,
                                                                "description": "Please see below table for related decription based on above _type_ field.\n\n| type      | type description |\n|-----------|--------------------|\n| alternate | Total amount of alternate tax for the order. |\n| local     | Sales tax for the order. |\n| national  | National tax for the order. |\n| vat       | Total amount of VAT or other tax included in the order. |\n| other     | Other tax. |\n"
                                                            },
                                                            "rate": {
                                                                "type": "string",
                                                                "maxLength": 6,
                                                                "description": "Rate of VAT or other tax for the order.\n\nExample 0.040 (=4%)\n\nValid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated)\n"
                                                            },
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 4,
                                                                "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                            },
                                                            "taxId": {
                                                                "type": "string",
                                                                "maxLength": 15,
                                                                "description": "Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value,\nincluding zero. You may send this field without sending alternate tax amount.\n"
                                                            },
                                                            "applied": {
                                                                "type": "boolean",
                                                                "description": "The tax is applied. Valid value is `true` or `false`."
                                                            },
                                                            "exemptionCode": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "description": "Code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not\nverify the value or modify it in any way before sending it to the processor.\n\nFor possible values, see Exemption Status Values. See Numbered Elements.\n\nImportant For information about using this field, see Item-Level Tax Fields.\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "serviceFeeAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Service fee. Required for service fee transactions.\n"
                                                },
                                                "originalCurrency": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Your local pricing currency code.\n\nFor the possible values, see the ISO Standard Currency Codes.\n\nFor details, see Dynamic Currency Conversion with a Third Party Provider.\n"
                                                }
                                            }
                                        },
                                        "billTo": {
                                            "type": "object",
                                            "properties": {
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s first name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**:\\\nThis field may be sent only for FDC Compass.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_firstname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s last name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\n**For Payouts** : This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the customer_lastname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "company": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "maxLength": 60,
                                                            "description": "Name of the customer\u2019s company.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the company_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                        },
                                                        "address1": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "First line in the street address of the company purchasing the product."
                                                        },
                                                        "address2": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "Additional address information for the company purchasing the product."
                                                        },
                                                        "locality": {
                                                            "type": "string",
                                                            "maxLength": 30,
                                                            "description": "City in the address of the company purchasing the product."
                                                        },
                                                        "administrativeArea": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "State or province in the address of the company purchasing the product. Use the State, Province, and Territory\nCodes for the United States and Canada.\n"
                                                        },
                                                        "postalCode": {
                                                            "type": "string",
                                                            "maxLength": 10,
                                                            "description": "Postal code in the address of the company purchasing the product. The postal code must consist of 5 to 9 digits.\n\nWhen the company country is the U.S., the 9-digit postal code must follow this format:\n**[5 digits][dash][4 digits]**\nExample 12345-6789\n\nWhen the company country is Canada, the 6-digit postal code must follow this format:\n**[alpha][numeric][alpha][space][numeric][alpha][numeric]**\nExample A1B 2C3\n"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "Country in the address of the company purchasing the product. Use the two-character ISO Standard Country Codes.\n"
                                                        }
                                                    }
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the billing street address as it appears on the credit card issuer\u2019s records.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_address1 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Additional address information.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**Atos**\nThis field must not contain colons (:).\n\n**Chase Paymentech Solutions, FDC Compass, and TSYS Acquiring Solutions**\nThis value is used for AVS.\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_address2 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the billing address.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the bill_city field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the billing address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_state field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**American Express Direct**\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the remaining value is longer than nine characters, truncates the value starting from the right side.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_zip field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Country of the billing address. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_country field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Customer's email address, including the full domain name.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_email field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Customer\u2019s phone number.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nCyberSource recommends that you include the country code when the order is from outside the U.S.\n\nFor processor-specific information, see the customer_phone field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n"
                                                }
                                            }
                                        },
                                        "shipTo": {
                                            "type": "object",
                                            "properties": {
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the shipping address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "description": "Country of the shipping address. Use the two-character ISO Standard Country Codes.",
                                                    "maxLength": 2
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the shipping address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\n**American Express Direct**\\\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the\nremaining value is longer than nine characters, truncates the value starting from the right side.\n"
                                                }
                                            }
                                        },
                                        "lineItems": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "productCode": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Type of product. This value is used to determine the category that the product is in: electronic, handling,\nphysical, service, or shipping. The default value is **default**.\nIf you are performing an authorization transaction (`processingOptions.capture` is set to `false`), and you set this field to a value other than default or any of the values related to\nshipping and handling, then the fields `quantity`, `productName`, and `productSku` are required.\nIt can also have a value of \"gift_card\".\n\nSee Appendix O, \"Product Codes,\" on page 373 for a list of valid values.\nFor a payment, when you set this field to a value other than default or any of the values related to\nshipping and handling, below fields _quantity_, _productName_, and _productSKU_ are required.\n"
                                                    },
                                                    "productName": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "For an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`),\nthis field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of\nthe other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "productSku": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Stock Keeping Unit (SKU) code for the product.\n\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when _orderInformation.lineItems[].productCode_ is not set to **default** or one of the other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "quantity": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 9999999999,
                                                        "description": "Number of units for this order.\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of the other values that are related to shipping and/or handling.\nWhen `orderInformation.lineItems[].productCode` is `gift_card`, this is the total count of individual prepaid gift cards purchased.\n",
                                                        "default": 1
                                                    },
                                                    "unitPrice": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you\ncannot include any other special characters. CyberSource truncates the amount to the correct number of decimal\nplaces.\n\nFor processor-specific information, see the amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n- Table 12, \"Authorization Information for Specific Processors,\" on page 36\n- Table 16, \"Capture Information for Specific Processors,\" on page 51\n- Table 20, \"Credit Information for Specific Processors,\" on page 65\n\n**DCC for First Data**\\\nThis value is the original amount in your local currency. You must include this field. You cannot use grand_total_amount. See \"Dynamic Currency Conversion for First Data,\" page 113.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 12, \"Authorization Information for Specific Processors,\" on page 36.\n\n**Zero Amount Authorizations**\\\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 220.\n"
                                                    },
                                                    "unitOfMeasure": {
                                                        "type": "string",
                                                        "maxLength": 12,
                                                        "description": "Unit of measure, or unit of measure code, for the item.\n"
                                                    },
                                                    "totalAmount": {
                                                        "type": "string",
                                                        "maxLength": 13,
                                                        "description": "Total amount for the item. Normally calculated as the unit price x quantity.\n\nWhen orderInformation.lineItems[].productCode is \"gift_card\", this is the purchase amount total\nfor prepaid gift cards in major units. Example: 123.45 USD= 123\n"
                                                    },
                                                    "taxAmount": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Total tax to apply to the product. This value cannot be negative. The tax amount and the offer amount must\nbe in the same currency. The tax amount field is additive.\n\nThe following example uses a two-exponent currency such as USD:\n\n 1. You include each line item in your request.\n ..- 1st line item has amount=10.00, quantity=1, and taxAmount=0.80\n ..- 2nd line item has amount=20.00, quantity=1, and taxAmount=1.60\n 2. The total amount authorized will be 32.40, not 30.00 with 2.40 of tax included.\n\nIf you want to include the tax amount and also request the ics_tax service, see Tax Calculation Service Using the SCMP API.\n\nThis field is frequently used for Level II and Level III transactions. See Level II and Level III Processing Using the SCMP API.\n"
                                                    },
                                                    "taxRate": {
                                                        "type": "string",
                                                        "maxLength": 7,
                                                        "description": "Tax rate applied to the item. See \"Numbered Elements,\" page 14.\n\nVisa: Valid range is 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated).\n\nMastercard: Valid range is 0.00001 to 0.99999 (0.001% to 99.999%).\n"
                                                    },
                                                    "taxAppliedAfterDiscount": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Flag to indicate how you handle discount at the line item level.\n\n - 0: no line level discount provided\n - 1: tax was calculated on the post-discount line item total\n - 2: tax was calculated on the pre-discount line item total\n\n`Note` Visa will inset 0 (zero) if an invalid value is included in this field.\n\nThis field relates to the value in the _lineItems[].discountAmount_ field.\n"
                                                    },
                                                    "taxStatusIndicator": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Flag to indicate whether tax is exempted or not included.\n\n - 0: tax not included\n - 1: tax included\n - 2: transaction is not subject to tax\n"
                                                    },
                                                    "taxTypeCode": {
                                                        "type": "string",
                                                        "maxLength": 4,
                                                        "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                    },
                                                    "amountIncludesTax": {
                                                        "type": "boolean",
                                                        "description": "Flag that indicates whether the tax amount is included in the Line Item Total.\n\nPossible values:\n - **true**\n - **false**\n",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "typeOfSupply": {
                                                        "type": "string",
                                                        "maxLength": 2,
                                                        "description": "Flag to indicate whether the purchase is categorized as goods or services.\nPossible values:\n\n - 00: goods\n - 01: services\n"
                                                    },
                                                    "commodityCode": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Commodity code or International description code used to classify the item. Contact your acquirer for a list of\ncodes.\n"
                                                    },
                                                    "discountAmount": {
                                                        "type": "string",
                                                        "maxLength": 13,
                                                        "description": "Discount applied to the item."
                                                    },
                                                    "discountApplied": {
                                                        "type": "boolean",
                                                        "description": "Flag that indicates whether the amount is discounted.\n\nIf you do not provide a value but you set Discount Amount to a value greater than zero, then CyberSource sets\nthis field to **true**.\n\nPossible values:\n - **true**\n - **false**\n",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "discountRate": {
                                                        "type": "string",
                                                        "maxLength": 6,
                                                        "description": "Rate the item is discounted. Maximum of 2 decimal places.\n\nExample 5.25 (=5.25%)\n"
                                                    },
                                                    "invoiceNumber": {
                                                        "type": "string",
                                                        "maxLength": 23,
                                                        "description": "Field to support an invoice number for a transaction. You must specify the number of line items that will\ninclude an invoice number. By default, the first line item will include an invoice number field. The invoice\nnumber field can be included for up to 10 line items.\n"
                                                    },
                                                    "taxDetails": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "description": "This is used to determine what type of tax related data should be inclued under _taxDetails_ object.\n\nPossible values:\n - alternate\n - local\n - national\n - vat\n",
                                                                    "enum": [
                                                                        "alternate",
                                                                        "local",
                                                                        "national",
                                                                        "vat"
                                                                    ]
                                                                },
                                                                "amount": {
                                                                    "type": "string",
                                                                    "maxLength": 13,
                                                                    "description": "Please see below table for related decription based on above _type_ field.\n\n| type      | type description |\n|-----------|--------------------|\n| alternate | Total amount of alternate tax for the order. |\n| local     | Sales tax for the order. |\n| national  | National tax for the order. |\n| vat       | Total amount of VAT or other tax included in the order. |\n| other     | Other tax. |\n"
                                                                },
                                                                "rate": {
                                                                    "type": "string",
                                                                    "maxLength": 6,
                                                                    "description": "Rate of VAT or other tax for the order.\n\nExample 0.040 (=4%)\n\nValid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated)\n"
                                                                },
                                                                "code": {
                                                                    "type": "string",
                                                                    "maxLength": 4,
                                                                    "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                                },
                                                                "taxId": {
                                                                    "type": "string",
                                                                    "maxLength": 15,
                                                                    "description": "Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value,\nincluding zero. You may send this field without sending alternate tax amount.\n"
                                                                },
                                                                "applied": {
                                                                    "type": "boolean",
                                                                    "description": "The tax is applied. Valid value is `true` or `false`."
                                                                },
                                                                "exemptionCode": {
                                                                    "type": "string",
                                                                    "maxLength": 1,
                                                                    "description": "Code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not\nverify the value or modify it in any way before sending it to the processor.\n\nFor possible values, see Exemption Status Values. See Numbered Elements.\n\nImportant For information about using this field, see Item-Level Tax Fields.\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "fulfillmentType": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "weight": {
                                                        "type": "string",
                                                        "maxLength": 9,
                                                        "description": "Weight of the item. See Numbered Elements."
                                                    },
                                                    "weightIdentifier": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Type of weight. See Numbered Elements.\n\nPossible values:\n- B: Billed weight\n- N: Actual net weight\n"
                                                    },
                                                    "weightUnit": {
                                                        "type": "string",
                                                        "maxLength": 2,
                                                        "description": "Code that specifies the unit of measurement for the weight amount. For example, OZ specifies ounce and LB\nspecifies pound. The possible values are defined by the ANSI Accredited Standards Committee (ASC).\n\nSee Numbered Elements.\n"
                                                    },
                                                    "referenceDataCode": {
                                                        "type": "string",
                                                        "maxLength": 2,
                                                        "description": "Code that identifies the value of the corresponding item_#_referenceData_#_number field. See Numbered Elements.\n\nPossible values:\n- AN: Client-defined asset code\n- MG: Manufacturer's part number\n- PO: Purchase order number\n- SK: Supplier stock keeping unit number\n- UP: Universal product code\n- VC: Supplier catalog number\n- VP: Vendor part number\n\nThis field is a pass-through, which means that CyberSource does not verify the value or modify it in any way\nbefore sending it to the processor.\n"
                                                    },
                                                    "referenceDataNumber": {
                                                        "type": "string",
                                                        "maxLength": 30,
                                                        "description": "Reference number.\n\nThe meaning of this value is identified by the value of the corresponding `referenceDataCode` field.\nSee Numbered Elements.\n\nThe maximum length for this field depends on the value of the corresponding `referenceDataCode` field:\n- When the code is `PO`, the maximum length for the reference number is 22.\n- When the code is `VC`, the maximum length for the reference number is 20.\n- For all other codes, the maximum length for the reference number is 30.\n\nThis field is a pass-through, which means that CyberSource does not verify the value or modify it in any way\nbefore sending it to the processor.\n"
                                                    }
                                                }
                                            }
                                        },
                                        "invoiceDetails": {
                                            "type": "object",
                                            "properties": {
                                                "purchaseOrderNumber": {
                                                    "type": "string",
                                                    "maxLength": 25,
                                                    "description": "Value used by your customer to identify the order. This value is typically a purchase order number. CyberSource\nrecommends that you do not populate the field with all zeros or nines.\n\nFor processor-specific information, see the user_po field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "purchaseOrderDate": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Date the order was processed. `Format: YYYY-MM-DD`.\n\nFor processor-specific information, see the purchaser_order_date field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "purchaseContactName": {
                                                    "type": "string",
                                                    "maxLength": 36,
                                                    "description": "The name of the individual or the company contacted for company authorized purchases.\n\nFor processor-specific information, see the authorized_contact_name field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxable": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether an order is taxable. This value must be true if the sum of all _lineItems[].taxAmount_ values > 0.\n\nIf you do not include any _lineItems[].taxAmount_ values in your request, CyberSource does not include\n_invoiceDetails.taxable_ in the data it sends to the processor.\n\nFor processor-specific information, see the tax_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n\nPossible values:\n - **true**\n - **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                },
                                                "vatInvoiceReferenceNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "VAT invoice number associated with the transaction.\n\nFor processor-specific information, see the vat_invoice_ref_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "commodityCode": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "International description code of the overall order\u2019s goods or services or the Categorizes purchases for VAT\nreporting. Contact your acquirer for a list of codes.\n\nFor processor-specific information, see the summary_commodity_code field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "transactionAdviceAddendum": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "data": {
                                                                "type": "string",
                                                                "maxLength": 40,
                                                                "description": "Four Transaction Advice Addendum (TAA) fields. These fields are used to display descriptive information\nabout a transaction on the customer\u2019s American Express card statement. When you send TAA fields, start\nwith amexdata_taa1, then ...taa2, and so on. Skipping a TAA field causes subsequent TAA fields to be\nignored.\n\nTo use these fields, contact CyberSource Customer Support to have your account enabled for this feature.\n"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "shippingDetails": {
                                            "type": "object",
                                            "properties": {
                                                "shipFromPostalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the address from which the goods are shipped, which is used to establish nexus. The default is\nthe postal code associated with your CyberSource account.\n\nThe postal code must consist of 5 to 9 digits. When the billing country is the U.S., the 9-digit postal code\nmust follow this format:\n\n`[5 digits][dash][4 digits]`\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n\n`[alpha][numeric][alpha][space] [numeric][alpha][numeric]`\n\nExample A1B 2C3\n\nThis field is frequently used for Level II and Level III transactions.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantCustomerId": {
                                            "type": "string",
                                            "maxLength": 100,
                                            "description": "Your identifier for the customer.\n\nWhen a subscription or customer profile is being created, the maximum length for this field for most processors is 30. Otherwise, the maximum length is 100.\n\n**Comercio Latino**\\\nFor recurring payments in Mexico, the value is the customer\u2019s contract number.\nNote Before you request the authorization, you must inform the issuer of the customer contract numbers that will be used for recurring transactions.\n\n**Litle**\\\nFor a follow-on credit with Litle, CyberSource checks the following locations, in the order\ngiven, for a customer account ID value and uses the first value it finds:\n1. `customer_account_id` value in the follow-on credit request\n2. Customer account ID value that was used for the capture that is being credited\n3. Customer account ID value that was used for the original authorization\nIf a customer account ID value cannot be found in any of these locations, then no value is used.\n\nFor processor-specific information, see the customer_account_id field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Customer\u2019s government-assigned tax identification number.\n\nFor processor-specific information, see the purchaser_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        }
                                    }
                                },
                                "deviceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "hostName": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Host name reported by the customer\u2019s browser to your Web server identified via the HTTP header."
                                        },
                                        "ipAddress": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Customer\u2019s IP address, such as 10.1.27.63, reported by your Web server via socket information.\n"
                                        },
                                        "userAgent": {
                                            "type": "string",
                                            "maxLength": 40,
                                            "description": "Customer\u2019s browser as identified from the HTTP header data. For example, Mozilla is the value that identifies\nthe Netscape browser.\n"
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nFor Payouts:\n* Paymentech (22)\n"
                                                },
                                                "alternateName": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n* FDCCompass (13)\n* Paymentech (13)\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Merchant City. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Merchant State. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        },
                                        "cardAcceptorReferenceNumber": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Reference number that facilitates card acceptor/corporation communication and record keeping.\n\nFor processor-specific information, see the card_acceptor_ref_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "categoryCode": {
                                            "type": "integer",
                                            "maximum": 9999,
                                            "description": "Four-digit number that the payment card industry uses to classify merchants into market segments. Visa assigned\none or more of these values to your business when you started accepting Visa cards.\n\nIf you do not include this field in your request, CyberSource uses the value in your CyberSource account.\n\nFor processor-specific information, see the merchant_category_code field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR4\n- Position: 150-153\n- Field: Merchant Category Code\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 21,
                                            "description": "Your government-assigned tax identification number.\n\nFor CtV processors, the maximum length is 20.\n\nFor other processor-specific information, see the merchant_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "serviceFeeDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 22,
                                                    "description": "Name of the service provider that is collecting the service fee. The service provider name must consist of\n3, 7, or 12 characters followed by an asterisk (*). This value must also include the words \u201cService Fee.\u201d\n\nWhen you include more than one consecutive space, extra spaces are removed. Use one of the following formats\nfor this value:\n- <3-character name>*Service Fee\n- <7-character name>*Service Fee\n- <12-character name>*Service Fee\n\nWhen payments are made in installments, this value must also include installment information such as\n\u201c1 of 5\u201d or \u201c3 of 7.\u201d For installment payments, use one of the following formats for this value:\n- <3-character name>*Service Fee*<N> of <M>\n- <7-character name>*Service Fee*<N> of <M>\n- <12-character name>*Service Fee*<N> of <M>\n\nwhere <N> is the payment number and <M> is the total number of payments.\n\nWhen you do not include this value in your request, CyberSource uses the value that is in your CyberSource\naccount.\n\nThis value might be displayed on the cardholder\u2019s statement.\n"
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "maxLength": 11,
                                                    "description": "Contact information for the service provider that is collecting the service fee. when you include more than one\nconsecutive space, extra spaces are removed.\n\nWhen you do not include this value in your request, CyberSource uses the value that is in your CyberSource account.\n\nThis value might be displayed on the cardholder\u2019s statement.\n"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "State or territory in which the service provider is located.\n\nWhen you do not include this value in your request, CyberSource uses the value that is in your CyberSource account.\n\nThis value might be displayed on the cardholder\u2019s statement.\n"
                                                }
                                            }
                                        },
                                        "taxId": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Your Cadastro Nacional da Pessoa Jur\u00eddica (CNPJ) number.\n\nThis field is supported only for BNDES transactions on CyberSource through VisaNet. See BNDES.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR6\n- Position: 40-59\n- Field: BNDES Reference Field 1\n"
                                        }
                                    }
                                },
                                "aggregatorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "aggregatorId": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Value that identifies you as a payment aggregator. Get this value from the\nprocessor.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR6\n- Position: 95-105\n- Field: MasterCard Payment Facilitator ID\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nccAuthService\\\n**American Express Direct**: R for all aggregator transactions.\\\n**CyberSource through VisaNet**: R for Mastercard aggregator transactions and for American Express aggregator authorizations; otherwise, not used.\\\n**FDC Compass**: R for all aggregator transactions.\\\n**FDC Nashville Global**: R for all aggregator transactions.\n\nFor processor-specific information, see the aggregator_id field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "name": {
                                            "type": "string",
                                            "maxLength": 37,
                                            "description": "Your payment aggregator business name.\n\n**American Express Direct**\\\nThe maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters.\\\n\n**CyberSource through VisaNet**\\\nWith American Express, the maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nFor processor-specific information, see the aggregator_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "subMerchant": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 37,
                                                    "description": "Sub-merchant\u2019s business name.\n\n**American Express Direct**\\\nThe maximum length of the sub-merchant name depends on the length of the aggregator name. The combined length for both values must not exceed 36 characters.\n\n**CyberSource through VisaNet**\\\nWith American Express, the maximum length of the sub-merchant name depends on the length of the aggregator name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\n**FDC Nashville Global**\\\nWith Mastercard, the maximum length of the sub-merchant name depends on the length of the aggregator name:\n- If aggregator name length is 1 through 3, maximum sub-merchant name length is 21.\n- If aggregator name length is 4 through 7, maximum sub-merchant name length is 17.\n- If aggregator name length is 8 through 12, maximum sub-merchant name length is 12.\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 38,
                                                    "description": "First line of the sub-merchant\u2019s street address.\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 21,
                                                    "description": "Sub-merchant\u2019s city.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nFor details, see \"Aggregator Support,\" page 100.\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s state or province. Use the State, Province, and Territory Codes for the United States and Canada.\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Partial postal code for the sub-merchant\u2019s address.\n\nSee \"Aggregator Support,\" page 100 for details.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s country. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nSee \"Aggregator Support,\" page 101.\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 40,
                                                    "description": "Sub-merchant\u2019s email address.\n\n**Maximum length for processors**\n\n - American Express Direct: 40\n - CyberSource through VisaNet: 40\n - FDC Compass: 40\n - FDC Nashville Global: 19\n\n**CyberSource through VisaNet**\\\nWith American Express, the value for this field corresponds to the following data in the TC 33 capture file:\n- Record: CP01 TCRB\n- Position: 25-64\n- Field: American Express Seller E-mail Address\n\n**Note** The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant\u2019s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies.\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Sub-merchant\u2019s telephone number.\n\n**Maximum length for procesors**\n\n - American Express Direct: 20\n - CyberSource through VisaNet: 20\n - FDC Compass: 13\n - FDC Nashville Global: 10\n\n**CyberSource through VisaNet**\\\nWith American Express, the value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCRB\n- Position: 5-24\n- Field: American Express Seller Telephone Number\n\n**FDC Compass**\\\nThis value must consist of uppercase characters. Use one of these recommended formats:\\\n`NNN-NNN-NNNN`\\\n`NNN-AAAAAAA`\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "emv": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "maxLength": 1998,
                                                    "description": "EMV data that is transmitted from the chip card to the issuer, and from the issuer to the chip card. The EMV\ndata is in the tag-length-value format and includes chip card tags, terminal tags, and transaction detail tags.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10. For information about the individual tags, see the \u201cApplication Specification\u201d section in the EMV 4.3 Specifications: http://emvco.com\n\n**Important** The following tags contain sensitive information and **must not** be included in this field:\n\n - **56**: Track 1 equivalent data\n - **57**: Track 2 equivalent data\n - **5A**: Application PAN\n - **5F20**: Cardholder name\n - **5F24**: Application expiration date (This sensitivity has been relaxed for cmcic, amexdirect, fdiglobal, opdfde, and six)\n - **99**: Transaction PIN\n - **9F0B**: Cardholder name (extended)\n - **9F1F**: Track 1 discretionary data\n - **9F20**: Track 2 discretionary data\n\nFor captures, this field is required for contact EMV transactions. Otherwise, it is optional.\n\nFor credits, this field is required for contact EMV stand-alone credits and contactless EMV stand-alone credits.\nOtherwise, it is optional.\n\n**Important** For contact EMV captures, contact EMV stand-alone credits, and contactless EMV stand-alone credits,\nyou must include the following tags in this field. For all other types of EMV transactions, the following tags\nare optional.\n\n - **95**: Terminal verification results\n - **9F10**: Issuer application data\n - **9F26**: Application cryptogram\n"
                                                },
                                                "fallback": {
                                                    "type": "boolean",
                                                    "maxLength": 5,
                                                    "description": "Indicates whether a fallback method was used to enter credit card information into the POS terminal. When a\ntechnical problem prevents a successful exchange of information between a chip card and a chip-capable terminal:\n\n 1. Swipe the card or key the credit card information into the POS terminal.\n 2. Use the pointOfSaleInformation.entryMode field to indicate whether the information was swiped or keyed.\n\nPossible values:\n - **true**\n - **false** (default)\n\nThis field is supported only on **Chase Paymentech Solutions** and **GPN**.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                }
                                            }
                                        },
                                        "amexCapnData": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Point-of-sale details for the transaction. This value is returned only for **American Express Direct**.\nCyberSource generates this value, which consists of a series of codes that identify terminal capability,\nsecurity data, and specific conditions present at the time the transaction occurred. To comply with the CAPN\nrequirements, this  value must be included in all subsequent follow-on requests, such as captures and follow-on\ncredits.\n\nWhen you perform authorizations, captures, and credits through CyberSource, CyberSource passes this value from\nthe authorization service to the subsequent services for you. However, when you perform authorizations through\nCyberSource and perform subsequent services through other financial institutions, you must ensure that your\nrequests for captures and credits include this value.\n"
                                        }
                                    }
                                },
                                "merchantDefinedInformation": {
                                    "type": "array",
                                    "description": "The description for this field is not available.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "maxLength": 50,
                                                "description": "The name you assign for your merchant-defined data field.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].key and\nmerchantDefinedInformation[1].key for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n"
                                            },
                                            "value": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "The value you assign for your merchant-defined data field.\n\n**Warning** Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields. Personally identifying information includes, but is not\nlimited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV,\nCVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].value and\nmerchantDefinedInformation[1].value for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n\nFor installment payments with Mastercard in Brazil:\n- The value for merchantDefinedInformation[0].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 25-44\n  - Field: Reference Field 2\n- The value for merchantDefinedInformation[1].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 45-64\n  - Field: Reference Field 3\n"
                                            }
                                        }
                                    }
                                },
                                "installmentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "firstInstallmentDate": {
                                            "type": "string",
                                            "maximum": 6,
                                            "description": "Date of the first installment payment. Format: YYMMDD. When you do not include this field, CyberSource sends a\nstring of six zeros (000000) to the processor. See Installment Payments on CyberSource through VisaNet.\n\nThis field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR9\n- Position: 42-47\n- Field: Date of First Installment\n"
                                        },
                                        "invoiceData": {
                                            "type": "string",
                                            "maximum": 20,
                                            "description": "Invoice information that you want to provide to the issuer. This value is similar to a tracking number and is\nthe same for all installment payments for one purchase.\n\nThis field is supported only for installment payments with Mastercard on CyberSource through VisaNet in Brazil.\n\nSee Installment Payments on CyberSource through VisaNet.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR4\n- Position: 51-70\n- Field: Purchase Identification\n"
                                        },
                                        "paymentType": {
                                            "type": "string",
                                            "maximum": 1,
                                            "description": "Payment plan for the installments.\n\nPossible values:\n- 0 (default): Regular installment. This value is not allowed for airline transactions.\n- 1: Installment payment with down payment.\n- 2: Installment payment without down payment. This value is supported only for airline transactions.\n- 3: Installment payment; down payment and boarding fee will follow. This value is supported only for airline transactions.\n- 4: Down payment only; regular installment payment will follow.\n- 5: Boarding fee only. This value is supported only for airline transactions.\n\nThis field is supported only for installment payments with Visa on CyberSource through VisaNet in Brazil.\n\nSee Installment Payments on CyberSource through VisaNet.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR1\n- Position: 9\n- Field: Merchant Installment Supporting Information\n"
                                        },
                                        "additionalCosts": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Additional costs charged by the issuer to fund the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 128-139\n- Field: Total Other Costs\n"
                                        },
                                        "additionalCostsPercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Additional costs divided by the amount funded.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 140-143\n- Field: Percent of Total Other Costs\n"
                                        },
                                        "amountFunded": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Amount funded.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 48-59\n- Field: Total Amount Funded\n"
                                        },
                                        "amountRequestedPercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Amount requested divided by the amount funded.\n\nFor example:\n- A value of 90.0 specifies 90%.\n- A value of 93.7 specifies 93.7%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 60-63\n- Field: Percent of Amount Requested\n"
                                        },
                                        "annualFinancingCost": {
                                            "type": "string",
                                            "maximum": 7,
                                            "description": "Annual cost of financing the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 158-164\n- Field: Annual Total Cost of Financing\n"
                                        },
                                        "annualInterestRate": {
                                            "type": "string",
                                            "maximum": 7,
                                            "description": "Annual interest rate.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 151-157\n- Field: Annual Interest Rate\n"
                                        },
                                        "expenses": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Expenses charged by the issuer to fund the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 64-75\n- Field: Total Expenses\n"
                                        },
                                        "expensesPercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Expenses divided by the amount funded.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 76-79\n- Field: Percent of Total Expenses\n"
                                        },
                                        "fees": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Fees charged by the issuer to fund the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 80-91\n- Field: Total Fees\n"
                                        },
                                        "feesPercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Fees divided by the amount funded.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 92-95\n- Field: Percent of Total Fees\n"
                                        },
                                        "insurance": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Insurance charged by the issuer to fund the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 112-123\n- Field: Total Insurance\n"
                                        },
                                        "insurancePercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Insurance costs divided by the amount funded.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 124-127\n- Field: Percent Of Total Insurance\n"
                                        },
                                        "monthlyInterestRate": {
                                            "type": "string",
                                            "maximum": 7,
                                            "description": "Monthly interest rate.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 144-150\n- Field: Monthly Interest Rate\n"
                                        },
                                        "taxes": {
                                            "type": "string",
                                            "maximum": 12,
                                            "description": "Taxes collected by the issuer to fund the installment payments.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 96-107\n- Field: Total Taxes\n"
                                        },
                                        "taxesPercentage": {
                                            "type": "string",
                                            "maximum": 4,
                                            "description": "Taxes divided by the amount funded.\n\nFor example:\n- A value of 1.0 specifies 1%.\n- A value of 4.0 specifies 4%.\n\nThis field is included in the authorization reply for the Crediario eligibility request when the issuer approves\nthe cardholder's request for Crediario installment payments in Brazil. See Installment Payments on CyberSource\nthrough VisaNet.\n\nThis field is supported only for `Crediario` installment payments in Brazil on **CyberSource through VisaNet**.\n\nThe value for this field corresponds to the following data in the TC 33 capture file1:\n- Record: CP01 TCR9\n- Position: 108-111\n- Field: Percent of Total Taxes\n"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "TC50171_3"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "totalAmount": "102.21",
                                        "currency": "USD"
                                    }
                                }
                            },
                            "x-example": {
                                "example0": {
                                    "summary": "Capture a Payment",
                                    "value": {
                                        "clientReferenceInformation": {
                                            "code": "TC50171_3"
                                        },
                                        "orderInformation": {
                                            "amountDetails": {
                                                "totalAmount": "102.21",
                                                "currency": "USD"
                                            }
                                        }
                                    }
                                },
                                "example1": {
                                    "summary": "Capture a Payment - Service Fee",
                                    "value": {
                                        "clientReferenceInformation": {
                                            "code": "TC50171_3"
                                        },
                                        "orderInformation": {
                                            "amountDetails": {
                                                "totalAmount": "2325.00",
                                                "currency": "USD",
                                                "serviceFeeAmount": "30.0"
                                            }
                                        },
                                        "merchantInformation": {
                                            "serviceFeeDescriptor": {
                                                "name": "CyberVacations Service Fee",
                                                "contact": "800-999-9999",
                                                "state": "CA"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The payment ID returned from a previous payment request. This ID links the capture to the payment.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2PaymentsCapturesPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        },
                                        "void": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        },
                                        "refund": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - PENDING\n",
                                    "enum": [
                                        "PENDING"
                                    ]
                                },
                                "reconciliationId": {
                                    "type": "string",
                                    "maxLength": 60,
                                    "description": "The reconciliation id for the submitted transaction. This value is not returned for all processors.\n"
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "processorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "transactionId": {
                                            "type": "string",
                                            "maxLength": 18,
                                            "description": "Processor transaction ID.\n\nThis value identifies the transaction on a host system. This value is supported only for Moneris. It contains\nthis information:\n\n - Terminal used to process the transaction\n - Shift during which the transaction took place\n - Batch number\n - Transaction number within the batch\n\nYou must store this value. If you give the customer a receipt, display this value on the receipt.\n\nExample For the value 66012345001069003:\n\n - Terminal ID = 66012345\n - Shift number = 001\n - Batch number = 069\n - Transaction number = 003\n"
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Amount you requested for the capture.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                }
                                            }
                                        },
                                        "invoiceDetails": {
                                            "type": "object",
                                            "properties": {
                                                "level3TransmissionStatus": {
                                                    "type": "boolean",
                                                    "description": "Indicates whether CyberSource sent the Level III information to the processor. The possible values are:\n\nIf your account is not enabled for Level III data or if you did not include the purchasing level field in your\nrequest, CyberSource does not include the Level III data in the request sent to the processor.\n\nFor processor-specific information, see the bill_purchasing_level3_enabled field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n\nPossible values:\n- **true**\n- **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/captures/4963014519526177701545",
                                        "method": "GET"
                                    },
                                    "refund": {
                                        "href": "/pts/v2/captures/4963014519526177701545/refunds",
                                        "method": "POST"
                                    },
                                    "void": {
                                        "href": "/pts/v2/captures/4963014519526177701545/voids",
                                        "method": "POST"
                                    }
                                },
                                "id": "4963014519526177701545",
                                "submitTimeUtc": "2017-06-01T071731Z",
                                "status": "200",
                                "reconciliationId": "39570715X3E1LBQA",
                                "statusInformation": {
                                    "reason": "SUCCESS",
                                    "message": "Successful transaction."
                                },
                                "clientReferenceInformation": {
                                    "code": "TC50171_3"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "totalAmount": "102.21",
                                        "currency": "USD"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "type": "object",
                            "title": "ptsV2PaymentsCapturesPost400Response",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_MERCHANT_CONFIGURATION\n - EXCEEDS_AUTH_AMOUNT\n - AUTH_ALREADY_REVERSED\n - TRANSACTION_ALREADY_SETTLED\n - INVALID_AMOUNT\n - MISSING_AUTH\n - TRANSACTION_ALREADY_REVERSED_OR_SETTLED\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "EXCEEDS_AUTH_AMOUNT",
                                        "AUTH_ALREADY_REVERSED",
                                        "TRANSACTION_ALREADY_SETTLED",
                                        "MISSING_AUTH",
                                        "TRANSACTION_ALREADY_REVERSED_OR_SETTLED"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2PaymentsCapturesPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Capture a Payment",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_3"
                            },
                            "orderInformation": {
                                "amountDetails": {
                                    "totalAmount": "102.21",
                                    "currency": "USD"
                                }
                            }
                        }
                    },
                    "example1": {
                        "summary": "Capture a Payment - Service Fee",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_3"
                            },
                            "orderInformation": {
                                "amountDetails": {
                                    "totalAmount": "2325.00",
                                    "currency": "USD",
                                    "serviceFeeAmount": "30.0"
                                }
                            },
                            "merchantInformation": {
                                "serviceFeeDescriptor": {
                                    "name": "CyberVacations Service Fee",
                                    "contact": "800-999-9999",
                                    "state": "CA"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v2/payments/{id}/refunds": {
            "post": {
                "summary": "Refund a Payment",
                "description": "Include the payment ID in the POST request to refund the payment amount.\n",
                "tags": [
                    "refund"
                ],
                "operationId": "refundPayment",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "refundPaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "transactionId": {
                                            "type": "string",
                                            "description": "Identifier that you assign to the transaction.\n\n**Note** Use this field only if you want to support merchant-initiated reversal and void operations.\n\nSee page 250 on [Merchant-Initiated Reversals and Voids.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SO_API/Credit_Cards_SO_API.pdf)\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "originalTransactionId": {
                                                    "type": "string",
                                                    "maxLength": 32,
                                                    "description": "Value that links the previous transaction to the current follow-on request. This value is assigned by the client\nsoftware that is installed on the POS terminal, which makes it available to the terminal\u2019s software and to\nCyberSource. Therefore, you can use this value to reconcile transactions between CyberSource and the terminal\u2019s\nsoftware.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                },
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "paymentSolution": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Type of digital payment solution for the transaction. Possible Values:\n\n - **visacheckout**: Visa Checkout. This value is required for Visa Checkout transactions. See Visa Checkout Using the SCMP API.\n - **005**: Masterpass. This value is required for Masterpass transactions on OmniPay Direct. See \"Masterpass,\" page 153.\n"
                                        },
                                        "reconciliationId": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Please check with Cybersource customer support to see if your merchant account is configured correctly so you\ncan include this field in your request.\n* For Payouts: max length for FDCCompass is String (22).\n"
                                        },
                                        "linkId": {
                                            "type": "string",
                                            "maxLength": 26,
                                            "description": "Value that links the current authorization request to the original authorization request. Set this value\nto the ID that was returned in the reply message from the original authorization request.\n\nThis value is used for:\n\n - Partial authorizations: See \"Partial Authorizations,\" page 88.\n - Split shipments: See \"Split Shipments,\" page 210.\n"
                                        },
                                        "reportGroup": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Attribute that lets you define custom grouping for your processor reports. This field is supported only for **Worldpay VAP**.\n\nSee \"Report Groups,\" page 234.\n"
                                        },
                                        "visaCheckoutId": {
                                            "type": "string",
                                            "maxLength": 48,
                                            "description": "Identifier for the **Visa Checkout** order. Visa Checkout provides a unique order ID for every transaction in\nthe Visa Checkout **callID** field.\n\nFor more details, see Visa Checkout Using the SCMP API.\n"
                                        },
                                        "purchaseLevel": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Set this field to 3 to indicate that the request includes Level III data."
                                        },
                                        "recurringOptions": {
                                            "type": "object",
                                            "properties": {
                                                "loanPayment": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether this is a payment towards an existing contractual loan.\n\nPossible values:\n- **true** Loan payment\n- **false** (default) Not a loan payment\n\nSee \"Visa Debt Repayments,\" page 218, for a list of processors that support this feature.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "paymentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "The customer\u2019s payment card number, also knows as the Primary Account Nunmber (PAN). You can also use this field\nfor encoded account numbers.\n\nFor processor-specific information, see the `customer_cc_number` field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Two-digit month in which the payment card expires.\n\nFormat: `MM`.\n\nValid values: `01` through `12`.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`01` through `12`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `12`.\n\nFor processor-specific information, see the `customer_cc_expmo` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Four-digit year in which the credit card expires.\n\nFormat: `YYYY`.\n\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`1900` through `3000`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**FDC Nashville Global and FDMS South**\\\nYou can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `2021`.\n\nFor processor-specific information, see the `customer_cc_expyr` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                },
                                                "accountEncoderId": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Identifier for the issuing bank that provided the customer\u2019s encoded account number. Contact your processor for the bank\u2019s ID.\n"
                                                },
                                                "issueNumber": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder. The card might or might not have an issue number. The number can consist of one or two digits, and the first digit might be a zero. When you include this value in your request, include exactly what is printed on the card. A value of 2 is different than a value of 02. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card.\n\n**Note** The issue number is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "startMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Month of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: MM`. Possible values: 01 through 12.\n\n**Note** The start date is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "startYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Year of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: YYYY`.\n\n**Note** The start date is not required for Maestro (UK Domestic) transactions.\n"
                                                }
                                            }
                                        },
                                        "bank": {
                                            "type": "object",
                                            "properties": {
                                                "account": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "maxLength": 1,
                                                            "description": "Account type.\n\nPossible values:\n - **C**: Checking.\n - **G**: General ledger. This value is supported only on Wells Fargo ACH.\n - **S**: Savings (U.S. dollars only).\n - **X**: Corporate checking (U.S. dollars only).\n"
                                                        },
                                                        "number": {
                                                            "type": "string",
                                                            "maxLength": 17,
                                                            "description": "Account number.\n\nWhen processing encoded account numbers, use this field for the encoded account number.\n"
                                                        },
                                                        "encoderId": {
                                                            "type": "string",
                                                            "maxLength": 3,
                                                            "description": "Identifier for the bank that provided the customer\u2019s encoded account number.\n\nTo obtain the bank identifier, contact your processor. See \"Encoded Account Numbers,\" page 39.\n"
                                                        },
                                                        "checkNumber": {
                                                            "type": "string",
                                                            "maxLength": 8,
                                                            "description": "Check number.\n\nChase Paymentech Solutions - Optional.\nCyberSource ACH Service - Not used.\nRBS WorldPay Atlanta - Optional on debits. Required on credits.\nTeleCheck - Strongly recommended on debit requests. Optional on credits.\n"
                                                        },
                                                        "checkImageReferenceNumber": {
                                                            "type": "string",
                                                            "maxLength": 32,
                                                            "description": "Image reference number associated with the check. You cannot include any special characters.\n"
                                                        }
                                                    }
                                                },
                                                "routingNumber": {
                                                    "type": "string",
                                                    "maxLength": 9,
                                                    "description": "Bank routing number.\n\nThis is also called the transit number.\n"
                                                }
                                            }
                                        },
                                        "customer": {
                                            "type": "object",
                                            "properties": {
                                                "customerId": {
                                                    "type": "string",
                                                    "description": "Unique identifier for the customer's card and billing information.\n\nWhen you use Payment Tokenization or Recurring Billing and you include this value in\nyour request, many of the fields that are normally required for an authorization or credit\nbecome optional.\n\n**NOTE** When you use Payment Tokenization or Recurring Billing, the value for the Customer ID is actually the Cybersource payment token for a customer. This token stores information such as the consumer\u2019s card number so it can be applied towards bill payments, recurring payments, or one-time payments. By using this token in a payment API request, the merchant doesn't need to pass in data such as the card number or expiration date in the request itself.\n\nSee \"Payment Tokenization,\" page 222, and \"Recurring Billing,\" page 225.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 19,
                                                    "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                },
                                                "discountAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Total discount amount applied to the order.\n\nFor processor-specific information, see the order_discount_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "dutyAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Total charges for any import or export duties included in the order.\n\nFor processor-specific information, see the duty_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "Total tax amount for all the items in the order.\n\nFor processor-specific information, see the total_tax_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "nationalTaxIncluded": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates whether a national tax is included in the order total.\n\nPossible values:\n\n - **0**: national tax not included\n - **1**: national tax included\n\nFor processor-specific information, see the national_tax_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAppliedAfterDiscount": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates how the merchant manages discounts.\n\nPossible values:\n\n - **0**: no invoice level discount included\n - **1**: tax calculated on the postdiscount invoice total\n - **2**: tax calculated on the prediscount invoice total\n\nFor processor-specific information, see the order_discount_management_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAppliedLevel": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates how you calculate tax.\n\nPossible values:\n\n - **0**: net prices with tax calculated at line item level\n - **1**: net prices with tax calculated at invoice level\n - **2**: gross prices with tax provided at line item level\n - **3**: gross prices with tax provided at invoice level\n - **4**: no tax applies on the invoice for the transaction\n\nFor processor-specific information, see the tax_management_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxTypeCode": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "For tax amounts that can be categorized as one tax type.\n\nThis field contains the tax type code that corresponds to the entry in the _lineItems.taxAmount_ field.\n\nPossible values:\n\n - **056**: sales tax (U.S only)\n - **TX~**: all taxes (Canada only)   Note ~ = space.\n\nFor processor-specific information, see the total_tax_type_code field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "freightAmount": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Total freight or shipping and handling charges for the order. When you include this field in your request, you\nmust also include the **totalAmount** field.\n\nFor processor-specific information, see the freight_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "foreignAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Set this field to the converted amount that was returned by the DCC provider. See \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\nFor processor-specific information, see the foreign_amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "foreignCurrency": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Your customer\u2019s billing currency. See \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\nFor processor-specific information, see the foreign_currency field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "exchangeRate": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Exchange rate returned by the DCC service. Includes a decimal point and a maximum of 4 decimal places.\n\nFor details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n\nFor processor-specific information, see the exchange_rate field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "exchangeRateTimeStamp": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "Time stamp for the exchange rate. This value is returned by the DCC service.\n\nFormat: `YYYYMMDD~HH:MM`  where ~ denotes a space.\n\nFor processor-specific information, see the exchange_rate_timestamp field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "amexAdditionalAmounts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 3,
                                                                "description": "Additional amount type. This field is supported only for **American Express Direct**.\n\nFor processor-specific information, see the additional_amount_type field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "maxLength": 12,
                                                                "description": "Additional amount. This field is supported only for **American Express Direct**.\n\nFor processor-specific information, see the additional_amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "taxDetails": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "description": "This is used to determine what type of tax related data should be inclued under _taxDetails_ object.\n\nPossible values:\n - alternate\n - local\n - national\n - vat\n",
                                                                "enum": [
                                                                    "alternate",
                                                                    "local",
                                                                    "national",
                                                                    "vat"
                                                                ]
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "maxLength": 13,
                                                                "description": "Please see below table for related decription based on above _type_ field.\n\n| type      | type description |\n|-----------|--------------------|\n| alternate | Total amount of alternate tax for the order. |\n| local     | Sales tax for the order. |\n| national  | National tax for the order. |\n| vat       | Total amount of VAT or other tax included in the order. |\n| other     | Other tax. |\n"
                                                            },
                                                            "rate": {
                                                                "type": "string",
                                                                "maxLength": 6,
                                                                "description": "Rate of VAT or other tax for the order.\n\nExample 0.040 (=4%)\n\nValid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated)\n"
                                                            },
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 4,
                                                                "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                            },
                                                            "taxId": {
                                                                "type": "string",
                                                                "maxLength": 15,
                                                                "description": "Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value,\nincluding zero. You may send this field without sending alternate tax amount.\n"
                                                            },
                                                            "applied": {
                                                                "type": "boolean",
                                                                "description": "The tax is applied. Valid value is `true` or `false`."
                                                            },
                                                            "exemptionCode": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "description": "Code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not\nverify the value or modify it in any way before sending it to the processor.\n\nFor possible values, see Exemption Status Values. See Numbered Elements.\n\nImportant For information about using this field, see Item-Level Tax Fields.\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "serviceFeeAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Service fee. Required for service fee transactions.\n"
                                                },
                                                "originalCurrency": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Your local pricing currency code.\n\nFor the possible values, see the ISO Standard Currency Codes.\n\nFor details, see Dynamic Currency Conversion with a Third Party Provider.\n"
                                                }
                                            }
                                        },
                                        "billTo": {
                                            "type": "object",
                                            "properties": {
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s first name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**:\\\nThis field may be sent only for FDC Compass.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_firstname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s last name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\n**For Payouts** : This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the customer_lastname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "company": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "maxLength": 60,
                                                            "description": "Name of the customer\u2019s company.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the company_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                        },
                                                        "address1": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "First line in the street address of the company purchasing the product."
                                                        },
                                                        "address2": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "Additional address information for the company purchasing the product."
                                                        },
                                                        "locality": {
                                                            "type": "string",
                                                            "maxLength": 30,
                                                            "description": "City in the address of the company purchasing the product."
                                                        },
                                                        "administrativeArea": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "State or province in the address of the company purchasing the product. Use the State, Province, and Territory\nCodes for the United States and Canada.\n"
                                                        },
                                                        "postalCode": {
                                                            "type": "string",
                                                            "maxLength": 10,
                                                            "description": "Postal code in the address of the company purchasing the product. The postal code must consist of 5 to 9 digits.\n\nWhen the company country is the U.S., the 9-digit postal code must follow this format:\n**[5 digits][dash][4 digits]**\nExample 12345-6789\n\nWhen the company country is Canada, the 6-digit postal code must follow this format:\n**[alpha][numeric][alpha][space][numeric][alpha][numeric]**\nExample A1B 2C3\n"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "Country in the address of the company purchasing the product. Use the two-character ISO Standard Country Codes.\n"
                                                        }
                                                    }
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the billing street address as it appears on the credit card issuer\u2019s records.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_address1 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Additional address information.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**Atos**\nThis field must not contain colons (:).\n\n**Chase Paymentech Solutions, FDC Compass, and TSYS Acquiring Solutions**\nThis value is used for AVS.\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_address2 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the billing address.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the bill_city field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the billing address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_state field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**American Express Direct**\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the remaining value is longer than nine characters, truncates the value starting from the right side.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_zip field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Country of the billing address. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_country field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Customer's email address, including the full domain name.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_email field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Customer\u2019s phone number.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nCyberSource recommends that you include the country code when the order is from outside the U.S.\n\nFor processor-specific information, see the customer_phone field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n"
                                                }
                                            }
                                        },
                                        "shipTo": {
                                            "type": "object",
                                            "properties": {
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the shipping address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "description": "Country of the shipping address. Use the two-character ISO Standard Country Codes.",
                                                    "maxLength": 2
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the shipping address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\n**American Express Direct**\\\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the\nremaining value is longer than nine characters, truncates the value starting from the right side.\n"
                                                }
                                            }
                                        },
                                        "lineItems": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "productCode": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Type of product. This value is used to determine the category that the product is in: electronic, handling,\nphysical, service, or shipping. The default value is **default**.\nIf you are performing an authorization transaction (`processingOptions.capture` is set to `false`), and you set this field to a value other than default or any of the values related to\nshipping and handling, then the fields `quantity`, `productName`, and `productSku` are required.\nIt can also have a value of \"gift_card\".\n\nSee Appendix O, \"Product Codes,\" on page 373 for a list of valid values.\nFor a payment, when you set this field to a value other than default or any of the values related to\nshipping and handling, below fields _quantity_, _productName_, and _productSKU_ are required.\n"
                                                    },
                                                    "productName": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "For an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`),\nthis field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of\nthe other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "productSku": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Stock Keeping Unit (SKU) code for the product.\n\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when _orderInformation.lineItems[].productCode_ is not set to **default** or one of the other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "quantity": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 9999999999,
                                                        "description": "Number of units for this order.\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of the other values that are related to shipping and/or handling.\nWhen `orderInformation.lineItems[].productCode` is `gift_card`, this is the total count of individual prepaid gift cards purchased.\n",
                                                        "default": 1
                                                    },
                                                    "unitPrice": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you\ncannot include any other special characters. CyberSource truncates the amount to the correct number of decimal\nplaces.\n\nFor processor-specific information, see the amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n- Table 12, \"Authorization Information for Specific Processors,\" on page 36\n- Table 16, \"Capture Information for Specific Processors,\" on page 51\n- Table 20, \"Credit Information for Specific Processors,\" on page 65\n\n**DCC for First Data**\\\nThis value is the original amount in your local currency. You must include this field. You cannot use grand_total_amount. See \"Dynamic Currency Conversion for First Data,\" page 113.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 12, \"Authorization Information for Specific Processors,\" on page 36.\n\n**Zero Amount Authorizations**\\\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 220.\n"
                                                    },
                                                    "unitOfMeasure": {
                                                        "type": "string",
                                                        "maxLength": 12,
                                                        "description": "Unit of measure, or unit of measure code, for the item.\n"
                                                    },
                                                    "totalAmount": {
                                                        "type": "string",
                                                        "maxLength": 13,
                                                        "description": "Total amount for the item. Normally calculated as the unit price x quantity.\n\nWhen orderInformation.lineItems[].productCode is \"gift_card\", this is the purchase amount total\nfor prepaid gift cards in major units. Example: 123.45 USD= 123\n"
                                                    },
                                                    "taxAmount": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Total tax to apply to the product. This value cannot be negative. The tax amount and the offer amount must\nbe in the same currency. The tax amount field is additive.\n\nThe following example uses a two-exponent currency such as USD:\n\n 1. You include each line item in your request.\n ..- 1st line item has amount=10.00, quantity=1, and taxAmount=0.80\n ..- 2nd line item has amount=20.00, quantity=1, and taxAmount=1.60\n 2. The total amount authorized will be 32.40, not 30.00 with 2.40 of tax included.\n\nIf you want to include the tax amount and also request the ics_tax service, see Tax Calculation Service Using the SCMP API.\n\nThis field is frequently used for Level II and Level III transactions. See Level II and Level III Processing Using the SCMP API.\n"
                                                    },
                                                    "taxRate": {
                                                        "type": "string",
                                                        "maxLength": 7,
                                                        "description": "Tax rate applied to the item. See \"Numbered Elements,\" page 14.\n\nVisa: Valid range is 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated).\n\nMastercard: Valid range is 0.00001 to 0.99999 (0.001% to 99.999%).\n"
                                                    },
                                                    "taxAppliedAfterDiscount": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Flag to indicate how you handle discount at the line item level.\n\n - 0: no line level discount provided\n - 1: tax was calculated on the post-discount line item total\n - 2: tax was calculated on the pre-discount line item total\n\n`Note` Visa will inset 0 (zero) if an invalid value is included in this field.\n\nThis field relates to the value in the _lineItems[].discountAmount_ field.\n"
                                                    },
                                                    "taxStatusIndicator": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Flag to indicate whether tax is exempted or not included.\n\n - 0: tax not included\n - 1: tax included\n - 2: transaction is not subject to tax\n"
                                                    },
                                                    "taxTypeCode": {
                                                        "type": "string",
                                                        "maxLength": 4,
                                                        "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                    },
                                                    "amountIncludesTax": {
                                                        "type": "boolean",
                                                        "description": "Flag that indicates whether the tax amount is included in the Line Item Total.\n\nPossible values:\n - **true**\n - **false**\n",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "typeOfSupply": {
                                                        "type": "string",
                                                        "maxLength": 2,
                                                        "description": "Flag to indicate whether the purchase is categorized as goods or services.\nPossible values:\n\n - 00: goods\n - 01: services\n"
                                                    },
                                                    "commodityCode": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Commodity code or International description code used to classify the item. Contact your acquirer for a list of\ncodes.\n"
                                                    },
                                                    "discountAmount": {
                                                        "type": "string",
                                                        "maxLength": 13,
                                                        "description": "Discount applied to the item."
                                                    },
                                                    "discountApplied": {
                                                        "type": "boolean",
                                                        "description": "Flag that indicates whether the amount is discounted.\n\nIf you do not provide a value but you set Discount Amount to a value greater than zero, then CyberSource sets\nthis field to **true**.\n\nPossible values:\n - **true**\n - **false**\n",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "discountRate": {
                                                        "type": "string",
                                                        "maxLength": 6,
                                                        "description": "Rate the item is discounted. Maximum of 2 decimal places.\n\nExample 5.25 (=5.25%)\n"
                                                    },
                                                    "invoiceNumber": {
                                                        "type": "string",
                                                        "maxLength": 23,
                                                        "description": "Field to support an invoice number for a transaction. You must specify the number of line items that will\ninclude an invoice number. By default, the first line item will include an invoice number field. The invoice\nnumber field can be included for up to 10 line items.\n"
                                                    },
                                                    "taxDetails": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "description": "This is used to determine what type of tax related data should be inclued under _taxDetails_ object.\n\nPossible values:\n - alternate\n - local\n - national\n - vat\n",
                                                                    "enum": [
                                                                        "alternate",
                                                                        "local",
                                                                        "national",
                                                                        "vat"
                                                                    ]
                                                                },
                                                                "amount": {
                                                                    "type": "string",
                                                                    "maxLength": 13,
                                                                    "description": "Please see below table for related decription based on above _type_ field.\n\n| type      | type description |\n|-----------|--------------------|\n| alternate | Total amount of alternate tax for the order. |\n| local     | Sales tax for the order. |\n| national  | National tax for the order. |\n| vat       | Total amount of VAT or other tax included in the order. |\n| other     | Other tax. |\n"
                                                                },
                                                                "rate": {
                                                                    "type": "string",
                                                                    "maxLength": 6,
                                                                    "description": "Rate of VAT or other tax for the order.\n\nExample 0.040 (=4%)\n\nValid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated)\n"
                                                                },
                                                                "code": {
                                                                    "type": "string",
                                                                    "maxLength": 4,
                                                                    "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                                },
                                                                "taxId": {
                                                                    "type": "string",
                                                                    "maxLength": 15,
                                                                    "description": "Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value,\nincluding zero. You may send this field without sending alternate tax amount.\n"
                                                                },
                                                                "applied": {
                                                                    "type": "boolean",
                                                                    "description": "The tax is applied. Valid value is `true` or `false`."
                                                                },
                                                                "exemptionCode": {
                                                                    "type": "string",
                                                                    "maxLength": 1,
                                                                    "description": "Code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not\nverify the value or modify it in any way before sending it to the processor.\n\nFor possible values, see Exemption Status Values. See Numbered Elements.\n\nImportant For information about using this field, see Item-Level Tax Fields.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "invoiceDetails": {
                                            "type": "object",
                                            "properties": {
                                                "purchaseOrderNumber": {
                                                    "type": "string",
                                                    "maxLength": 25,
                                                    "description": "Value used by your customer to identify the order. This value is typically a purchase order number. CyberSource\nrecommends that you do not populate the field with all zeros or nines.\n\nFor processor-specific information, see the user_po field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "purchaseOrderDate": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Date the order was processed. `Format: YYYY-MM-DD`.\n\nFor processor-specific information, see the purchaser_order_date field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "purchaseContactName": {
                                                    "type": "string",
                                                    "maxLength": 36,
                                                    "description": "The name of the individual or the company contacted for company authorized purchases.\n\nFor processor-specific information, see the authorized_contact_name field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxable": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether an order is taxable. This value must be true if the sum of all _lineItems[].taxAmount_ values > 0.\n\nIf you do not include any _lineItems[].taxAmount_ values in your request, CyberSource does not include\n_invoiceDetails.taxable_ in the data it sends to the processor.\n\nFor processor-specific information, see the tax_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n\nPossible values:\n - **true**\n - **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                },
                                                "vatInvoiceReferenceNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "VAT invoice number associated with the transaction.\n\nFor processor-specific information, see the vat_invoice_ref_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "commodityCode": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "International description code of the overall order\u2019s goods or services or the Categorizes purchases for VAT\nreporting. Contact your acquirer for a list of codes.\n\nFor processor-specific information, see the summary_commodity_code field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "transactionAdviceAddendum": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "data": {
                                                                "type": "string",
                                                                "maxLength": 40,
                                                                "description": "Four Transaction Advice Addendum (TAA) fields. These fields are used to display descriptive information\nabout a transaction on the customer\u2019s American Express card statement. When you send TAA fields, start\nwith amexdata_taa1, then ...taa2, and so on. Skipping a TAA field causes subsequent TAA fields to be\nignored.\n\nTo use these fields, contact CyberSource Customer Support to have your account enabled for this feature.\n"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "shippingDetails": {
                                            "type": "object",
                                            "properties": {
                                                "shipFromPostalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the address from which the goods are shipped, which is used to establish nexus. The default is\nthe postal code associated with your CyberSource account.\n\nThe postal code must consist of 5 to 9 digits. When the billing country is the U.S., the 9-digit postal code\nmust follow this format:\n\n`[5 digits][dash][4 digits]`\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n\n`[alpha][numeric][alpha][space] [numeric][alpha][numeric]`\n\nExample A1B 2C3\n\nThis field is frequently used for Level II and Level III transactions.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantCustomerId": {
                                            "type": "string",
                                            "maxLength": 100,
                                            "description": "Your identifier for the customer.\n\nWhen a subscription or customer profile is being created, the maximum length for this field for most processors is 30. Otherwise, the maximum length is 100.\n\n**Comercio Latino**\\\nFor recurring payments in Mexico, the value is the customer\u2019s contract number.\nNote Before you request the authorization, you must inform the issuer of the customer contract numbers that will be used for recurring transactions.\n\n**Litle**\\\nFor a follow-on credit with Litle, CyberSource checks the following locations, in the order\ngiven, for a customer account ID value and uses the first value it finds:\n1. `customer_account_id` value in the follow-on credit request\n2. Customer account ID value that was used for the capture that is being credited\n3. Customer account ID value that was used for the original authorization\nIf a customer account ID value cannot be found in any of these locations, then no value is used.\n\nFor processor-specific information, see the customer_account_id field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Customer\u2019s government-assigned tax identification number.\n\nFor processor-specific information, see the purchaser_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        }
                                    }
                                },
                                "deviceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "hostName": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Host name reported by the customer\u2019s browser to your Web server identified via the HTTP header."
                                        },
                                        "ipAddress": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Customer\u2019s IP address, such as 10.1.27.63, reported by your Web server via socket information.\n"
                                        },
                                        "userAgent": {
                                            "type": "string",
                                            "maxLength": 40,
                                            "description": "Customer\u2019s browser as identified from the HTTP header data. For example, Mozilla is the value that identifies\nthe Netscape browser.\n"
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nFor Payouts:\n* Paymentech (22)\n"
                                                },
                                                "alternateName": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n* FDCCompass (13)\n* Paymentech (13)\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Merchant City. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Merchant State. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        },
                                        "categoryCode": {
                                            "type": "integer",
                                            "maximum": 9999,
                                            "description": "Four-digit number that the payment card industry uses to classify merchants into market segments. Visa assigned\none or more of these values to your business when you started accepting Visa cards.\n\nIf you do not include this field in your request, CyberSource uses the value in your CyberSource account.\n\nFor processor-specific information, see the merchant_category_code field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR4\n- Position: 150-153\n- Field: Merchant Category Code\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 21,
                                            "description": "Your government-assigned tax identification number.\n\nFor CtV processors, the maximum length is 20.\n\nFor other processor-specific information, see the merchant_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "cardAcceptorReferenceNumber": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Reference number that facilitates card acceptor/corporation communication and record keeping.\n\nFor processor-specific information, see the card_acceptor_ref_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "taxId": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Your Cadastro Nacional da Pessoa Jur\u00eddica (CNPJ) number.\n\nThis field is supported only for BNDES transactions on CyberSource through VisaNet. See BNDES.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR6\n- Position: 40-59\n- Field: BNDES Reference Field 1\n"
                                        }
                                    }
                                },
                                "aggregatorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "aggregatorId": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Value that identifies you as a payment aggregator. Get this value from the\nprocessor.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR6\n- Position: 95-105\n- Field: MasterCard Payment Facilitator ID\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nccAuthService\\\n**American Express Direct**: R for all aggregator transactions.\\\n**CyberSource through VisaNet**: R for Mastercard aggregator transactions and for American Express aggregator authorizations; otherwise, not used.\\\n**FDC Compass**: R for all aggregator transactions.\\\n**FDC Nashville Global**: R for all aggregator transactions.\n\nFor processor-specific information, see the aggregator_id field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "name": {
                                            "type": "string",
                                            "maxLength": 37,
                                            "description": "Your payment aggregator business name.\n\n**American Express Direct**\\\nThe maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters.\\\n\n**CyberSource through VisaNet**\\\nWith American Express, the maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nFor processor-specific information, see the aggregator_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "subMerchant": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 37,
                                                    "description": "Sub-merchant\u2019s business name.\n\n**American Express Direct**\\\nThe maximum length of the sub-merchant name depends on the length of the aggregator name. The combined length for both values must not exceed 36 characters.\n\n**CyberSource through VisaNet**\\\nWith American Express, the maximum length of the sub-merchant name depends on the length of the aggregator name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\n**FDC Nashville Global**\\\nWith Mastercard, the maximum length of the sub-merchant name depends on the length of the aggregator name:\n- If aggregator name length is 1 through 3, maximum sub-merchant name length is 21.\n- If aggregator name length is 4 through 7, maximum sub-merchant name length is 17.\n- If aggregator name length is 8 through 12, maximum sub-merchant name length is 12.\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 38,
                                                    "description": "First line of the sub-merchant\u2019s street address.\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 21,
                                                    "description": "Sub-merchant\u2019s city.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nFor details, see \"Aggregator Support,\" page 100.\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s state or province. Use the State, Province, and Territory Codes for the United States and Canada.\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Partial postal code for the sub-merchant\u2019s address.\n\nSee \"Aggregator Support,\" page 100 for details.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s country. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nSee \"Aggregator Support,\" page 101.\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 40,
                                                    "description": "Sub-merchant\u2019s email address.\n\n**Maximum length for processors**\n\n - American Express Direct: 40\n - CyberSource through VisaNet: 40\n - FDC Compass: 40\n - FDC Nashville Global: 19\n\n**CyberSource through VisaNet**\\\nWith American Express, the value for this field corresponds to the following data in the TC 33 capture file:\n- Record: CP01 TCRB\n- Position: 25-64\n- Field: American Express Seller E-mail Address\n\n**Note** The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant\u2019s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies.\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Sub-merchant\u2019s telephone number.\n\n**Maximum length for procesors**\n\n - American Express Direct: 20\n - CyberSource through VisaNet: 20\n - FDC Compass: 13\n - FDC Nashville Global: 10\n\n**CyberSource through VisaNet**\\\nWith American Express, the value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCRB\n- Position: 5-24\n- Field: American Express Seller Telephone Number\n\n**FDC Compass**\\\nThis value must consist of uppercase characters. Use one of these recommended formats:\\\n`NNN-NNN-NNNN`\\\n`NNN-AAAAAAA`\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "emv": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "maxLength": 1998,
                                                    "description": "EMV data that is transmitted from the chip card to the issuer, and from the issuer to the chip card. The EMV\ndata is in the tag-length-value format and includes chip card tags, terminal tags, and transaction detail tags.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10. For information about the individual tags, see the \u201cApplication Specification\u201d section in the EMV 4.3 Specifications: http://emvco.com\n\n**Important** The following tags contain sensitive information and **must not** be included in this field:\n\n - **56**: Track 1 equivalent data\n - **57**: Track 2 equivalent data\n - **5A**: Application PAN\n - **5F20**: Cardholder name\n - **5F24**: Application expiration date (This sensitivity has been relaxed for cmcic, amexdirect, fdiglobal, opdfde, and six)\n - **99**: Transaction PIN\n - **9F0B**: Cardholder name (extended)\n - **9F1F**: Track 1 discretionary data\n - **9F20**: Track 2 discretionary data\n\nFor captures, this field is required for contact EMV transactions. Otherwise, it is optional.\n\nFor credits, this field is required for contact EMV stand-alone credits and contactless EMV stand-alone credits.\nOtherwise, it is optional.\n\n**Important** For contact EMV captures, contact EMV stand-alone credits, and contactless EMV stand-alone credits,\nyou must include the following tags in this field. For all other types of EMV transactions, the following tags\nare optional.\n\n - **95**: Terminal verification results\n - **9F10**: Issuer application data\n - **9F26**: Application cryptogram\n"
                                                },
                                                "fallback": {
                                                    "type": "boolean",
                                                    "maxLength": 5,
                                                    "description": "Indicates whether a fallback method was used to enter credit card information into the POS terminal. When a\ntechnical problem prevents a successful exchange of information between a chip card and a chip-capable terminal:\n\n 1. Swipe the card or key the credit card information into the POS terminal.\n 2. Use the pointOfSaleInformation.entryMode field to indicate whether the information was swiped or keyed.\n\nPossible values:\n - **true**\n - **false** (default)\n\nThis field is supported only on **Chase Paymentech Solutions** and **GPN**.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "merchantDefinedInformation": {
                                    "type": "array",
                                    "description": "The description for this field is not available.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "maxLength": 50,
                                                "description": "The name you assign for your merchant-defined data field.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].key and\nmerchantDefinedInformation[1].key for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n"
                                            },
                                            "value": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "The value you assign for your merchant-defined data field.\n\n**Warning** Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields. Personally identifying information includes, but is not\nlimited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV,\nCVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].value and\nmerchantDefinedInformation[1].value for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n\nFor installment payments with Mastercard in Brazil:\n- The value for merchantDefinedInformation[0].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 25-44\n  - Field: Reference Field 2\n- The value for merchantDefinedInformation[1].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 45-64\n  - Field: Reference Field 3\n"
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "Testing-VDP-Payments-Refund"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "totalAmount": "102.21",
                                        "currency": "USD"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The payment ID. This ID is returned from a previous payment request.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2PaymentsRefundPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        },
                                        "void": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - PENDING\n",
                                    "enum": [
                                        "PENDING"
                                    ]
                                },
                                "reconciliationId": {
                                    "type": "string",
                                    "maxLength": 60,
                                    "description": "The reconciliation id for the submitted transaction. This value is not returned for all processors.\n"
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "refundAmountDetails": {
                                    "type": "object",
                                    "properties": {
                                        "refundAmount": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Total amount of the refund."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                        }
                                    }
                                },
                                "processorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "transactionId": {
                                            "type": "string",
                                            "maxLength": 18,
                                            "description": "Processor transaction ID.\n\nThis value identifies the transaction on a host system. This value is supported only for Moneris. It contains\nthis information:\n\n - Terminal used to process the transaction\n - Shift during which the transaction took place\n - Batch number\n - Transaction number within the batch\n\nYou must store this value. If you give the customer a receipt, display this value on the receipt.\n\nExample For the value 66012345001069003:\n\n - Terminal ID = 66012345\n - Shift number = 001\n - Batch number = 069\n - Transaction number = 003\n"
                                        },
                                        "forwardedAcquirerCode": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Name of the Japanese acquirer that processed the transaction. Returned only for CCS (CAFIS) and JCN Gateway.\nPlease contact the CyberSource Japan Support Group for more information.\n"
                                        },
                                        "merchantNumber": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Identifier that was assigned to you by your acquirer.\n\nThis value must be printed on the receipt.\n\nThis field is supported only on **American Express Direct**, **FDC Nashville Global**, and **SIX**.\n"
                                        },
                                        "responseCode": {
                                            "type": "string",
                                            "maxLength": 10,
                                            "description": "For most processors, this is the error message sent directly from the bank. Returned only when the processor\nreturns this value.\n\nImportant Do not use this field to evaluate the result of the authorization.\n"
                                        },
                                        "achVerification": {
                                            "type": "object",
                                            "properties": {
                                                "resultCode": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Results from the ACH verification service, which is described in \"ACH Verification,\" page 25. For the possible\nvalues, see Appendix H, \"Verification Codes,\" on page 91.\n"
                                                },
                                                "resultCodeRaw": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Raw results from the ACH verification service, which is described in \"ACH Verification,\" page 25. For the\npossible values, see Appendix H, \"Verification Codes,\" on page 91.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "invoiceDetails": {
                                            "type": "object",
                                            "properties": {
                                                "level3TransmissionStatus": {
                                                    "type": "boolean",
                                                    "description": "Indicates whether CyberSource sent the Level III information to the processor. The possible values are:\n\nIf your account is not enabled for Level III data or if you did not include the purchasing level field in your\nrequest, CyberSource does not include the Level III data in the request sent to the processor.\n\nFor processor-specific information, see the bill_purchasing_level3_enabled field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n\nPossible values:\n- **true**\n- **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/refunds/4963014779006178301545",
                                        "method": "GET"
                                    },
                                    "void": {
                                        "href": "/pts/v2/refunds/4963014779006178301545/voids",
                                        "method": "POST"
                                    }
                                },
                                "id": "4963014779006178301545",
                                "submitTimeUtc": "2017-06-01T071757Z",
                                "status": "200",
                                "reconciliationId": "39571012D3DFEKS0",
                                "statusInformation": {
                                    "reason": "SUCCESS",
                                    "message": "Successful transaction."
                                },
                                "clientReferenceInformation": {
                                    "code": "Testing-VDP-Payments-Refund"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "currency": "USD"
                                    }
                                },
                                "refundAmountDetails": {
                                    "currency": "USD",
                                    "refundAmount": "102.21"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "type": "object",
                            "title": "ptsV2PaymentsRefundPost400Response",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_CARD\n - INVALID_MERCHANT_CONFIGURATION\n - INVALID_AMOUNT\n - CAPTURE_ALREADY_VOIDED\n - ACCOUNT_NOT_ALLOWED_CREDIT\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_CARD",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "CAPTURE_ALREADY_VOIDED",
                                        "ACCOUNT_NOT_ALLOWED_CREDIT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2PaymentsRefundPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Refund a Payment",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_3"
                            },
                            "orderInformation": {
                                "amountDetails": {
                                    "totalAmount": "10",
                                    "currency": "USD"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v2/captures/{id}/refunds": {
            "post": {
                "summary": "Refund a Capture",
                "description": "Include the capture ID in the POST request to refund the captured amount.\n",
                "tags": [
                    "refund"
                ],
                "operationId": "refundCapture",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "refundCaptureRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "transactionId": {
                                            "type": "string",
                                            "description": "Identifier that you assign to the transaction.\n\n**Note** Use this field only if you want to support merchant-initiated reversal and void operations.\n\nSee page 250 on [Merchant-Initiated Reversals and Voids.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SO_API/Credit_Cards_SO_API.pdf)\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "originalTransactionId": {
                                                    "type": "string",
                                                    "maxLength": 32,
                                                    "description": "Value that links the previous transaction to the current follow-on request. This value is assigned by the client\nsoftware that is installed on the POS terminal, which makes it available to the terminal\u2019s software and to\nCyberSource. Therefore, you can use this value to reconcile transactions between CyberSource and the terminal\u2019s\nsoftware.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                },
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "paymentSolution": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Type of digital payment solution for the transaction. Possible Values:\n\n - **visacheckout**: Visa Checkout. This value is required for Visa Checkout transactions. See Visa Checkout Using the SCMP API.\n - **005**: Masterpass. This value is required for Masterpass transactions on OmniPay Direct. See \"Masterpass,\" page 153.\n"
                                        },
                                        "reconciliationId": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Please check with Cybersource customer support to see if your merchant account is configured correctly so you\ncan include this field in your request.\n* For Payouts: max length for FDCCompass is String (22).\n"
                                        },
                                        "linkId": {
                                            "type": "string",
                                            "maxLength": 26,
                                            "description": "Value that links the current authorization request to the original authorization request. Set this value\nto the ID that was returned in the reply message from the original authorization request.\n\nThis value is used for:\n\n - Partial authorizations: See \"Partial Authorizations,\" page 88.\n - Split shipments: See \"Split Shipments,\" page 210.\n"
                                        },
                                        "reportGroup": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Attribute that lets you define custom grouping for your processor reports. This field is supported only for **Worldpay VAP**.\n\nSee \"Report Groups,\" page 234.\n"
                                        },
                                        "visaCheckoutId": {
                                            "type": "string",
                                            "maxLength": 48,
                                            "description": "Identifier for the **Visa Checkout** order. Visa Checkout provides a unique order ID for every transaction in\nthe Visa Checkout **callID** field.\n\nFor more details, see Visa Checkout Using the SCMP API.\n"
                                        },
                                        "purchaseLevel": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Set this field to 3 to indicate that the request includes Level III data."
                                        },
                                        "recurringOptions": {
                                            "type": "object",
                                            "properties": {
                                                "loanPayment": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether this is a payment towards an existing contractual loan.\n\nPossible values:\n- **true** Loan payment\n- **false** (default) Not a loan payment\n\nSee \"Visa Debt Repayments,\" page 218, for a list of processors that support this feature.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "paymentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "The customer\u2019s payment card number, also knows as the Primary Account Nunmber (PAN). You can also use this field\nfor encoded account numbers.\n\nFor processor-specific information, see the `customer_cc_number` field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Two-digit month in which the payment card expires.\n\nFormat: `MM`.\n\nValid values: `01` through `12`.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`01` through `12`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `12`.\n\nFor processor-specific information, see the `customer_cc_expmo` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Four-digit year in which the credit card expires.\n\nFormat: `YYYY`.\n\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`1900` through `3000`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**FDC Nashville Global and FDMS South**\\\nYou can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `2021`.\n\nFor processor-specific information, see the `customer_cc_expyr` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                },
                                                "accountEncoderId": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Identifier for the issuing bank that provided the customer\u2019s encoded account number. Contact your processor for the bank\u2019s ID.\n"
                                                },
                                                "issueNumber": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder. The card might or might not have an issue number. The number can consist of one or two digits, and the first digit might be a zero. When you include this value in your request, include exactly what is printed on the card. A value of 2 is different than a value of 02. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card.\n\n**Note** The issue number is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "startMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Month of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: MM`. Possible values: 01 through 12.\n\n**Note** The start date is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "startYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Year of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: YYYY`.\n\n**Note** The start date is not required for Maestro (UK Domestic) transactions.\n"
                                                }
                                            }
                                        },
                                        "bank": {
                                            "type": "object",
                                            "properties": {
                                                "account": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "maxLength": 1,
                                                            "description": "Account type.\n\nPossible values:\n - **C**: Checking.\n - **G**: General ledger. This value is supported only on Wells Fargo ACH.\n - **S**: Savings (U.S. dollars only).\n - **X**: Corporate checking (U.S. dollars only).\n"
                                                        },
                                                        "number": {
                                                            "type": "string",
                                                            "maxLength": 17,
                                                            "description": "Account number.\n\nWhen processing encoded account numbers, use this field for the encoded account number.\n"
                                                        },
                                                        "encoderId": {
                                                            "type": "string",
                                                            "maxLength": 3,
                                                            "description": "Identifier for the bank that provided the customer\u2019s encoded account number.\n\nTo obtain the bank identifier, contact your processor. See \"Encoded Account Numbers,\" page 39.\n"
                                                        },
                                                        "checkNumber": {
                                                            "type": "string",
                                                            "maxLength": 8,
                                                            "description": "Check number.\n\nChase Paymentech Solutions - Optional.\nCyberSource ACH Service - Not used.\nRBS WorldPay Atlanta - Optional on debits. Required on credits.\nTeleCheck - Strongly recommended on debit requests. Optional on credits.\n"
                                                        },
                                                        "checkImageReferenceNumber": {
                                                            "type": "string",
                                                            "maxLength": 32,
                                                            "description": "Image reference number associated with the check. You cannot include any special characters.\n"
                                                        }
                                                    }
                                                },
                                                "routingNumber": {
                                                    "type": "string",
                                                    "maxLength": 9,
                                                    "description": "Bank routing number.\n\nThis is also called the transit number.\n"
                                                }
                                            }
                                        },
                                        "customer": {
                                            "type": "object",
                                            "properties": {
                                                "customerId": {
                                                    "type": "string",
                                                    "description": "Unique identifier for the customer's card and billing information.\n\nWhen you use Payment Tokenization or Recurring Billing and you include this value in\nyour request, many of the fields that are normally required for an authorization or credit\nbecome optional.\n\n**NOTE** When you use Payment Tokenization or Recurring Billing, the value for the Customer ID is actually the Cybersource payment token for a customer. This token stores information such as the consumer\u2019s card number so it can be applied towards bill payments, recurring payments, or one-time payments. By using this token in a payment API request, the merchant doesn't need to pass in data such as the card number or expiration date in the request itself.\n\nSee \"Payment Tokenization,\" page 222, and \"Recurring Billing,\" page 225.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 19,
                                                    "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                },
                                                "discountAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Total discount amount applied to the order.\n\nFor processor-specific information, see the order_discount_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "dutyAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Total charges for any import or export duties included in the order.\n\nFor processor-specific information, see the duty_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "Total tax amount for all the items in the order.\n\nFor processor-specific information, see the total_tax_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "nationalTaxIncluded": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates whether a national tax is included in the order total.\n\nPossible values:\n\n - **0**: national tax not included\n - **1**: national tax included\n\nFor processor-specific information, see the national_tax_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAppliedAfterDiscount": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates how the merchant manages discounts.\n\nPossible values:\n\n - **0**: no invoice level discount included\n - **1**: tax calculated on the postdiscount invoice total\n - **2**: tax calculated on the prediscount invoice total\n\nFor processor-specific information, see the order_discount_management_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAppliedLevel": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates how you calculate tax.\n\nPossible values:\n\n - **0**: net prices with tax calculated at line item level\n - **1**: net prices with tax calculated at invoice level\n - **2**: gross prices with tax provided at line item level\n - **3**: gross prices with tax provided at invoice level\n - **4**: no tax applies on the invoice for the transaction\n\nFor processor-specific information, see the tax_management_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxTypeCode": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "For tax amounts that can be categorized as one tax type.\n\nThis field contains the tax type code that corresponds to the entry in the _lineItems.taxAmount_ field.\n\nPossible values:\n\n - **056**: sales tax (U.S only)\n - **TX~**: all taxes (Canada only)   Note ~ = space.\n\nFor processor-specific information, see the total_tax_type_code field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "freightAmount": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Total freight or shipping and handling charges for the order. When you include this field in your request, you\nmust also include the **totalAmount** field.\n\nFor processor-specific information, see the freight_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "foreignAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Set this field to the converted amount that was returned by the DCC provider. See \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\nFor processor-specific information, see the foreign_amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "foreignCurrency": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Your customer\u2019s billing currency. See \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\nFor processor-specific information, see the foreign_currency field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "exchangeRate": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Exchange rate returned by the DCC service. Includes a decimal point and a maximum of 4 decimal places.\n\nFor details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n\nFor processor-specific information, see the exchange_rate field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "exchangeRateTimeStamp": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "Time stamp for the exchange rate. This value is returned by the DCC service.\n\nFormat: `YYYYMMDD~HH:MM`  where ~ denotes a space.\n\nFor processor-specific information, see the exchange_rate_timestamp field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "amexAdditionalAmounts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 3,
                                                                "description": "Additional amount type. This field is supported only for **American Express Direct**.\n\nFor processor-specific information, see the additional_amount_type field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "maxLength": 12,
                                                                "description": "Additional amount. This field is supported only for **American Express Direct**.\n\nFor processor-specific information, see the additional_amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "taxDetails": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "description": "This is used to determine what type of tax related data should be inclued under _taxDetails_ object.\n\nPossible values:\n - alternate\n - local\n - national\n - vat\n",
                                                                "enum": [
                                                                    "alternate",
                                                                    "local",
                                                                    "national",
                                                                    "vat"
                                                                ]
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "maxLength": 13,
                                                                "description": "Please see below table for related decription based on above _type_ field.\n\n| type      | type description |\n|-----------|--------------------|\n| alternate | Total amount of alternate tax for the order. |\n| local     | Sales tax for the order. |\n| national  | National tax for the order. |\n| vat       | Total amount of VAT or other tax included in the order. |\n| other     | Other tax. |\n"
                                                            },
                                                            "rate": {
                                                                "type": "string",
                                                                "maxLength": 6,
                                                                "description": "Rate of VAT or other tax for the order.\n\nExample 0.040 (=4%)\n\nValid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated)\n"
                                                            },
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 4,
                                                                "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                            },
                                                            "taxId": {
                                                                "type": "string",
                                                                "maxLength": 15,
                                                                "description": "Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value,\nincluding zero. You may send this field without sending alternate tax amount.\n"
                                                            },
                                                            "applied": {
                                                                "type": "boolean",
                                                                "description": "The tax is applied. Valid value is `true` or `false`."
                                                            },
                                                            "exemptionCode": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "description": "Code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not\nverify the value or modify it in any way before sending it to the processor.\n\nFor possible values, see Exemption Status Values. See Numbered Elements.\n\nImportant For information about using this field, see Item-Level Tax Fields.\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "serviceFeeAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Service fee. Required for service fee transactions.\n"
                                                },
                                                "originalCurrency": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Your local pricing currency code.\n\nFor the possible values, see the ISO Standard Currency Codes.\n\nFor details, see Dynamic Currency Conversion with a Third Party Provider.\n"
                                                }
                                            }
                                        },
                                        "billTo": {
                                            "type": "object",
                                            "properties": {
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s first name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**:\\\nThis field may be sent only for FDC Compass.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_firstname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s last name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\n**For Payouts** : This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the customer_lastname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "company": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "maxLength": 60,
                                                            "description": "Name of the customer\u2019s company.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the company_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                        },
                                                        "address1": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "First line in the street address of the company purchasing the product."
                                                        },
                                                        "address2": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "Additional address information for the company purchasing the product."
                                                        },
                                                        "locality": {
                                                            "type": "string",
                                                            "maxLength": 30,
                                                            "description": "City in the address of the company purchasing the product."
                                                        },
                                                        "administrativeArea": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "State or province in the address of the company purchasing the product. Use the State, Province, and Territory\nCodes for the United States and Canada.\n"
                                                        },
                                                        "postalCode": {
                                                            "type": "string",
                                                            "maxLength": 10,
                                                            "description": "Postal code in the address of the company purchasing the product. The postal code must consist of 5 to 9 digits.\n\nWhen the company country is the U.S., the 9-digit postal code must follow this format:\n**[5 digits][dash][4 digits]**\nExample 12345-6789\n\nWhen the company country is Canada, the 6-digit postal code must follow this format:\n**[alpha][numeric][alpha][space][numeric][alpha][numeric]**\nExample A1B 2C3\n"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "Country in the address of the company purchasing the product. Use the two-character ISO Standard Country Codes.\n"
                                                        }
                                                    }
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the billing street address as it appears on the credit card issuer\u2019s records.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_address1 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Additional address information.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**Atos**\nThis field must not contain colons (:).\n\n**Chase Paymentech Solutions, FDC Compass, and TSYS Acquiring Solutions**\nThis value is used for AVS.\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_address2 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the billing address.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the bill_city field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the billing address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_state field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**American Express Direct**\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the remaining value is longer than nine characters, truncates the value starting from the right side.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_zip field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Country of the billing address. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_country field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Customer's email address, including the full domain name.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_email field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Customer\u2019s phone number.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nCyberSource recommends that you include the country code when the order is from outside the U.S.\n\nFor processor-specific information, see the customer_phone field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n"
                                                }
                                            }
                                        },
                                        "shipTo": {
                                            "type": "object",
                                            "properties": {
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the shipping address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "description": "Country of the shipping address. Use the two-character ISO Standard Country Codes.",
                                                    "maxLength": 2
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the shipping address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\n**American Express Direct**\\\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the\nremaining value is longer than nine characters, truncates the value starting from the right side.\n"
                                                }
                                            }
                                        },
                                        "lineItems": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "productCode": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Type of product. This value is used to determine the category that the product is in: electronic, handling,\nphysical, service, or shipping. The default value is **default**.\nIf you are performing an authorization transaction (`processingOptions.capture` is set to `false`), and you set this field to a value other than default or any of the values related to\nshipping and handling, then the fields `quantity`, `productName`, and `productSku` are required.\nIt can also have a value of \"gift_card\".\n\nSee Appendix O, \"Product Codes,\" on page 373 for a list of valid values.\nFor a payment, when you set this field to a value other than default or any of the values related to\nshipping and handling, below fields _quantity_, _productName_, and _productSKU_ are required.\n"
                                                    },
                                                    "productName": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "For an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`),\nthis field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of\nthe other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "productSku": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Stock Keeping Unit (SKU) code for the product.\n\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when _orderInformation.lineItems[].productCode_ is not set to **default** or one of the other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "quantity": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 9999999999,
                                                        "description": "Number of units for this order.\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of the other values that are related to shipping and/or handling.\nWhen `orderInformation.lineItems[].productCode` is `gift_card`, this is the total count of individual prepaid gift cards purchased.\n",
                                                        "default": 1
                                                    },
                                                    "unitPrice": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you\ncannot include any other special characters. CyberSource truncates the amount to the correct number of decimal\nplaces.\n\nFor processor-specific information, see the amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n- Table 12, \"Authorization Information for Specific Processors,\" on page 36\n- Table 16, \"Capture Information for Specific Processors,\" on page 51\n- Table 20, \"Credit Information for Specific Processors,\" on page 65\n\n**DCC for First Data**\\\nThis value is the original amount in your local currency. You must include this field. You cannot use grand_total_amount. See \"Dynamic Currency Conversion for First Data,\" page 113.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 12, \"Authorization Information for Specific Processors,\" on page 36.\n\n**Zero Amount Authorizations**\\\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 220.\n"
                                                    },
                                                    "unitOfMeasure": {
                                                        "type": "string",
                                                        "maxLength": 12,
                                                        "description": "Unit of measure, or unit of measure code, for the item.\n"
                                                    },
                                                    "totalAmount": {
                                                        "type": "string",
                                                        "maxLength": 13,
                                                        "description": "Total amount for the item. Normally calculated as the unit price x quantity.\n\nWhen orderInformation.lineItems[].productCode is \"gift_card\", this is the purchase amount total\nfor prepaid gift cards in major units. Example: 123.45 USD= 123\n"
                                                    },
                                                    "taxAmount": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Total tax to apply to the product. This value cannot be negative. The tax amount and the offer amount must\nbe in the same currency. The tax amount field is additive.\n\nThe following example uses a two-exponent currency such as USD:\n\n 1. You include each line item in your request.\n ..- 1st line item has amount=10.00, quantity=1, and taxAmount=0.80\n ..- 2nd line item has amount=20.00, quantity=1, and taxAmount=1.60\n 2. The total amount authorized will be 32.40, not 30.00 with 2.40 of tax included.\n\nIf you want to include the tax amount and also request the ics_tax service, see Tax Calculation Service Using the SCMP API.\n\nThis field is frequently used for Level II and Level III transactions. See Level II and Level III Processing Using the SCMP API.\n"
                                                    },
                                                    "taxRate": {
                                                        "type": "string",
                                                        "maxLength": 7,
                                                        "description": "Tax rate applied to the item. See \"Numbered Elements,\" page 14.\n\nVisa: Valid range is 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated).\n\nMastercard: Valid range is 0.00001 to 0.99999 (0.001% to 99.999%).\n"
                                                    },
                                                    "taxAppliedAfterDiscount": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Flag to indicate how you handle discount at the line item level.\n\n - 0: no line level discount provided\n - 1: tax was calculated on the post-discount line item total\n - 2: tax was calculated on the pre-discount line item total\n\n`Note` Visa will inset 0 (zero) if an invalid value is included in this field.\n\nThis field relates to the value in the _lineItems[].discountAmount_ field.\n"
                                                    },
                                                    "taxStatusIndicator": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Flag to indicate whether tax is exempted or not included.\n\n - 0: tax not included\n - 1: tax included\n - 2: transaction is not subject to tax\n"
                                                    },
                                                    "taxTypeCode": {
                                                        "type": "string",
                                                        "maxLength": 4,
                                                        "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                    },
                                                    "amountIncludesTax": {
                                                        "type": "boolean",
                                                        "description": "Flag that indicates whether the tax amount is included in the Line Item Total.\n\nPossible values:\n - **true**\n - **false**\n",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "typeOfSupply": {
                                                        "type": "string",
                                                        "maxLength": 2,
                                                        "description": "Flag to indicate whether the purchase is categorized as goods or services.\nPossible values:\n\n - 00: goods\n - 01: services\n"
                                                    },
                                                    "commodityCode": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Commodity code or International description code used to classify the item. Contact your acquirer for a list of\ncodes.\n"
                                                    },
                                                    "discountAmount": {
                                                        "type": "string",
                                                        "maxLength": 13,
                                                        "description": "Discount applied to the item."
                                                    },
                                                    "discountApplied": {
                                                        "type": "boolean",
                                                        "description": "Flag that indicates whether the amount is discounted.\n\nIf you do not provide a value but you set Discount Amount to a value greater than zero, then CyberSource sets\nthis field to **true**.\n\nPossible values:\n - **true**\n - **false**\n",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "discountRate": {
                                                        "type": "string",
                                                        "maxLength": 6,
                                                        "description": "Rate the item is discounted. Maximum of 2 decimal places.\n\nExample 5.25 (=5.25%)\n"
                                                    },
                                                    "invoiceNumber": {
                                                        "type": "string",
                                                        "maxLength": 23,
                                                        "description": "Field to support an invoice number for a transaction. You must specify the number of line items that will\ninclude an invoice number. By default, the first line item will include an invoice number field. The invoice\nnumber field can be included for up to 10 line items.\n"
                                                    },
                                                    "taxDetails": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "description": "This is used to determine what type of tax related data should be inclued under _taxDetails_ object.\n\nPossible values:\n - alternate\n - local\n - national\n - vat\n",
                                                                    "enum": [
                                                                        "alternate",
                                                                        "local",
                                                                        "national",
                                                                        "vat"
                                                                    ]
                                                                },
                                                                "amount": {
                                                                    "type": "string",
                                                                    "maxLength": 13,
                                                                    "description": "Please see below table for related decription based on above _type_ field.\n\n| type      | type description |\n|-----------|--------------------|\n| alternate | Total amount of alternate tax for the order. |\n| local     | Sales tax for the order. |\n| national  | National tax for the order. |\n| vat       | Total amount of VAT or other tax included in the order. |\n| other     | Other tax. |\n"
                                                                },
                                                                "rate": {
                                                                    "type": "string",
                                                                    "maxLength": 6,
                                                                    "description": "Rate of VAT or other tax for the order.\n\nExample 0.040 (=4%)\n\nValid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated)\n"
                                                                },
                                                                "code": {
                                                                    "type": "string",
                                                                    "maxLength": 4,
                                                                    "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                                },
                                                                "taxId": {
                                                                    "type": "string",
                                                                    "maxLength": 15,
                                                                    "description": "Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value,\nincluding zero. You may send this field without sending alternate tax amount.\n"
                                                                },
                                                                "applied": {
                                                                    "type": "boolean",
                                                                    "description": "The tax is applied. Valid value is `true` or `false`."
                                                                },
                                                                "exemptionCode": {
                                                                    "type": "string",
                                                                    "maxLength": 1,
                                                                    "description": "Code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not\nverify the value or modify it in any way before sending it to the processor.\n\nFor possible values, see Exemption Status Values. See Numbered Elements.\n\nImportant For information about using this field, see Item-Level Tax Fields.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "invoiceDetails": {
                                            "type": "object",
                                            "properties": {
                                                "purchaseOrderNumber": {
                                                    "type": "string",
                                                    "maxLength": 25,
                                                    "description": "Value used by your customer to identify the order. This value is typically a purchase order number. CyberSource\nrecommends that you do not populate the field with all zeros or nines.\n\nFor processor-specific information, see the user_po field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "purchaseOrderDate": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Date the order was processed. `Format: YYYY-MM-DD`.\n\nFor processor-specific information, see the purchaser_order_date field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "purchaseContactName": {
                                                    "type": "string",
                                                    "maxLength": 36,
                                                    "description": "The name of the individual or the company contacted for company authorized purchases.\n\nFor processor-specific information, see the authorized_contact_name field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxable": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether an order is taxable. This value must be true if the sum of all _lineItems[].taxAmount_ values > 0.\n\nIf you do not include any _lineItems[].taxAmount_ values in your request, CyberSource does not include\n_invoiceDetails.taxable_ in the data it sends to the processor.\n\nFor processor-specific information, see the tax_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n\nPossible values:\n - **true**\n - **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                },
                                                "vatInvoiceReferenceNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "VAT invoice number associated with the transaction.\n\nFor processor-specific information, see the vat_invoice_ref_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "commodityCode": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "International description code of the overall order\u2019s goods or services or the Categorizes purchases for VAT\nreporting. Contact your acquirer for a list of codes.\n\nFor processor-specific information, see the summary_commodity_code field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "transactionAdviceAddendum": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "data": {
                                                                "type": "string",
                                                                "maxLength": 40,
                                                                "description": "Four Transaction Advice Addendum (TAA) fields. These fields are used to display descriptive information\nabout a transaction on the customer\u2019s American Express card statement. When you send TAA fields, start\nwith amexdata_taa1, then ...taa2, and so on. Skipping a TAA field causes subsequent TAA fields to be\nignored.\n\nTo use these fields, contact CyberSource Customer Support to have your account enabled for this feature.\n"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "shippingDetails": {
                                            "type": "object",
                                            "properties": {
                                                "shipFromPostalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the address from which the goods are shipped, which is used to establish nexus. The default is\nthe postal code associated with your CyberSource account.\n\nThe postal code must consist of 5 to 9 digits. When the billing country is the U.S., the 9-digit postal code\nmust follow this format:\n\n`[5 digits][dash][4 digits]`\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n\n`[alpha][numeric][alpha][space] [numeric][alpha][numeric]`\n\nExample A1B 2C3\n\nThis field is frequently used for Level II and Level III transactions.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantCustomerId": {
                                            "type": "string",
                                            "maxLength": 100,
                                            "description": "Your identifier for the customer.\n\nWhen a subscription or customer profile is being created, the maximum length for this field for most processors is 30. Otherwise, the maximum length is 100.\n\n**Comercio Latino**\\\nFor recurring payments in Mexico, the value is the customer\u2019s contract number.\nNote Before you request the authorization, you must inform the issuer of the customer contract numbers that will be used for recurring transactions.\n\n**Litle**\\\nFor a follow-on credit with Litle, CyberSource checks the following locations, in the order\ngiven, for a customer account ID value and uses the first value it finds:\n1. `customer_account_id` value in the follow-on credit request\n2. Customer account ID value that was used for the capture that is being credited\n3. Customer account ID value that was used for the original authorization\nIf a customer account ID value cannot be found in any of these locations, then no value is used.\n\nFor processor-specific information, see the customer_account_id field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Customer\u2019s government-assigned tax identification number.\n\nFor processor-specific information, see the purchaser_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        }
                                    }
                                },
                                "deviceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "hostName": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Host name reported by the customer\u2019s browser to your Web server identified via the HTTP header."
                                        },
                                        "ipAddress": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Customer\u2019s IP address, such as 10.1.27.63, reported by your Web server via socket information.\n"
                                        },
                                        "userAgent": {
                                            "type": "string",
                                            "maxLength": 40,
                                            "description": "Customer\u2019s browser as identified from the HTTP header data. For example, Mozilla is the value that identifies\nthe Netscape browser.\n"
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nFor Payouts:\n* Paymentech (22)\n"
                                                },
                                                "alternateName": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n* FDCCompass (13)\n* Paymentech (13)\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Merchant City. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Merchant State. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        },
                                        "categoryCode": {
                                            "type": "integer",
                                            "maximum": 9999,
                                            "description": "Four-digit number that the payment card industry uses to classify merchants into market segments. Visa assigned\none or more of these values to your business when you started accepting Visa cards.\n\nIf you do not include this field in your request, CyberSource uses the value in your CyberSource account.\n\nFor processor-specific information, see the merchant_category_code field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR4\n- Position: 150-153\n- Field: Merchant Category Code\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 21,
                                            "description": "Your government-assigned tax identification number.\n\nFor CtV processors, the maximum length is 20.\n\nFor other processor-specific information, see the merchant_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "cardAcceptorReferenceNumber": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Reference number that facilitates card acceptor/corporation communication and record keeping.\n\nFor processor-specific information, see the card_acceptor_ref_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "taxId": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Your Cadastro Nacional da Pessoa Jur\u00eddica (CNPJ) number.\n\nThis field is supported only for BNDES transactions on CyberSource through VisaNet. See BNDES.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR6\n- Position: 40-59\n- Field: BNDES Reference Field 1\n"
                                        }
                                    }
                                },
                                "aggregatorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "aggregatorId": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Value that identifies you as a payment aggregator. Get this value from the\nprocessor.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR6\n- Position: 95-105\n- Field: MasterCard Payment Facilitator ID\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nccAuthService\\\n**American Express Direct**: R for all aggregator transactions.\\\n**CyberSource through VisaNet**: R for Mastercard aggregator transactions and for American Express aggregator authorizations; otherwise, not used.\\\n**FDC Compass**: R for all aggregator transactions.\\\n**FDC Nashville Global**: R for all aggregator transactions.\n\nFor processor-specific information, see the aggregator_id field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "name": {
                                            "type": "string",
                                            "maxLength": 37,
                                            "description": "Your payment aggregator business name.\n\n**American Express Direct**\\\nThe maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters.\\\n\n**CyberSource through VisaNet**\\\nWith American Express, the maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nFor processor-specific information, see the aggregator_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "subMerchant": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 37,
                                                    "description": "Sub-merchant\u2019s business name.\n\n**American Express Direct**\\\nThe maximum length of the sub-merchant name depends on the length of the aggregator name. The combined length for both values must not exceed 36 characters.\n\n**CyberSource through VisaNet**\\\nWith American Express, the maximum length of the sub-merchant name depends on the length of the aggregator name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\n**FDC Nashville Global**\\\nWith Mastercard, the maximum length of the sub-merchant name depends on the length of the aggregator name:\n- If aggregator name length is 1 through 3, maximum sub-merchant name length is 21.\n- If aggregator name length is 4 through 7, maximum sub-merchant name length is 17.\n- If aggregator name length is 8 through 12, maximum sub-merchant name length is 12.\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 38,
                                                    "description": "First line of the sub-merchant\u2019s street address.\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 21,
                                                    "description": "Sub-merchant\u2019s city.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nFor details, see \"Aggregator Support,\" page 100.\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s state or province. Use the State, Province, and Territory Codes for the United States and Canada.\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Partial postal code for the sub-merchant\u2019s address.\n\nSee \"Aggregator Support,\" page 100 for details.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s country. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nSee \"Aggregator Support,\" page 101.\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 40,
                                                    "description": "Sub-merchant\u2019s email address.\n\n**Maximum length for processors**\n\n - American Express Direct: 40\n - CyberSource through VisaNet: 40\n - FDC Compass: 40\n - FDC Nashville Global: 19\n\n**CyberSource through VisaNet**\\\nWith American Express, the value for this field corresponds to the following data in the TC 33 capture file:\n- Record: CP01 TCRB\n- Position: 25-64\n- Field: American Express Seller E-mail Address\n\n**Note** The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant\u2019s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies.\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Sub-merchant\u2019s telephone number.\n\n**Maximum length for procesors**\n\n - American Express Direct: 20\n - CyberSource through VisaNet: 20\n - FDC Compass: 13\n - FDC Nashville Global: 10\n\n**CyberSource through VisaNet**\\\nWith American Express, the value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCRB\n- Position: 5-24\n- Field: American Express Seller Telephone Number\n\n**FDC Compass**\\\nThis value must consist of uppercase characters. Use one of these recommended formats:\\\n`NNN-NNN-NNNN`\\\n`NNN-AAAAAAA`\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "emv": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "maxLength": 1998,
                                                    "description": "EMV data that is transmitted from the chip card to the issuer, and from the issuer to the chip card. The EMV\ndata is in the tag-length-value format and includes chip card tags, terminal tags, and transaction detail tags.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10. For information about the individual tags, see the \u201cApplication Specification\u201d section in the EMV 4.3 Specifications: http://emvco.com\n\n**Important** The following tags contain sensitive information and **must not** be included in this field:\n\n - **56**: Track 1 equivalent data\n - **57**: Track 2 equivalent data\n - **5A**: Application PAN\n - **5F20**: Cardholder name\n - **5F24**: Application expiration date (This sensitivity has been relaxed for cmcic, amexdirect, fdiglobal, opdfde, and six)\n - **99**: Transaction PIN\n - **9F0B**: Cardholder name (extended)\n - **9F1F**: Track 1 discretionary data\n - **9F20**: Track 2 discretionary data\n\nFor captures, this field is required for contact EMV transactions. Otherwise, it is optional.\n\nFor credits, this field is required for contact EMV stand-alone credits and contactless EMV stand-alone credits.\nOtherwise, it is optional.\n\n**Important** For contact EMV captures, contact EMV stand-alone credits, and contactless EMV stand-alone credits,\nyou must include the following tags in this field. For all other types of EMV transactions, the following tags\nare optional.\n\n - **95**: Terminal verification results\n - **9F10**: Issuer application data\n - **9F26**: Application cryptogram\n"
                                                },
                                                "fallback": {
                                                    "type": "boolean",
                                                    "maxLength": 5,
                                                    "description": "Indicates whether a fallback method was used to enter credit card information into the POS terminal. When a\ntechnical problem prevents a successful exchange of information between a chip card and a chip-capable terminal:\n\n 1. Swipe the card or key the credit card information into the POS terminal.\n 2. Use the pointOfSaleInformation.entryMode field to indicate whether the information was swiped or keyed.\n\nPossible values:\n - **true**\n - **false** (default)\n\nThis field is supported only on **Chase Paymentech Solutions** and **GPN**.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "merchantDefinedInformation": {
                                    "type": "array",
                                    "description": "The description for this field is not available.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "maxLength": 50,
                                                "description": "The name you assign for your merchant-defined data field.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].key and\nmerchantDefinedInformation[1].key for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n"
                                            },
                                            "value": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "The value you assign for your merchant-defined data field.\n\n**Warning** Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields. Personally identifying information includes, but is not\nlimited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV,\nCVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].value and\nmerchantDefinedInformation[1].value for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n\nFor installment payments with Mastercard in Brazil:\n- The value for merchantDefinedInformation[0].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 25-44\n  - Field: Reference Field 2\n- The value for merchantDefinedInformation[1].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 45-64\n  - Field: Reference Field 3\n"
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "Testing-VDP-Payments-Refund"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "totalAmount": "102.21",
                                        "currency": "USD"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The capture ID. This ID is returned from a previous capture request.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2CapturesRefundsPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        },
                                        "void": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - PENDING\n",
                                    "enum": [
                                        "PENDING"
                                    ]
                                },
                                "reconciliationId": {
                                    "type": "string",
                                    "maxLength": 60,
                                    "description": "The reconciliation id for the submitted transaction. This value is not returned for all processors.\n"
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "refundAmountDetails": {
                                    "type": "object",
                                    "properties": {
                                        "refundAmount": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Total amount of the refund."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                        }
                                    }
                                },
                                "processorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "transactionId": {
                                            "type": "string",
                                            "maxLength": 18,
                                            "description": "Processor transaction ID.\n\nThis value identifies the transaction on a host system. This value is supported only for Moneris. It contains\nthis information:\n\n - Terminal used to process the transaction\n - Shift during which the transaction took place\n - Batch number\n - Transaction number within the batch\n\nYou must store this value. If you give the customer a receipt, display this value on the receipt.\n\nExample For the value 66012345001069003:\n\n - Terminal ID = 66012345\n - Shift number = 001\n - Batch number = 069\n - Transaction number = 003\n"
                                        },
                                        "forwardedAcquirerCode": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Name of the Japanese acquirer that processed the transaction. Returned only for CCS (CAFIS) and JCN Gateway.\nPlease contact the CyberSource Japan Support Group for more information.\n"
                                        },
                                        "merchantNumber": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Identifier that was assigned to you by your acquirer.\n\nThis value must be printed on the receipt.\n\nThis field is supported only on **American Express Direct**, **FDC Nashville Global**, and **SIX**.\n"
                                        },
                                        "responseCode": {
                                            "type": "string",
                                            "maxLength": 10,
                                            "description": "For most processors, this is the error message sent directly from the bank. Returned only when the processor\nreturns this value.\n\nImportant Do not use this field to evaluate the result of the authorization.\n"
                                        },
                                        "achVerification": {
                                            "type": "object",
                                            "properties": {
                                                "resultCode": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Results from the ACH verification service, which is described in \"ACH Verification,\" page 25. For the possible\nvalues, see Appendix H, \"Verification Codes,\" on page 91.\n"
                                                },
                                                "resultCodeRaw": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Raw results from the ACH verification service, which is described in \"ACH Verification,\" page 25. For the\npossible values, see Appendix H, \"Verification Codes,\" on page 91.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "invoiceDetails": {
                                            "type": "object",
                                            "properties": {
                                                "level3TransmissionStatus": {
                                                    "type": "boolean",
                                                    "description": "Indicates whether CyberSource sent the Level III information to the processor. The possible values are:\n\nIf your account is not enabled for Level III data or if you did not include the purchasing level field in your\nrequest, CyberSource does not include the Level III data in the request sent to the processor.\n\nFor processor-specific information, see the bill_purchasing_level3_enabled field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n\nPossible values:\n- **true**\n- **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/refunds/4963014779006178301545",
                                        "method": "GET"
                                    },
                                    "void": {
                                        "href": "/pts/v2/refunds/4963014779006178301545/voids",
                                        "method": "POST"
                                    }
                                },
                                "id": "4963014779006178301545",
                                "submitTimeUtc": "2017-06-01T071757Z",
                                "status": "200",
                                "reconciliationId": "39571012D3DFEKS0",
                                "statusInformation": {
                                    "reason": "SUCCESS",
                                    "message": "Successful transaction."
                                },
                                "clientReferenceInformation": {
                                    "code": "Testing-VDP-Payments-Refund"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "currency": "USD"
                                    }
                                },
                                "refundAmountDetails": {
                                    "currency": "USD",
                                    "refundAmount": "102.21"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "type": "object",
                            "title": "ptsV2CapturesRefundsPost400Response",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_CARD\n - INVALID_MERCHANT_CONFIGURATION\n - INVALID_AMOUNT\n - CAPTURE_ALREADY_VOIDED\n - ACCOUNT_NOT_ALLOWED_CREDIT\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_CARD",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "CAPTURE_ALREADY_VOIDED",
                                        "ACCOUNT_NOT_ALLOWED_CREDIT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2CapturesRefundsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Refund a Capture",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC50171_3"
                            },
                            "orderInformation": {
                                "amountDetails": {
                                    "totalAmount": "102.21",
                                    "currency": "USD"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v2/credits/": {
            "post": {
                "summary": "Process a Credit",
                "description": "POST to the credit resource to credit funds to a specified credit card.",
                "tags": [
                    "credit"
                ],
                "operationId": "createCredit",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "createCreditRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "transactionId": {
                                            "type": "string",
                                            "description": "Identifier that you assign to the transaction.\n\n**Note** Use this field only if you want to support merchant-initiated reversal and void operations.\n\nSee page 250 on [Merchant-Initiated Reversals and Voids.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SO_API/Credit_Cards_SO_API.pdf)\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "originalTransactionId": {
                                                    "type": "string",
                                                    "maxLength": 32,
                                                    "description": "Value that links the previous transaction to the current follow-on request. This value is assigned by the client\nsoftware that is installed on the POS terminal, which makes it available to the terminal\u2019s software and to\nCyberSource. Therefore, you can use this value to reconcile transactions between CyberSource and the terminal\u2019s\nsoftware.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                },
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "commerceIndicator": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Type of transaction. Some payment card companies use this information when determining discount rates. When you\nomit this field for **Ingenico ePayments**, the processor uses the default transaction type they have on file\nfor you instead of the default value listed here.\n"
                                        },
                                        "processorId": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Value that identifies the processor/acquirer to use for the transaction. This value is supported only for\n**CyberSource through VisaNet**.\n\nContact CyberSource Customer Support to get the value for this field.\n"
                                        },
                                        "paymentSolution": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Type of digital payment solution for the transaction. Possible Values:\n\n - **visacheckout**: Visa Checkout. This value is required for Visa Checkout transactions. See Visa Checkout Using the SCMP API.\n - **005**: Masterpass. This value is required for Masterpass transactions on OmniPay Direct. See \"Masterpass,\" page 153.\n"
                                        },
                                        "reconciliationId": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Please check with Cybersource customer support to see if your merchant account is configured correctly so you\ncan include this field in your request.\n* For Payouts: max length for FDCCompass is String (22).\n"
                                        },
                                        "linkId": {
                                            "type": "string",
                                            "maxLength": 26,
                                            "description": "Value that links the current authorization request to the original authorization request. Set this value\nto the ID that was returned in the reply message from the original authorization request.\n\nThis value is used for:\n\n - Partial authorizations: See \"Partial Authorizations,\" page 88.\n - Split shipments: See \"Split Shipments,\" page 210.\n"
                                        },
                                        "reportGroup": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Attribute that lets you define custom grouping for your processor reports. This field is supported only for **Worldpay VAP**.\n\nSee \"Report Groups,\" page 234.\n"
                                        },
                                        "visaCheckoutId": {
                                            "type": "string",
                                            "maxLength": 48,
                                            "description": "Identifier for the **Visa Checkout** order. Visa Checkout provides a unique order ID for every transaction in\nthe Visa Checkout **callID** field.\n\nFor more details, see Visa Checkout Using the SCMP API.\n"
                                        },
                                        "purchaseLevel": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Set this field to 3 to indicate that the request includes Level III data."
                                        },
                                        "recurringOptions": {
                                            "type": "object",
                                            "properties": {
                                                "loanPayment": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether this is a payment towards an existing contractual loan.\n\nPossible values:\n- **true** Loan payment\n- **false** (default) Not a loan payment\n\nSee \"Visa Debt Repayments,\" page 218, for a list of processors that support this feature.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                }
                                            }
                                        },
                                        "bankTransferOptions": {
                                            "type": "object",
                                            "properties": {
                                                "customerMemo": {
                                                    "type": "string",
                                                    "maxLength": 80,
                                                    "description": "Payment related information.\n\nThis information is included on the customer\u2019s statement.\n"
                                                },
                                                "secCode": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Authorization method used for the transaction. See \"SEC Codes,\" page 89.\n\nTeleCheck Accepts only the following values:\n- **PPD**\n- **TEL**\n- **WEB**\n"
                                                },
                                                "terminalCity": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "City in which the terminal is located. If more than four alphanumeric characters are submitted, the transaction\nwill be declined.\n\nYou cannot include any special characters.\n"
                                                },
                                                "terminalState": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State in which the terminal is located. If more than two alphanumeric characters are submitted, the transaction\nwill be declined.\n\nYou cannot include any special characters.\n"
                                                },
                                                "effectiveDate": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Effective date for the transaction. The effective date must be within 45 days of the current day. If you do not\ninclude this value, CyberSource sets the effective date to the next business day.\n\nFormat: `MMDDYYYY`\n\nSupported only for the CyberSource ACH Service.\n"
                                                },
                                                "partialPaymentId": {
                                                    "type": "string",
                                                    "maxLength": 25,
                                                    "description": "Identifier for a partial payment or partial credit.\n\nThe value for each debit request or credit request must be unique within the scope of the order. See \"Multiple\nPartial Credits,\" page 41.\n"
                                                },
                                                "settlementMethod": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Method used for settlement.\n\nPossible values:\n- **A**: Automated Clearing House (default for credits and for transactions using Canadian dollars)\n- **F**: Facsimile draft (U.S. dollars only)\n- **B**: Best possible (U.S. dollars only) (default if the field has not already been configured for your\nmerchant ID)\n\nSee \"Settlement Delivery Methods,\" page 44.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "paymentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "The customer\u2019s payment card number, also knows as the Primary Account Nunmber (PAN). You can also use this field\nfor encoded account numbers.\n\nFor processor-specific information, see the `customer_cc_number` field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Two-digit month in which the payment card expires.\n\nFormat: `MM`.\n\nValid values: `01` through `12`.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`01` through `12`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `12`.\n\nFor processor-specific information, see the `customer_cc_expmo` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Four-digit year in which the credit card expires.\n\nFormat: `YYYY`.\n\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`1900` through `3000`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**FDC Nashville Global and FDMS South**\\\nYou can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `2021`.\n\nFor processor-specific information, see the `customer_cc_expyr` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                },
                                                "accountEncoderId": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Identifier for the issuing bank that provided the customer\u2019s encoded account number. Contact your processor for the bank\u2019s ID.\n"
                                                },
                                                "issueNumber": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder. The card might or might not have an issue number. The number can consist of one or two digits, and the first digit might be a zero. When you include this value in your request, include exactly what is printed on the card. A value of 2 is different than a value of 02. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card.\n\n**Note** The issue number is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "startMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Month of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: MM`. Possible values: 01 through 12.\n\n**Note** The start date is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "startYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Year of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: YYYY`.\n\n**Note** The start date is not required for Maestro (UK Domestic) transactions.\n"
                                                }
                                            }
                                        },
                                        "bank": {
                                            "type": "object",
                                            "properties": {
                                                "account": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "maxLength": 1,
                                                            "description": "Account type.\n\nPossible values:\n - **C**: Checking.\n - **G**: General ledger. This value is supported only on Wells Fargo ACH.\n - **S**: Savings (U.S. dollars only).\n - **X**: Corporate checking (U.S. dollars only).\n"
                                                        },
                                                        "number": {
                                                            "type": "string",
                                                            "maxLength": 17,
                                                            "description": "Account number.\n\nWhen processing encoded account numbers, use this field for the encoded account number.\n"
                                                        },
                                                        "encoderId": {
                                                            "type": "string",
                                                            "maxLength": 3,
                                                            "description": "Identifier for the bank that provided the customer\u2019s encoded account number.\n\nTo obtain the bank identifier, contact your processor. See \"Encoded Account Numbers,\" page 39.\n"
                                                        },
                                                        "checkNumber": {
                                                            "type": "string",
                                                            "maxLength": 8,
                                                            "description": "Check number.\n\nChase Paymentech Solutions - Optional.\nCyberSource ACH Service - Not used.\nRBS WorldPay Atlanta - Optional on debits. Required on credits.\nTeleCheck - Strongly recommended on debit requests. Optional on credits.\n"
                                                        },
                                                        "checkImageReferenceNumber": {
                                                            "type": "string",
                                                            "maxLength": 32,
                                                            "description": "Image reference number associated with the check. You cannot include any special characters.\n"
                                                        }
                                                    }
                                                },
                                                "routingNumber": {
                                                    "type": "string",
                                                    "maxLength": 9,
                                                    "description": "Bank routing number.\n\nThis is also called the transit number.\n"
                                                }
                                            }
                                        },
                                        "customer": {
                                            "type": "object",
                                            "properties": {
                                                "customerId": {
                                                    "type": "string",
                                                    "description": "Unique identifier for the customer's card and billing information.\n\nWhen you use Payment Tokenization or Recurring Billing and you include this value in\nyour request, many of the fields that are normally required for an authorization or credit\nbecome optional.\n\n**NOTE** When you use Payment Tokenization or Recurring Billing, the value for the Customer ID is actually the Cybersource payment token for a customer. This token stores information such as the consumer\u2019s card number so it can be applied towards bill payments, recurring payments, or one-time payments. By using this token in a payment API request, the merchant doesn't need to pass in data such as the card number or expiration date in the request itself.\n\nSee \"Payment Tokenization,\" page 222, and \"Recurring Billing,\" page 225.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 19,
                                                    "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                },
                                                "discountAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Total discount amount applied to the order.\n\nFor processor-specific information, see the order_discount_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "dutyAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Total charges for any import or export duties included in the order.\n\nFor processor-specific information, see the duty_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "Total tax amount for all the items in the order.\n\nFor processor-specific information, see the total_tax_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "nationalTaxIncluded": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates whether a national tax is included in the order total.\n\nPossible values:\n\n - **0**: national tax not included\n - **1**: national tax included\n\nFor processor-specific information, see the national_tax_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAppliedAfterDiscount": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates how the merchant manages discounts.\n\nPossible values:\n\n - **0**: no invoice level discount included\n - **1**: tax calculated on the postdiscount invoice total\n - **2**: tax calculated on the prediscount invoice total\n\nFor processor-specific information, see the order_discount_management_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxAppliedLevel": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Flag that indicates how you calculate tax.\n\nPossible values:\n\n - **0**: net prices with tax calculated at line item level\n - **1**: net prices with tax calculated at invoice level\n - **2**: gross prices with tax provided at line item level\n - **3**: gross prices with tax provided at invoice level\n - **4**: no tax applies on the invoice for the transaction\n\nFor processor-specific information, see the tax_management_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxTypeCode": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "For tax amounts that can be categorized as one tax type.\n\nThis field contains the tax type code that corresponds to the entry in the _lineItems.taxAmount_ field.\n\nPossible values:\n\n - **056**: sales tax (U.S only)\n - **TX~**: all taxes (Canada only)   Note ~ = space.\n\nFor processor-specific information, see the total_tax_type_code field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "freightAmount": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Total freight or shipping and handling charges for the order. When you include this field in your request, you\nmust also include the **totalAmount** field.\n\nFor processor-specific information, see the freight_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "foreignAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Set this field to the converted amount that was returned by the DCC provider. See \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\nFor processor-specific information, see the foreign_amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "foreignCurrency": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Your customer\u2019s billing currency. See \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\nFor processor-specific information, see the foreign_currency field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "exchangeRate": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Exchange rate returned by the DCC service. Includes a decimal point and a maximum of 4 decimal places.\n\nFor details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n\nFor processor-specific information, see the exchange_rate field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "exchangeRateTimeStamp": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "Time stamp for the exchange rate. This value is returned by the DCC service.\n\nFormat: `YYYYMMDD~HH:MM`  where ~ denotes a space.\n\nFor processor-specific information, see the exchange_rate_timestamp field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "amexAdditionalAmounts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 3,
                                                                "description": "Additional amount type. This field is supported only for **American Express Direct**.\n\nFor processor-specific information, see the additional_amount_type field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "maxLength": 12,
                                                                "description": "Additional amount. This field is supported only for **American Express Direct**.\n\nFor processor-specific information, see the additional_amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "taxDetails": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "description": "This is used to determine what type of tax related data should be inclued under _taxDetails_ object.\n\nPossible values:\n - alternate\n - local\n - national\n - vat\n",
                                                                "enum": [
                                                                    "alternate",
                                                                    "local",
                                                                    "national",
                                                                    "vat"
                                                                ]
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "maxLength": 13,
                                                                "description": "Please see below table for related decription based on above _type_ field.\n\n| type      | type description |\n|-----------|--------------------|\n| alternate | Total amount of alternate tax for the order. |\n| local     | Sales tax for the order. |\n| national  | National tax for the order. |\n| vat       | Total amount of VAT or other tax included in the order. |\n| other     | Other tax. |\n"
                                                            },
                                                            "rate": {
                                                                "type": "string",
                                                                "maxLength": 6,
                                                                "description": "Rate of VAT or other tax for the order.\n\nExample 0.040 (=4%)\n\nValid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated)\n"
                                                            },
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 4,
                                                                "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                            },
                                                            "taxId": {
                                                                "type": "string",
                                                                "maxLength": 15,
                                                                "description": "Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value,\nincluding zero. You may send this field without sending alternate tax amount.\n"
                                                            },
                                                            "applied": {
                                                                "type": "boolean",
                                                                "description": "The tax is applied. Valid value is `true` or `false`."
                                                            },
                                                            "exemptionCode": {
                                                                "type": "string",
                                                                "maxLength": 1,
                                                                "description": "Code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not\nverify the value or modify it in any way before sending it to the processor.\n\nFor possible values, see Exemption Status Values. See Numbered Elements.\n\nImportant For information about using this field, see Item-Level Tax Fields.\n"
                                                            }
                                                        }
                                                    }
                                                },
                                                "serviceFeeAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Service fee. Required for service fee transactions.\n"
                                                },
                                                "originalCurrency": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Your local pricing currency code.\n\nFor the possible values, see the ISO Standard Currency Codes.\n\nFor details, see Dynamic Currency Conversion with a Third Party Provider.\n"
                                                }
                                            }
                                        },
                                        "billTo": {
                                            "type": "object",
                                            "properties": {
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s first name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**:\\\nThis field may be sent only for FDC Compass.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_firstname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s last name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\n**For Payouts** : This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the customer_lastname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "company": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "maxLength": 60,
                                                            "description": "Name of the customer\u2019s company.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the company_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                        },
                                                        "address1": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "First line in the street address of the company purchasing the product."
                                                        },
                                                        "address2": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "Additional address information for the company purchasing the product."
                                                        },
                                                        "locality": {
                                                            "type": "string",
                                                            "maxLength": 30,
                                                            "description": "City in the address of the company purchasing the product."
                                                        },
                                                        "administrativeArea": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "State or province in the address of the company purchasing the product. Use the State, Province, and Territory\nCodes for the United States and Canada.\n"
                                                        },
                                                        "postalCode": {
                                                            "type": "string",
                                                            "maxLength": 10,
                                                            "description": "Postal code in the address of the company purchasing the product. The postal code must consist of 5 to 9 digits.\n\nWhen the company country is the U.S., the 9-digit postal code must follow this format:\n**[5 digits][dash][4 digits]**\nExample 12345-6789\n\nWhen the company country is Canada, the 6-digit postal code must follow this format:\n**[alpha][numeric][alpha][space][numeric][alpha][numeric]**\nExample A1B 2C3\n"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "Country in the address of the company purchasing the product. Use the two-character ISO Standard Country Codes.\n"
                                                        }
                                                    }
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the billing street address as it appears on the credit card issuer\u2019s records.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_address1 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Additional address information.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**Atos**\nThis field must not contain colons (:).\n\n**Chase Paymentech Solutions, FDC Compass, and TSYS Acquiring Solutions**\nThis value is used for AVS.\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_address2 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the billing address.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the bill_city field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the billing address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_state field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**American Express Direct**\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the remaining value is longer than nine characters, truncates the value starting from the right side.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_zip field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Country of the billing address. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_country field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Customer's email address, including the full domain name.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_email field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Customer\u2019s phone number.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nCyberSource recommends that you include the country code when the order is from outside the U.S.\n\nFor processor-specific information, see the customer_phone field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n"
                                                }
                                            }
                                        },
                                        "shipTo": {
                                            "type": "object",
                                            "properties": {
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the shipping address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "description": "Country of the shipping address. Use the two-character ISO Standard Country Codes.",
                                                    "maxLength": 2
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the shipping address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\n**American Express Direct**\\\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the\nremaining value is longer than nine characters, truncates the value starting from the right side.\n"
                                                }
                                            }
                                        },
                                        "lineItems": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "productCode": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Type of product. This value is used to determine the category that the product is in: electronic, handling,\nphysical, service, or shipping. The default value is **default**.\nIf you are performing an authorization transaction (`processingOptions.capture` is set to `false`), and you set this field to a value other than default or any of the values related to\nshipping and handling, then the fields `quantity`, `productName`, and `productSku` are required.\nIt can also have a value of \"gift_card\".\n\nSee Appendix O, \"Product Codes,\" on page 373 for a list of valid values.\nFor a payment, when you set this field to a value other than default or any of the values related to\nshipping and handling, below fields _quantity_, _productName_, and _productSKU_ are required.\n"
                                                    },
                                                    "productName": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "For an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`),\nthis field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of\nthe other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "productSku": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Stock Keeping Unit (SKU) code for the product.\n\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when _orderInformation.lineItems[].productCode_ is not set to **default** or one of the other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "quantity": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 9999999999,
                                                        "description": "Number of units for this order.\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of the other values that are related to shipping and/or handling.\nWhen `orderInformation.lineItems[].productCode` is `gift_card`, this is the total count of individual prepaid gift cards purchased.\n",
                                                        "default": 1
                                                    },
                                                    "unitPrice": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you\ncannot include any other special characters. CyberSource truncates the amount to the correct number of decimal\nplaces.\n\nFor processor-specific information, see the amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n- Table 12, \"Authorization Information for Specific Processors,\" on page 36\n- Table 16, \"Capture Information for Specific Processors,\" on page 51\n- Table 20, \"Credit Information for Specific Processors,\" on page 65\n\n**DCC for First Data**\\\nThis value is the original amount in your local currency. You must include this field. You cannot use grand_total_amount. See \"Dynamic Currency Conversion for First Data,\" page 113.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 12, \"Authorization Information for Specific Processors,\" on page 36.\n\n**Zero Amount Authorizations**\\\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 220.\n"
                                                    },
                                                    "unitOfMeasure": {
                                                        "type": "string",
                                                        "maxLength": 12,
                                                        "description": "Unit of measure, or unit of measure code, for the item.\n"
                                                    },
                                                    "totalAmount": {
                                                        "type": "string",
                                                        "maxLength": 13,
                                                        "description": "Total amount for the item. Normally calculated as the unit price x quantity.\n\nWhen orderInformation.lineItems[].productCode is \"gift_card\", this is the purchase amount total\nfor prepaid gift cards in major units. Example: 123.45 USD= 123\n"
                                                    },
                                                    "taxAmount": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Total tax to apply to the product. This value cannot be negative. The tax amount and the offer amount must\nbe in the same currency. The tax amount field is additive.\n\nThe following example uses a two-exponent currency such as USD:\n\n 1. You include each line item in your request.\n ..- 1st line item has amount=10.00, quantity=1, and taxAmount=0.80\n ..- 2nd line item has amount=20.00, quantity=1, and taxAmount=1.60\n 2. The total amount authorized will be 32.40, not 30.00 with 2.40 of tax included.\n\nIf you want to include the tax amount and also request the ics_tax service, see Tax Calculation Service Using the SCMP API.\n\nThis field is frequently used for Level II and Level III transactions. See Level II and Level III Processing Using the SCMP API.\n"
                                                    },
                                                    "taxRate": {
                                                        "type": "string",
                                                        "maxLength": 7,
                                                        "description": "Tax rate applied to the item. See \"Numbered Elements,\" page 14.\n\nVisa: Valid range is 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated).\n\nMastercard: Valid range is 0.00001 to 0.99999 (0.001% to 99.999%).\n"
                                                    },
                                                    "taxAppliedAfterDiscount": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Flag to indicate how you handle discount at the line item level.\n\n - 0: no line level discount provided\n - 1: tax was calculated on the post-discount line item total\n - 2: tax was calculated on the pre-discount line item total\n\n`Note` Visa will inset 0 (zero) if an invalid value is included in this field.\n\nThis field relates to the value in the _lineItems[].discountAmount_ field.\n"
                                                    },
                                                    "taxStatusIndicator": {
                                                        "type": "string",
                                                        "maxLength": 1,
                                                        "description": "Flag to indicate whether tax is exempted or not included.\n\n - 0: tax not included\n - 1: tax included\n - 2: transaction is not subject to tax\n"
                                                    },
                                                    "taxTypeCode": {
                                                        "type": "string",
                                                        "maxLength": 4,
                                                        "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                    },
                                                    "amountIncludesTax": {
                                                        "type": "boolean",
                                                        "description": "Flag that indicates whether the tax amount is included in the Line Item Total.\n\nPossible values:\n - **true**\n - **false**\n",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "typeOfSupply": {
                                                        "type": "string",
                                                        "maxLength": 2,
                                                        "description": "Flag to indicate whether the purchase is categorized as goods or services.\nPossible values:\n\n - 00: goods\n - 01: services\n"
                                                    },
                                                    "commodityCode": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Commodity code or International description code used to classify the item. Contact your acquirer for a list of\ncodes.\n"
                                                    },
                                                    "discountAmount": {
                                                        "type": "string",
                                                        "maxLength": 13,
                                                        "description": "Discount applied to the item."
                                                    },
                                                    "discountApplied": {
                                                        "type": "boolean",
                                                        "description": "Flag that indicates whether the amount is discounted.\n\nIf you do not provide a value but you set Discount Amount to a value greater than zero, then CyberSource sets\nthis field to **true**.\n\nPossible values:\n - **true**\n - **false**\n",
                                                        "enum": [
                                                            true,
                                                            false
                                                        ]
                                                    },
                                                    "discountRate": {
                                                        "type": "string",
                                                        "maxLength": 6,
                                                        "description": "Rate the item is discounted. Maximum of 2 decimal places.\n\nExample 5.25 (=5.25%)\n"
                                                    },
                                                    "invoiceNumber": {
                                                        "type": "string",
                                                        "maxLength": 23,
                                                        "description": "Field to support an invoice number for a transaction. You must specify the number of line items that will\ninclude an invoice number. By default, the first line item will include an invoice number field. The invoice\nnumber field can be included for up to 10 line items.\n"
                                                    },
                                                    "taxDetails": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "description": "This is used to determine what type of tax related data should be inclued under _taxDetails_ object.\n\nPossible values:\n - alternate\n - local\n - national\n - vat\n",
                                                                    "enum": [
                                                                        "alternate",
                                                                        "local",
                                                                        "national",
                                                                        "vat"
                                                                    ]
                                                                },
                                                                "amount": {
                                                                    "type": "string",
                                                                    "maxLength": 13,
                                                                    "description": "Please see below table for related decription based on above _type_ field.\n\n| type      | type description |\n|-----------|--------------------|\n| alternate | Total amount of alternate tax for the order. |\n| local     | Sales tax for the order. |\n| national  | National tax for the order. |\n| vat       | Total amount of VAT or other tax included in the order. |\n| other     | Other tax. |\n"
                                                                },
                                                                "rate": {
                                                                    "type": "string",
                                                                    "maxLength": 6,
                                                                    "description": "Rate of VAT or other tax for the order.\n\nExample 0.040 (=4%)\n\nValid range: 0.01 to 0.99 (1% to 99%, with only whole percentage values accepted; values with additional\ndecimal places will be truncated)\n"
                                                                },
                                                                "code": {
                                                                    "type": "string",
                                                                    "maxLength": 4,
                                                                    "description": "Type of tax being applied to the item. Possible values:\n\nBelow values are used by **RBS WorldPay Atlanta**, **FDC Nashville Global**, **Litle**\n\n - 0000: unknown tax type\n - 0001: federal/national sales tax\n - 0002: state sales tax\n - 0003: city sales tax\n - 0004: local sales tax\n - 0005: municipal sales tax\n - 0006: other tax\n - 0010: value-added tax (VAT)\n - 0011: goods and services tax (GST)\n - 0012: provincial sales tax\n - 0013: harmonized sales tax\n - 0014: Quebec sales tax (QST)\n - 0020: room tax\n - 0021: occupancy tax\n - 0022: energy tax\n - 0023: city tax\n - 0024: county or parish sales tax\n - 0025: county tax\n - 0026: environment tax\n - 0027: state and local sales tax (combined)\n - Blank: Tax not supported on line item.\n"
                                                                },
                                                                "taxId": {
                                                                    "type": "string",
                                                                    "maxLength": 15,
                                                                    "description": "Your tax ID number to use for the alternate tax amount. Required if you set alternate tax amount to any value,\nincluding zero. You may send this field without sending alternate tax amount.\n"
                                                                },
                                                                "applied": {
                                                                    "type": "boolean",
                                                                    "description": "The tax is applied. Valid value is `true` or `false`."
                                                                },
                                                                "exemptionCode": {
                                                                    "type": "string",
                                                                    "maxLength": 1,
                                                                    "description": "Code for exemption from sales and use tax. This field is a pass-through, which means that CyberSource does not\nverify the value or modify it in any way before sending it to the processor.\n\nFor possible values, see Exemption Status Values. See Numbered Elements.\n\nImportant For information about using this field, see Item-Level Tax Fields.\n"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "invoiceDetails": {
                                            "type": "object",
                                            "properties": {
                                                "purchaseOrderNumber": {
                                                    "type": "string",
                                                    "maxLength": 25,
                                                    "description": "Value used by your customer to identify the order. This value is typically a purchase order number. CyberSource\nrecommends that you do not populate the field with all zeros or nines.\n\nFor processor-specific information, see the user_po field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "purchaseOrderDate": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Date the order was processed. `Format: YYYY-MM-DD`.\n\nFor processor-specific information, see the purchaser_order_date field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "purchaseContactName": {
                                                    "type": "string",
                                                    "maxLength": 36,
                                                    "description": "The name of the individual or the company contacted for company authorized purchases.\n\nFor processor-specific information, see the authorized_contact_name field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "taxable": {
                                                    "type": "boolean",
                                                    "description": "Flag that indicates whether an order is taxable. This value must be true if the sum of all _lineItems[].taxAmount_ values > 0.\n\nIf you do not include any _lineItems[].taxAmount_ values in your request, CyberSource does not include\n_invoiceDetails.taxable_ in the data it sends to the processor.\n\nFor processor-specific information, see the tax_indicator field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n\nPossible values:\n - **true**\n - **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                },
                                                "vatInvoiceReferenceNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "VAT invoice number associated with the transaction.\n\nFor processor-specific information, see the vat_invoice_ref_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "commodityCode": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "International description code of the overall order\u2019s goods or services or the Categorizes purchases for VAT\nreporting. Contact your acquirer for a list of codes.\n\nFor processor-specific information, see the summary_commodity_code field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "transactionAdviceAddendum": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "data": {
                                                                "type": "string",
                                                                "maxLength": 40,
                                                                "description": "Four Transaction Advice Addendum (TAA) fields. These fields are used to display descriptive information\nabout a transaction on the customer\u2019s American Express card statement. When you send TAA fields, start\nwith amexdata_taa1, then ...taa2, and so on. Skipping a TAA field causes subsequent TAA fields to be\nignored.\n\nTo use these fields, contact CyberSource Customer Support to have your account enabled for this feature.\n"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "shippingDetails": {
                                            "type": "object",
                                            "properties": {
                                                "shipFromPostalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the address from which the goods are shipped, which is used to establish nexus. The default is\nthe postal code associated with your CyberSource account.\n\nThe postal code must consist of 5 to 9 digits. When the billing country is the U.S., the 9-digit postal code\nmust follow this format:\n\n`[5 digits][dash][4 digits]`\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n\n`[alpha][numeric][alpha][space] [numeric][alpha][numeric]`\n\nExample A1B 2C3\n\nThis field is frequently used for Level II and Level III transactions.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantCustomerId": {
                                            "type": "string",
                                            "maxLength": 100,
                                            "description": "Your identifier for the customer.\n\nWhen a subscription or customer profile is being created, the maximum length for this field for most processors is 30. Otherwise, the maximum length is 100.\n\n**Comercio Latino**\\\nFor recurring payments in Mexico, the value is the customer\u2019s contract number.\nNote Before you request the authorization, you must inform the issuer of the customer contract numbers that will be used for recurring transactions.\n\n**Litle**\\\nFor a follow-on credit with Litle, CyberSource checks the following locations, in the order\ngiven, for a customer account ID value and uses the first value it finds:\n1. `customer_account_id` value in the follow-on credit request\n2. Customer account ID value that was used for the capture that is being credited\n3. Customer account ID value that was used for the original authorization\nIf a customer account ID value cannot be found in any of these locations, then no value is used.\n\nFor processor-specific information, see the customer_account_id field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Customer\u2019s government-assigned tax identification number.\n\nFor processor-specific information, see the purchaser_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        }
                                    }
                                },
                                "deviceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "hostName": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Host name reported by the customer\u2019s browser to your Web server identified via the HTTP header."
                                        },
                                        "ipAddress": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Customer\u2019s IP address, such as 10.1.27.63, reported by your Web server via socket information.\n"
                                        },
                                        "userAgent": {
                                            "type": "string",
                                            "maxLength": 40,
                                            "description": "Customer\u2019s browser as identified from the HTTP header data. For example, Mozilla is the value that identifies\nthe Netscape browser.\n"
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nFor Payouts:\n* Paymentech (22)\n"
                                                },
                                                "alternateName": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n* FDCCompass (13)\n* Paymentech (13)\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Merchant City. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Merchant State. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        },
                                        "categoryCode": {
                                            "type": "integer",
                                            "maximum": 9999,
                                            "description": "Four-digit number that the payment card industry uses to classify merchants into market segments. Visa assigned\none or more of these values to your business when you started accepting Visa cards.\n\nIf you do not include this field in your request, CyberSource uses the value in your CyberSource account.\n\nFor processor-specific information, see the merchant_category_code field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR4\n- Position: 150-153\n- Field: Merchant Category Code\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 21,
                                            "description": "Your government-assigned tax identification number.\n\nFor CtV processors, the maximum length is 20.\n\nFor other processor-specific information, see the merchant_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "cardAcceptorReferenceNumber": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Reference number that facilitates card acceptor/corporation communication and record keeping.\n\nFor processor-specific information, see the card_acceptor_ref_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "taxId": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Your Cadastro Nacional da Pessoa Jur\u00eddica (CNPJ) number.\n\nThis field is supported only for BNDES transactions on CyberSource through VisaNet. See BNDES.\n\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP07 TCR6\n- Position: 40-59\n- Field: BNDES Reference Field 1\n"
                                        }
                                    }
                                },
                                "aggregatorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "aggregatorId": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Value that identifies you as a payment aggregator. Get this value from the\nprocessor.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR6\n- Position: 95-105\n- Field: MasterCard Payment Facilitator ID\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nccAuthService\\\n**American Express Direct**: R for all aggregator transactions.\\\n**CyberSource through VisaNet**: R for Mastercard aggregator transactions and for American Express aggregator authorizations; otherwise, not used.\\\n**FDC Compass**: R for all aggregator transactions.\\\n**FDC Nashville Global**: R for all aggregator transactions.\n\nFor processor-specific information, see the aggregator_id field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "name": {
                                            "type": "string",
                                            "maxLength": 37,
                                            "description": "Your payment aggregator business name.\n\n**American Express Direct**\\\nThe maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters.\\\n\n**CyberSource through VisaNet**\\\nWith American Express, the maximum length of the aggregator name depends on the length of the sub-merchant name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nFor processor-specific information, see the aggregator_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "subMerchant": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 37,
                                                    "description": "Sub-merchant\u2019s business name.\n\n**American Express Direct**\\\nThe maximum length of the sub-merchant name depends on the length of the aggregator name. The combined length for both values must not exceed 36 characters.\n\n**CyberSource through VisaNet**\\\nWith American Express, the maximum length of the sub-merchant name depends on the length of the aggregator name. The combined length for both values must not exceed 36 characters. The value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\n**FDC Nashville Global**\\\nWith Mastercard, the maximum length of the sub-merchant name depends on the length of the aggregator name:\n- If aggregator name length is 1 through 3, maximum sub-merchant name length is 21.\n- If aggregator name length is 4 through 7, maximum sub-merchant name length is 17.\n- If aggregator name length is 8 through 12, maximum sub-merchant name length is 12.\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 38,
                                                    "description": "First line of the sub-merchant\u2019s street address.\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 21,
                                                    "description": "Sub-merchant\u2019s city.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nFor details, see \"Aggregator Support,\" page 100.\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s state or province. Use the State, Province, and Territory Codes for the United States and Canada.\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Partial postal code for the sub-merchant\u2019s address.\n\nSee \"Aggregator Support,\" page 100 for details.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file5.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Sub-merchant\u2019s country. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\\\nThe value for this field does not map to the TC 33 capture file.\n\n**FDC Compass**\\\nThis value must consist of uppercase characters.\n\nSee \"Aggregator Support,\" page 101.\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 40,
                                                    "description": "Sub-merchant\u2019s email address.\n\n**Maximum length for processors**\n\n - American Express Direct: 40\n - CyberSource through VisaNet: 40\n - FDC Compass: 40\n - FDC Nashville Global: 19\n\n**CyberSource through VisaNet**\\\nWith American Express, the value for this field corresponds to the following data in the TC 33 capture file:\n- Record: CP01 TCRB\n- Position: 25-64\n- Field: American Express Seller E-mail Address\n\n**Note** The TC 33 Capture file contains information about the purchases and refunds that a merchant submits to CyberSource. CyberSource through VisaNet creates the TC 33 Capture file at the end of the day and sends it to the merchant\u2019s acquirer, who uses this information to facilitate end-of-day clearing processing with payment card companies.\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Sub-merchant\u2019s telephone number.\n\n**Maximum length for procesors**\n\n - American Express Direct: 20\n - CyberSource through VisaNet: 20\n - FDC Compass: 13\n - FDC Nashville Global: 10\n\n**CyberSource through VisaNet**\\\nWith American Express, the value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCRB\n- Position: 5-24\n- Field: American Express Seller Telephone Number\n\n**FDC Compass**\\\nThis value must consist of uppercase characters. Use one of these recommended formats:\\\n`NNN-NNN-NNNN`\\\n`NNN-AAAAAAA`\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "emv": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "maxLength": 1998,
                                                    "description": "EMV data that is transmitted from the chip card to the issuer, and from the issuer to the chip card. The EMV\ndata is in the tag-length-value format and includes chip card tags, terminal tags, and transaction detail tags.\n\nSee \"Europay, MasterCard, Visa (EMV),\" page 10. For information about the individual tags, see the \u201cApplication Specification\u201d section in the EMV 4.3 Specifications: http://emvco.com\n\n**Important** The following tags contain sensitive information and **must not** be included in this field:\n\n - **56**: Track 1 equivalent data\n - **57**: Track 2 equivalent data\n - **5A**: Application PAN\n - **5F20**: Cardholder name\n - **5F24**: Application expiration date (This sensitivity has been relaxed for cmcic, amexdirect, fdiglobal, opdfde, and six)\n - **99**: Transaction PIN\n - **9F0B**: Cardholder name (extended)\n - **9F1F**: Track 1 discretionary data\n - **9F20**: Track 2 discretionary data\n\nFor captures, this field is required for contact EMV transactions. Otherwise, it is optional.\n\nFor credits, this field is required for contact EMV stand-alone credits and contactless EMV stand-alone credits.\nOtherwise, it is optional.\n\n**Important** For contact EMV captures, contact EMV stand-alone credits, and contactless EMV stand-alone credits,\nyou must include the following tags in this field. For all other types of EMV transactions, the following tags\nare optional.\n\n - **95**: Terminal verification results\n - **9F10**: Issuer application data\n - **9F26**: Application cryptogram\n"
                                                },
                                                "fallback": {
                                                    "type": "boolean",
                                                    "maxLength": 5,
                                                    "description": "Indicates whether a fallback method was used to enter credit card information into the POS terminal. When a\ntechnical problem prevents a successful exchange of information between a chip card and a chip-capable terminal:\n\n 1. Swipe the card or key the credit card information into the POS terminal.\n 2. Use the pointOfSaleInformation.entryMode field to indicate whether the information was swiped or keyed.\n\nPossible values:\n - **true**\n - **false** (default)\n\nThis field is supported only on **Chase Paymentech Solutions** and **GPN**.\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "default": false
                                                },
                                                "fallbackCondition": {
                                                    "type": "number",
                                                    "description": "Reason for the EMV fallback transaction. An EMV fallback transaction occurs when an EMV transaction fails for\none of these reasons:\n\n - Technical failure: the EMV terminal or EMV card cannot read and process chip data.\n - Empty candidate list failure: the EMV terminal does not have any applications in common with the EMV card.\n   EMV terminals are coded to determine whether the terminal and EMV card have any applications in common.\n   EMV terminals provide this information to you.\n\nPossible values:\n\n - **1**: Transaction was initiated with information from a magnetic stripe, and the previous transaction at the\n      EMV terminal either used information from a successful chip read or it was not a chip transaction.\n - **2**: Transaction was initiated with information from a magnetic stripe, and the previous transaction at the\n      EMV terminal was an EMV fallback transaction because the attempted chip read was unsuccessful.\n\nThis field is supported only on **GPN**.\n\n**NOTE**: Merchants must include this field in a request whenever a transaction must fall back to swiped mode.\n"
                                                }
                                            }
                                        },
                                        "partnerSdkVersion": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Version of the software installed on the POS terminal. This value is provided by the client software that is\ninstalled on the POS terminal.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                        },
                                        "storeAndForwardIndicator": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "When connectivity is unavailable, the client software that is installed on the POS terminal can store a\ntransaction in its memory and send it for authorization when connectivity is restored. This value is provided by\nthe client software that is installed on the POS terminal.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nPossible values:\n- Y: Transaction was stored and then forwarded.\n- N (default): Transaction was not stored and then forwarded.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                        },
                                        "cardholderVerificationMethod": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "Complete list of cardholder verification methods (CVMs) supported by the terminal.\n\nPossible values:\n- PIN\n- Signature\n\n**NOTE**: You can submit one of the values or both in a request.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                            },
                                            "example": [
                                                "PIN",
                                                "Signature"
                                            ]
                                        },
                                        "terminalInputCapability": {
                                            "type": "array",
                                            "items": {
                                                "description": "Complete list of card input methods supported by the terminal.\n\nPossible values:\n- Keyed: Terminal can accept card data that is entered manually.\n- Swiped: Terminal can accept card data from a magnetic stripe reader.\n- Contact: Terminal can accept card data in EMV contact mode.\n- Contactless: Terminal can accept card data in EMV contactless mode.\n- BarCode: Terminal can read bar codes.\n- QRcode: Terminal can read QR codes.\n- OCR: Terminal can perform optical character recognition (OCT).\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n",
                                                "type": "string"
                                            },
                                            "example": [
                                                "Keyed",
                                                "Swiped",
                                                "Contact",
                                                "QRcode"
                                            ]
                                        },
                                        "terminalSerialNumber": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Terminal serial number assigned by the hardware manufacturer. This value is provided by the client software that\nis installed on the POS terminal.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                        },
                                        "terminalCardCaptureCapability": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Indicates whether the terminal can capture the card.\n\nPossible values:\n- 1: Terminal can capture card.\n- 0: Terminal cannot capture card.\n\nThis field is supported only on American Express Direct.\n"
                                        },
                                        "terminalOutputCapability": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Indicates whether the terminal can print or display messages.\n\nPossible values:\n- 1: Neither\n- 2: Print only\n- 3: Display only\n- 4: Print and display\n\nThis field is supported only on American Express Direct.\n"
                                        },
                                        "terminalPinCapability": {
                                            "type": "integer",
                                            "description": "Maximum PIN length that the terminal can capture.\n\nPossible values:\n-  0: No PIN capture capability\n-  1: PIN capture capability unknown\n-  4: Four characters\n-  5: Five characters\n-  6: Six characters\n-  7: Seven characters\n-  8: Eight characters\n-  9: Nine characters\n- 10: Ten characters\n- 11: Eleven characters\n- 12: Twelve characters\n\nThis field is supported only on American Express Direct and SIX.\n"
                                        },
                                        "deviceId": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Value created by the client software that uniquely identifies the POS device. This value is provided by the\nclient software that is installed on the POS terminal.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                        }
                                    }
                                },
                                "merchantDefinedInformation": {
                                    "type": "array",
                                    "description": "The description for this field is not available.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "maxLength": 50,
                                                "description": "The name you assign for your merchant-defined data field.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].key and\nmerchantDefinedInformation[1].key for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n"
                                            },
                                            "value": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "The value you assign for your merchant-defined data field.\n\n**Warning** Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields. Personally identifying information includes, but is not\nlimited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV,\nCVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].value and\nmerchantDefinedInformation[1].value for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n\nFor installment payments with Mastercard in Brazil:\n- The value for merchantDefinedInformation[0].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 25-44\n  - Field: Reference Field 2\n- The value for merchantDefinedInformation[1].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 45-64\n  - Field: Reference Field 3\n"
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "12345678"
                                },
                                "orderInformation": {
                                    "billTo": {
                                        "country": "US",
                                        "firstName": "Test",
                                        "lastName": "test",
                                        "phoneNumber": "9999999999",
                                        "address1": "test",
                                        "postalCode": "48104-2201",
                                        "locality": "Ann Arbor",
                                        "administrativeArea": "MI",
                                        "email": "test@cybs.com"
                                    },
                                    "amountDetails": {
                                        "totalAmount": "200",
                                        "currency": "usd"
                                    }
                                },
                                "paymentInformation": {
                                    "card": {
                                        "expirationYear": "2031",
                                        "number": "4111111111111111",
                                        "expirationMonth": "03",
                                        "type": "001"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2CreditsPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        },
                                        "void": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - PENDING\n",
                                    "enum": [
                                        "PENDING"
                                    ]
                                },
                                "reconciliationId": {
                                    "type": "string",
                                    "maxLength": 60,
                                    "description": "The reconciliation id for the submitted transaction. This value is not returned for all processors.\n"
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "creditAmountDetails": {
                                    "type": "object",
                                    "properties": {
                                        "creditAmount": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Total amount of the credit."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "bankTransferOptions": {
                                            "type": "object",
                                            "properties": {
                                                "settlementMethod": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Method used for settlement.\n\nPossible values:\n- **A**: Automated Clearing House (default for credits and for transactions using Canadian dollars)\n- **F**: Facsimile draft (U.S. dollars only)\n- **B**: Best possible (U.S. dollars only) (default if the field has not already been configured for your\nmerchant ID)\n\nSee \"Settlement Delivery Methods,\" page 44.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "processorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "transactionId": {
                                            "type": "string",
                                            "maxLength": 18,
                                            "description": "Processor transaction ID.\n\nThis value identifies the transaction on a host system. This value is supported only for Moneris. It contains\nthis information:\n\n - Terminal used to process the transaction\n - Shift during which the transaction took place\n - Batch number\n - Transaction number within the batch\n\nYou must store this value. If you give the customer a receipt, display this value on the receipt.\n\nExample For the value 66012345001069003:\n\n - Terminal ID = 66012345\n - Shift number = 001\n - Batch number = 069\n - Transaction number = 003\n"
                                        },
                                        "forwardedAcquirerCode": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Name of the Japanese acquirer that processed the transaction. Returned only for CCS (CAFIS) and JCN Gateway.\nPlease contact the CyberSource Japan Support Group for more information.\n"
                                        },
                                        "merchantNumber": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Identifier that was assigned to you by your acquirer.\n\nThis value must be printed on the receipt.\n\nThis field is supported only on **American Express Direct**, **FDC Nashville Global**, and **SIX**.\n"
                                        },
                                        "responseCode": {
                                            "type": "string",
                                            "maxLength": 10,
                                            "description": "For most processors, this is the error message sent directly from the bank. Returned only when the processor\nreturns this value.\n\nImportant Do not use this field to evaluate the result of the authorization.\n"
                                        },
                                        "achVerification": {
                                            "type": "object",
                                            "properties": {
                                                "resultCode": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Results from the ACH verification service, which is described in \"ACH Verification,\" page 25. For the possible\nvalues, see Appendix H, \"Verification Codes,\" on page 91.\n"
                                                },
                                                "resultCodeRaw": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Raw results from the ACH verification service, which is described in \"ACH Verification,\" page 25. For the\npossible values, see Appendix H, \"Verification Codes,\" on page 91.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "paymentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "bank": {
                                            "type": "object",
                                            "properties": {
                                                "account": {
                                                    "type": "object",
                                                    "properties": {
                                                        "correctedAccountNumber": {
                                                            "type": "string",
                                                            "maxLength": 17,
                                                            "description": "Corrected account number from the ACH verification service, which is described in \"ACH Verification,\" page 25.\n"
                                                        }
                                                    }
                                                },
                                                "correctedRoutingNumber": {
                                                    "type": "string",
                                                    "maxLength": 9,
                                                    "description": "The description for this field is not available."
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "invoiceDetails": {
                                            "type": "object",
                                            "properties": {
                                                "level3TransmissionStatus": {
                                                    "type": "boolean",
                                                    "description": "Indicates whether CyberSource sent the Level III information to the processor. The possible values are:\n\nIf your account is not enabled for Level III data or if you did not include the purchasing level field in your\nrequest, CyberSource does not include the Level III data in the request sent to the processor.\n\nFor processor-specific information, see the bill_purchasing_level3_enabled field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n\nPossible values:\n- **true**\n- **false**\n",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/credits/4963014324246004901546",
                                        "method": "GET"
                                    },
                                    "void": {
                                        "href": "/pts/v2/credits/4963014324246004901546/voids",
                                        "method": "POST"
                                    }
                                },
                                "id": "4963014324246004901546",
                                "submitTimeUtc": "2017-06-01T071712Z",
                                "status": "200",
                                "reconciliationId": "39570714X3E1LBQ8",
                                "statusInformation": {
                                    "reason": "SUCCESS",
                                    "message": "Successful transaction."
                                },
                                "clientReferenceInformation": {
                                    "code": "12345678"
                                },
                                "creditAmountDetails": {
                                    "currency": "usd",
                                    "creditAmount": "200.00"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "currency": "usd"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "title": "ptsV2CreditsPost400Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_CARD\n - INVALID_MERCHANT_CONFIGURATION\n - INVALID_AMOUNT\n - CAPTURE_ALREADY_VOIDED\n - ACCOUNT_NOT_ALLOWED_CREDIT\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_CARD",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "CAPTURE_ALREADY_VOIDED",
                                        "ACCOUNT_NOT_ALLOWED_CREDIT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2CreditsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Credit",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "12345678"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "country": "US",
                                    "firstName": "John",
                                    "lastName": "Deo",
                                    "phoneNumber": "9321499232",
                                    "address1": "900 Metro Center Blvd",
                                    "postalCode": "48104-2201",
                                    "locality": "Foster City",
                                    "administrativeArea": "CA",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "200",
                                    "currency": "usd"
                                }
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationYear": "2031",
                                    "number": "4111111111111111",
                                    "expirationMonth": "03",
                                    "type": "001"
                                }
                            }
                        }
                    },
                    "example1": {
                        "summary": "Electronic Check Stand-Alone Credits",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "TC46125-1"
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "100",
                                    "currency": "USD"
                                }
                            },
                            "paymentInformation": {
                                "bank": {
                                    "account": {
                                        "number": "4100",
                                        "type": "C",
                                        "checkNumber": "123456"
                                    },
                                    "routingNumber": "071923284"
                                }
                            }
                        }
                    },
                    "example2": {
                        "summary": "Service Fees Credit",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "12345678"
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "1 Market St",
                                    "postalCode": "94105",
                                    "locality": "san francisco",
                                    "administrativeArea": "CA",
                                    "country": "US",
                                    "phoneNumber": "4158880000",
                                    "email": "test@cybs.com"
                                },
                                "amountDetails": {
                                    "totalAmount": "2325.00",
                                    "currency": "usd",
                                    "serviceFeeAmount": "30.0"
                                }
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationYear": "2031",
                                    "number": "4111111111111111",
                                    "expirationMonth": "03"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v2/payments/{id}/voids": {
            "post": {
                "summary": "Void a Payment",
                "description": "Include the payment ID in the POST request to cancel the payment.",
                "tags": [
                    "void"
                ],
                "operationId": "voidPayment",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "voidPaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "test_void"
                                }
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The payment ID returned from a previous payment request.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2PaymentsVoidsPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - VOIDED\n",
                                    "enum": [
                                        "VOIDED"
                                    ]
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "voidAmountDetails": {
                                    "type": "object",
                                    "properties": {
                                        "voidAmount": {
                                            "type": "string",
                                            "description": "Total amount of the void."
                                        },
                                        "originalTransactionAmount": {
                                            "type": "string",
                                            "description": "Amount of the original transaction."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/voids/4963015122056179201545",
                                        "method": "GET"
                                    }
                                },
                                "id": "4963015122056179201545",
                                "submitTimeUtc": "2017-06-01T071832Z",
                                "status": "VOIDED",
                                "clientReferenceInformation": {
                                    "code": "test_void"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "currency": "USD"
                                    }
                                },
                                "voidAmountDetails": {
                                    "currency": "usd",
                                    "voidAmount": "102.21"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "title": "ptsV2PaymentsVoidsPost400Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_MERCHANT_CONFIGURATION\n - NOT_VOIDABLE\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "NOT_VOIDABLE"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2PaymentsVoidsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": null,
                    "summary": "Void a Payment",
                    "value": {
                        "clientReferenceInformation": {
                            "code": "test_void"
                        }
                    }
                }
            }
        },
        "/pts/v2/captures/{id}/voids": {
            "post": {
                "summary": "Void a Capture",
                "description": "Include the capture ID in the POST request to cancel the capture.",
                "tags": [
                    "void"
                ],
                "operationId": "voidCapture",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "voidCaptureRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "test_void"
                                }
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The capture ID returned from a previous capture request.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2CapturesVoidsPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - VOIDED\n",
                                    "enum": [
                                        "VOIDED"
                                    ]
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "voidAmountDetails": {
                                    "type": "object",
                                    "properties": {
                                        "voidAmount": {
                                            "type": "string",
                                            "description": "Total amount of the void."
                                        },
                                        "originalTransactionAmount": {
                                            "type": "string",
                                            "description": "Amount of the original transaction."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/voids/4963015122056179201545",
                                        "method": "GET"
                                    }
                                },
                                "id": "4963015122056179201545",
                                "submitTimeUtc": "2017-06-01T071832Z",
                                "status": "VOIDED",
                                "clientReferenceInformation": {
                                    "code": "test_void"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "currency": "USD"
                                    }
                                },
                                "voidAmountDetails": {
                                    "currency": "usd",
                                    "voidAmount": "102.21"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "title": "ptsV2CapturesVoidsPost400Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_MERCHANT_CONFIGURATION\n - NOT_VOIDABLE\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "NOT_VOIDABLE"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2CapturesVoidsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": null,
                    "summary": "Void a Capture",
                    "value": {
                        "clientReferenceInformation": {
                            "code": "test_void"
                        }
                    }
                }
            }
        },
        "/pts/v2/refunds/{id}/voids": {
            "post": {
                "summary": "Void a Refund",
                "description": "Include the refund ID in the POST request to cancel the refund.",
                "tags": [
                    "void"
                ],
                "operationId": "voidRefund",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "voidRefundRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "test_void"
                                }
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The refund ID returned from a previous refund request.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2RefundsVoidsPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - VOIDED\n",
                                    "enum": [
                                        "VOIDED"
                                    ]
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "voidAmountDetails": {
                                    "type": "object",
                                    "properties": {
                                        "voidAmount": {
                                            "type": "string",
                                            "description": "Total amount of the void."
                                        },
                                        "originalTransactionAmount": {
                                            "type": "string",
                                            "description": "Amount of the original transaction."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/voids/4963015122056179201545",
                                        "method": "GET"
                                    }
                                },
                                "id": "4963015122056179201545",
                                "submitTimeUtc": "2017-06-01T071832Z",
                                "status": "VOIDED",
                                "clientReferenceInformation": {
                                    "code": "test_void"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "currency": "USD"
                                    }
                                },
                                "voidAmountDetails": {
                                    "currency": "usd",
                                    "voidAmount": "102.21"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "title": "ptsV2RefundsVoidsPost400Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_MERCHANT_CONFIGURATION\n - NOT_VOIDABLE\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "NOT_VOIDABLE"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2RefundsVoidsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Void a Refund",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "test_void"
                            }
                        }
                    }
                }
            }
        },
        "/pts/v2/credits/{id}/voids": {
            "post": {
                "summary": "Void a Credit",
                "description": "Include the credit ID in the POST request to cancel the credit.",
                "tags": [
                    "void"
                ],
                "operationId": "voidCredit",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "voidCreditRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "test_void"
                                }
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The credit ID returned from a previous credit request.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2CreditsVoidsPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - VOIDED\n",
                                    "enum": [
                                        "VOIDED"
                                    ]
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "voidAmountDetails": {
                                    "type": "object",
                                    "properties": {
                                        "voidAmount": {
                                            "type": "string",
                                            "description": "Total amount of the void."
                                        },
                                        "originalTransactionAmount": {
                                            "type": "string",
                                            "description": "Amount of the original transaction."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/voids/4963015122056179201545",
                                        "method": "GET"
                                    }
                                },
                                "id": "4963015122056179201545",
                                "submitTimeUtc": "2017-06-01T071832Z",
                                "status": "VOIDED",
                                "clientReferenceInformation": {
                                    "code": "test_void"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "currency": "USD"
                                    }
                                },
                                "voidAmountDetails": {
                                    "currency": "usd",
                                    "voidAmount": "102.21"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "title": "ptsV2CreditsVoidsPost400Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_MERCHANT_CONFIGURATION\n - NOT_VOIDABLE\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "NOT_VOIDABLE"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2CreditsVoidsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Void a Credit",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "test_void"
                            }
                        }
                    }
                }
            }
        },
        "/pts/v2/voids/": {
            "post": {
                "summary": "Merchant Initiated Void",
                "description": "This is to void a previous payment, capture, refund, or credit that merchant does not receive a reply.",
                "tags": [
                    "void"
                ],
                "operationId": "mitVoid",
                "x-devcenter-metaData": {
                    "categoryTag": "Payments"
                },
                "parameters": [
                    {
                        "name": "mitVoidRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "transactionId": {
                                            "type": "string",
                                            "description": "Identifier that you assign to the transaction.\n\n**Note** Use this field only if you want to support merchant-initiated reversal and void operations.\n\nSee page 250 on [Merchant-Initiated Reversals and Voids.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SO_API/Credit_Cards_SO_API.pdf)\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "description": "Comments"
                                        },
                                        "partner": {
                                            "type": "object",
                                            "properties": {
                                                "originalTransactionId": {
                                                    "type": "string",
                                                    "maxLength": 32,
                                                    "description": "Value that links the previous transaction to the current follow-on request. This value is assigned by the client\nsoftware that is installed on the POS terminal, which makes it available to the terminal\u2019s software and to\nCyberSource. Therefore, you can use this value to reconcile transactions between CyberSource and the terminal\u2019s\nsoftware.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                },
                                                "developerId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                },
                                                "solutionId": {
                                                    "type": "string",
                                                    "maxLength": 8,
                                                    "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "test_void"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - VOIDED\n",
                                    "enum": [
                                        "VOIDED"
                                    ]
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 14,
                                            "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                        },
                                        "ownerMerchantId": {
                                            "type": "string",
                                            "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                        }
                                    }
                                },
                                "voidAmountDetails": {
                                    "type": "object",
                                    "properties": {
                                        "voidAmount": {
                                            "type": "string",
                                            "description": "Total amount of the void."
                                        },
                                        "originalTransactionAmount": {
                                            "type": "string",
                                            "description": "Amount of the original transaction."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/voids/4963015122056179201545",
                                        "method": "GET"
                                    }
                                },
                                "id": "4963015122056179201545",
                                "submitTimeUtc": "2017-06-01T071832Z",
                                "status": "VOIDED",
                                "clientReferenceInformation": {
                                    "code": "test_void"
                                },
                                "orderInformation": {
                                    "amountDetails": {
                                        "currency": "USD"
                                    }
                                },
                                "voidAmountDetails": {
                                    "currency": "usd",
                                    "voidAmount": "102.21"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_MERCHANT_CONFIGURATION\n - NOT_VOIDABLE\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "NOT_VOIDABLE"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v1/transaction-batches": {
            "get": {
                "summary": "Get a list of batch files",
                "description": "Provide the search range",
                "tags": [
                    "TransactionBatches"
                ],
                "operationId": "getTransactionBatches",
                "x-devcenter-metaData": {
                    "categoryTag": "Transaction_Batches"
                },
                "x-queryParameterDefaults": {
                    "startTime": "2018-10-01T00:00:00.000Z",
                    "endTime": "2018-10-30T23:59:59.000Z"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Valid report Start Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Valid report End Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "title": "ptsV1TransactionBatchesGet200Response",
                            "type": "object",
                            "properties": {
                                "transactionBatches": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "Unique identifier assigned to the batch file.",
                                                "example": "psy8s1d",
                                                "pattern": "^[a-zA-Z0-9_+-]*$",
                                                "minLength": 1,
                                                "maxLength": 8
                                            },
                                            "uploadDate": {
                                                "type": "string",
                                                "description": "Date when the batch template was update.",
                                                "example": "2018-01-01"
                                            },
                                            "completionDate": {
                                                "type": "string",
                                                "description": "The date when the batch template processing completed.",
                                                "example": "2018-01-01"
                                            },
                                            "transactionCount": {
                                                "type": "integer",
                                                "description": "Number of transactions in the transaction.",
                                                "example": 7534
                                            },
                                            "acceptedTransactionCount": {
                                                "type": "integer",
                                                "description": "Number of transactions accepted.",
                                                "example": 50013
                                            },
                                            "rejectedTransactionCount": {
                                                "type": "string",
                                                "description": "Number of transactions rejected.",
                                                "example": 2508
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "The status of you batch template processing.",
                                                "example": "Completed"
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "/pts/v1/transaction-batches"
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "example": "GET"
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "title": "ptsV1TransactionBatchesGet400Response",
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Authorized",
                        "schema": {
                            "title": "ptsV1TransactionBatchesGet401Response",
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No Authenticated",
                        "schema": {
                            "title": "ptsV1TransactionBatchesGet403Response",
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No Reports Found",
                        "schema": {
                            "title": "ptsV1TransactionBatchesGet404Response",
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Bad Gateway",
                        "schema": {
                            "title": "ptsV1TransactionBatchesGet500Response",
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string",
                                            "description": "The reason of status"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "The detailed message related to the status and reason listed above."
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v1/transaction-batches/{id}": {
            "get": {
                "summary": "Get individual batch file",
                "description": "Provide the search range",
                "tags": [
                    "TransactionBatches"
                ],
                "operationId": "getTransactionBatchId",
                "x-devcenter-metaData": {
                    "categoryTag": "Transaction_Batches"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The batch id assigned for the template.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "title": "ptsV1TransactionBatchesIdGet200Response",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "Unique identifier assigned to the batch file.",
                                            "example": "psy8s1d",
                                            "pattern": "^[a-zA-Z0-9_+-]*$",
                                            "minLength": 1,
                                            "maxLength": 8
                                        },
                                        "uploadDate": {
                                            "type": "string",
                                            "description": "Date when the batch template was update.",
                                            "example": "2018-01-01"
                                        },
                                        "completionDate": {
                                            "type": "string",
                                            "description": "The date when the batch template processing completed.",
                                            "example": "2018-01-01"
                                        },
                                        "transactionCount": {
                                            "type": "integer",
                                            "description": "Number of transactions in the transaction.",
                                            "example": 7534
                                        },
                                        "acceptedTransactionCount": {
                                            "type": "integer",
                                            "description": "Number of transactions accepted.",
                                            "example": 50013
                                        },
                                        "rejectedTransactionCount": {
                                            "type": "string",
                                            "description": "Number of transactions rejected.",
                                            "example": 2508
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "The status of you batch template processing.",
                                            "example": "Completed"
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "properties": {
                                                "transactions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "href": {
                                                                "type": "string",
                                                                "description": "Self link for this request",
                                                                "example": "/tss/v2/transactions/5289798134206292501013"
                                                            },
                                                            "method": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "title": "ptsV1TransactionBatchesIdGet400Response",
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Authorized",
                        "schema": {
                            "title": "ptsV1TransactionBatchesIdGet401Response",
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No Authenticated",
                        "schema": {
                            "title": "ptsV1TransactionBatchesIdGet403Response",
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No Reports Found",
                        "schema": {
                            "title": "ptsV1TransactionBatchesIdGet404Response",
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "title": "ptsV1TransactionBatchesIdGet502Response",
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string",
                                            "description": "The reason of status"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "The detailed message related to the status and reason listed above."
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v1/transaction-batch-details": {
            "get": {
                "tags": [
                    "TransactionBatches"
                ],
                "summary": "Filters batch response.\n",
                "description": "Filters batch response.\n",
                "operationId": "getTransactionBatchDetails",
                "x-devcenter-metaData": {
                    "categoryTag": "Transaction_Batches"
                },
                "produces": [
                    "text/vnd.cybersource.map-csv"
                ],
                "parameters": [
                    {
                        "name": "transactionBatchId",
                        "in": "query",
                        "description": "Transaction Batch Id, this is unique.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "uploadDate",
                        "in": "query",
                        "description": "Date in which the original batch file was uploaded. Date must be in ISO-8601 format.",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Allows you to filter by rejected response.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Rejected"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Authorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No Authenticated",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No Reports Found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid.\n"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "The detailed message related to the status and reason listed above.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string",
                                            "description": "The reason of status"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "The detailed message related to the status and reason listed above."
                                        }
                                    }
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pts/v2/payouts": {
            "post": {
                "summary": "Process a Payout",
                "description": "Send funds from a selected funding source to a designated credit/debit card account or a prepaid card using\nan Original Credit Transaction (OCT).\n",
                "tags": [
                    "Payouts"
                ],
                "operationId": "octCreatePayment",
                "x-devcenter-metaData": {
                    "categoryTag": "Payouts"
                },
                "parameters": [
                    {
                        "name": "octCreatePaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 19,
                                                    "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                },
                                                "surcharge": {
                                                    "type": "object",
                                                    "properties": {
                                                        "amount": {
                                                            "type": "string",
                                                            "maxLength": 15,
                                                            "description": "The surcharge amount is included in the total transaction amount but is passed in a separate field to the issuer and acquirer for tracking. The issuer can provide information about the surcharge amount to the customer.\n\nIf the amount is positive, then it is a debit for the customer.\\\nIf the amount is negative, then it is a credit for the customer.\n\n**NOTE**: This field is supported only for CyberSource through VisaNet (CtV) for Payouts. For CtV, the maximum string length is 8.\n\nFor processor-specific information, see the surcharge_amount field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "billTo": {
                                            "type": "object",
                                            "properties": {
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s first name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**:\\\nThis field may be sent only for FDC Compass.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_firstname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s last name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\n**For Payouts** : This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the customer_lastname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the billing street address as it appears on the credit card issuer\u2019s records.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_address1 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Additional address information.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**Atos**\nThis field must not contain colons (:).\n\n**Chase Paymentech Solutions, FDC Compass, and TSYS Acquiring Solutions**\nThis value is used for AVS.\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_address2 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Country of the billing address. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_country field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the billing address.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the bill_city field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the billing address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_state field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**American Express Direct**\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the remaining value is longer than nine characters, truncates the value starting from the right side.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_zip field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Customer\u2019s phone number.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nCyberSource recommends that you include the country code when the order is from outside the U.S.\n\nFor processor-specific information, see the customer_phone field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n"
                                                },
                                                "phoneType": {
                                                    "type": "string",
                                                    "enum": [
                                                        "day",
                                                        "home",
                                                        "night",
                                                        "work"
                                                    ],
                                                    "description": "Customer's phone number type.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nPossible Values - \n* day\n* home\n* night\n* work\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "categoryCode": {
                                            "type": "integer",
                                            "maximum": 9999,
                                            "description": "Four-digit number that the payment card industry uses to classify merchants into market segments. Visa assigned\none or more of these values to your business when you started accepting Visa cards.\n\nIf you do not include this field in your request, CyberSource uses the value in your CyberSource account.\n\nFor processor-specific information, see the merchant_category_code field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nSee \"Aggregator Support,\" page 100.\n\n**CyberSource through VisaNet**\\\nThe value for this field corresponds to the following data in the TC 33 capture file5:\n- Record: CP01 TCR4\n- Position: 150-153\n- Field: Merchant Category Code\n"
                                        },
                                        "submitLocalDateTime": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "minLength": 6,
                                            "description": "Time that the transaction was submitted in local time. The time is in hhmmss format.\n"
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 21,
                                            "description": "Your government-assigned tax identification number.\n\nFor CtV processors, the maximum length is 20.\n\nFor other processor-specific information, see the merchant_vat_registration_number field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                        },
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nFor Payouts:\n* Paymentech (22)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 13,
                                                    "description": "Merchant City. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Merchant State. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n* FDCCompass (13)\n* Paymentech (13)\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "recipientInformation": {
                                    "type": "object",
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "maxLength": 35,
                                            "description": "First name of recipient.\ncharacters.\n* CTV (14)\n* Paymentech (30)\n"
                                        },
                                        "middleInitial": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Middle Initial of recipient. Required only for FDCCompass.\n"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "maxLength": 35,
                                            "description": "Last name of recipient.\ncharacters.\n* CTV (14)\n* Paymentech (30)\n"
                                        },
                                        "address1": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Recipient address information. Required only for FDCCompass."
                                        },
                                        "locality": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Recipient city. Required only for FDCCompass."
                                        },
                                        "administrativeArea": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Recipient State. Required only for FDCCompass."
                                        },
                                        "country": {
                                            "type": "string",
                                            "maxLength": 2,
                                            "description": "Recipient country code. Required only for FDCCompass."
                                        },
                                        "postalCode": {
                                            "type": "string",
                                            "maxLength": 10,
                                            "description": "Recipient postal code. Required only for FDCCompass."
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Recipient phone number. Required only for FDCCompass."
                                        },
                                        "dateOfBirth": {
                                            "type": "string",
                                            "minLength": 8,
                                            "maxLength": 8,
                                            "description": "Recipient date of birth in YYYYMMDD format. Required only for FDCCompass."
                                        }
                                    }
                                },
                                "senderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "referenceNumber": {
                                            "type": "string",
                                            "maxLength": 19,
                                            "description": "Reference number generated by you that uniquely identifies the sender."
                                        },
                                        "account": {
                                            "type": "object",
                                            "properties": {
                                                "fundsSource": {
                                                    "type": "string",
                                                    "minLength": 2,
                                                    "maxLength": 2,
                                                    "description": "Source of funds. Possible values:\n\n  Paymentech, CTV, FDC Compass:\n - 01: Credit card\n - 02: Debit card\n - 03: Prepaid card\n\n  Paymentech, CTV -\n - 04: Cash\n - 05: Debit or deposit account that is not linked to a Visa card. Includes checking accounts, savings\n       accounts, and proprietary debit or ATM cards.\n - 06: Credit account that is not linked to a Visa card. Includes credit cards and proprietary lines\n       of credit.\n\n  FDCCompass -\n  - 04: Deposit Account\n\n**Funds Disbursement**\n\nThis value is most likely 05 to identify that the originator used a deposit account to fund the\ndisbursement.\n\n**Credit Card Bill Payment**\n\nThis value must be 02, 03, 04, or 05.\n"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "maxLength": 34,
                                                    "description": "The account number of the entity funding the transaction. It is the sender\u2019s account number. It can\nbe a debit/credit card account number or bank account number.\n\n**Funds disbursements**\n\nThis field is optional.\n\n**All other transactions**\n\nThis field is required when the sender funds the transaction with a financial instrument, for example\ndebit card.\nLength:\n* FDCCompass (<= 19)\n* Paymentech (<= 16)\n"
                                                }
                                            }
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "maxLength": 35,
                                            "description": "First name of sender (Optional).\n* CTV (14)\n* Paymentech (30)\n"
                                        },
                                        "middleInitial": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Recipient middle initial (Optional).\n"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "maxLength": 35,
                                            "description": "Recipient last name (Optional).\n* CTV (14)\n* Paymentech (30)\n"
                                        },
                                        "name": {
                                            "type": "string",
                                            "maxLength": 24,
                                            "description": "Name of sender.\n\n**Funds Disbursement**\n\nThis value is the name of the originator sending the funds disbursement.\n* CTV, Paymentech (30)\n"
                                        },
                                        "address1": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Street address of sender.\n\n**Funds Disbursement**\n\nThis value is the address of the originator sending the funds disbursement.\n"
                                        },
                                        "locality": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "City of sender.\n\n**Funds Disbursement**\n\nThis value is the city of the originator sending the funds disbursement.\n"
                                        },
                                        "administrativeArea": {
                                            "type": "string",
                                            "maxLength": 2,
                                            "description": "Sender\u2019s state. Use the State, Province, and Territory Codes for the United States and Canada.\n"
                                        },
                                        "countryCode": {
                                            "type": "string",
                                            "maxLength": 2,
                                            "description": "Country of sender. Use the ISO Standard Country Codes.\n* CTV (3)\n"
                                        },
                                        "postalCode": {
                                            "type": "string",
                                            "maxLength": 10,
                                            "description": "Sender\u2019s postal code. Required only for FDCCompass."
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Sender\u2019s phone number. Required only for FDCCompass."
                                        },
                                        "dateOfBirth": {
                                            "type": "string",
                                            "minLength": 8,
                                            "maxLength": 8,
                                            "description": "Sender\u2019s date of birth in YYYYMMDD format. Required only for FDCCompass."
                                        },
                                        "vatRegistrationNumber": {
                                            "type": "string",
                                            "maxLength": 13,
                                            "description": "Customer's government-assigned tax identification number.\n"
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "businessApplicationId": {
                                            "type": "string",
                                            "maxLength": 2,
                                            "description": "Payouts transaction type.\n\nApplicable Processors: FDC Compass, Paymentech, CtV\n\nPossible values:\n\n**Credit Card Bill Payment**\n\n - **CP**: credit card bill payment\n\n**Funds Disbursement**\n\n - **FD**: funds disbursement\n - **GD**: government disbursement\n - **MD**: merchant disbursement\n\n**Money Transfer**\n\n - **AA**: account to account. Sender and receiver are same person.\n - **PP**: person to person. Sender and receiver are different.\n\n**Prepaid Load**\n\n - **TU**: top up\n"
                                        },
                                        "networkRoutingOrder": {
                                            "type": "string",
                                            "maxLength": 30,
                                            "description": "This field is optionally used by Push Payments Gateway participants (merchants and acquirers) to get the attributes for specified networks only.\nThe networks specified in this field must be a subset of the information provided during program enrollment. Refer to Sharing Group Code/Network Routing Order.\nNote: Supported only in US for domestic transactions involving Push Payments Gateway Service.\n\nVisaNet checks to determine if there are issuer routing preferences for any of the networks specified by the network routing order.\nIf an issuer preference exists for one of the specified debit networks, VisaNet makes a routing selection based on the issuer\u2019s preference. \nIf an issuer preference exists for more than one of the specified debit networks, or if no issuer preference exists, VisaNet makes a selection based on the acquirer\u2019s routing priorities. \n\nSee https://developer.visa.com/request_response_codes#network_id_and_sharing_group_code , under section 'Network ID and Sharing Group Code' on the left panel for available values\n"
                                        },
                                        "commerceIndicator": {
                                            "type": "string",
                                            "maxLength": 13,
                                            "description": "Type of transaction.\n\nSome payment card companies use this information when determining discount rates. When you omit this field for Ingenico ePayments, the processor uses the default transaction type they have on file for you instead of the default value listed here.\n\nPossible value for Fast Payments transactions:\n - internet\n\n**Ingenico ePayments**\\\nIngenico ePayments was previously called _Global Collect_.\n\n**Payer Authentication Transactions**\\\nFor the possible values and requirements, see \"Payer Authentication,\" page 180.\n\n**Other Types of Transactions**\\\nSee Appendix G, \"Commerce Indicators,\" on page 353.\n"
                                        },
                                        "reconciliationId": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Please check with Cybersource customer support to see if your merchant account is configured correctly so you\ncan include this field in your request.\n* For Payouts: max length for FDCCompass is String (22).\n"
                                        },
                                        "payoutsOptions": {
                                            "type": "object",
                                            "properties": {
                                                "acquirerMerchantId": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "This field identifies the card acceptor for defining the point of service terminal in both local and interchange environments. An acquirer-assigned code identifying the card acceptor for the transaction. \nDepending on the acquirer and merchant billing and reporting requirements, the code can represent a merchant, a specific merchant location, or a specific merchant location terminal.\nAcquiring Institution Identification Code uniquely identifies the merchant.\nThe value from the original is required in any subsequent messages, including reversals, chargebacks, and representments.\n* Applicable only for CTV for Payouts.\n"
                                                },
                                                "acquirerBin": {
                                                    "type": "string",
                                                    "maxLength": 11,
                                                    "description": "This code identifies the financial institution acting as the acquirer of this customer transaction. The acquirer is the member or system user that signed the merchant or ADM or dispensed cash. \nThis number is usually Visa-assigned.\n* Applicable only for CTV for Payouts.\n"
                                                },
                                                "retrievalReferenceNumber": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "This field contains a number that is used with other data elements as a key to identify and track all messages related to a given cardholder transaction; that is, to a given transaction set.\n* Applicable only for CTV for Payouts.\n"
                                                },
                                                "accountFundingReferenceId": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Visa-generated transaction identifier (TID) that is unique for each original authorization and financial request.\n* Applicable only for CTV for Payouts.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "paymentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "The customer\u2019s payment card number, also knows as the Primary Account Nunmber (PAN). You can also use this field\nfor encoded account numbers.\n\nFor processor-specific information, see the `customer_cc_number` field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Two-digit month in which the payment card expires.\n\nFormat: `MM`.\n\nValid values: `01` through `12`.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`01` through `12`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `12`.\n\nFor processor-specific information, see the `customer_cc_expmo` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Four-digit year in which the credit card expires.\n\nFormat: `YYYY`.\n\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`1900` through `3000`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**FDC Nashville Global and FDMS South**\\\nYou can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `2021`.\n\nFor processor-specific information, see the `customer_cc_expyr` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "sourceAccountType": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Flag that specifies the type of account associated with the card. The cardholder provides this information\nduring the payment process.\n\nThis field is required in the following cases:\n  - Debit transactions on Cielo and Comercio Latino.\n  - Transactions with Brazilian-issued cards on CyberSource through VisaNet.\n  - Applicable only for Visa Platform Connect (VPC).\n    \n**Note**\\\nCombo cards in Brazil contain credit and debit functionality in a single card. Visa systems use a credit bank\nidentification number (BIN) for this type of card. Using the BIN to determine whether a card is debit or\ncredit can cause transactions with these cards to be processed incorrectly. CyberSource strongly recommends\nthat you include this field for combo card transactions.\n\nPossible values include the following.\n\n - **CHECKING**: Checking account\n - **CREDIT**: Credit card account\n - **SAVING**: Saving account\n - **LINE_OF_CREDIT**: Line of credit or credit portion of combo card\n - **PREPAID**: Prepaid card account or prepaid portion of combo card\n - **UNIVERSAL**: Universal account\n"
                                                }
                                            }
                                        },
                                        "customer": {
                                            "type": "object",
                                            "properties": {
                                                "customerId": {
                                                    "type": "string",
                                                    "description": "Unique identifier for the customer's card and billing information.\n\nWhen you use Payment Tokenization or Recurring Billing and you include this value in\nyour request, many of the fields that are normally required for an authorization or credit\nbecome optional.\n\n**NOTE** When you use Payment Tokenization or Recurring Billing, the value for the Customer ID is actually the Cybersource payment token for a customer. This token stores information such as the consumer\u2019s card number so it can be applied towards bill payments, recurring payments, or one-time payments. By using this token in a payment API request, the merchant doesn't need to pass in data such as the card number or expiration date in the request itself.\n\nSee \"Payment Tokenization,\" page 222, and \"Recurring Billing,\" page 225.\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "clientReferenceInformation": {
                                    "code": "33557799"
                                },
                                "senderInformation": {
                                    "referenceNumber": "1234567890",
                                    "address1": "900 Metro Center Blvd.900",
                                    "countryCode": "US",
                                    "locality": "Foster City",
                                    "name": "Thomas Jefferson",
                                    "administrativeArea": "CA",
                                    "account": {
                                        "number": "1234567890123456789012345678901234",
                                        "fundsSource": "01"
                                    }
                                },
                                "processingInformation": {
                                    "commerceIndicator": "internet",
                                    "businessApplicationId": "FD",
                                    "networkRoutingOrder": "ECG"
                                },
                                "payoutsOptions": {
                                    "retrievalReferenceNumber": "123456789012",
                                    "acquirerBin": "567890124"
                                },
                                "reconciliationId": "1087488702VIAQNSPQ",
                                "orderInformation": {
                                    "amountDetails": {
                                        "totalAmount": "100.00",
                                        "currency": "USD"
                                    }
                                },
                                "merchantInformation": {
                                    "merchantCategoryCode": "123",
                                    "merchantDescriptor": {
                                        "country": "US",
                                        "postalCode": "94440",
                                        "locality": "FC",
                                        "name": "Thomas",
                                        "administrativeArea": "CA"
                                    }
                                },
                                "paymentInformation": {
                                    "card": {
                                        "expirationYear": "2025",
                                        "number": "4111111111111111",
                                        "expirationMonth": "12",
                                        "type": "001",
                                        "sourceAccountType": "CH"
                                    }
                                },
                                "recipientInformation": {
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "address1": "Paseo Padre Boulevard",
                                    "locality": "Foster City",
                                    "administrativeArea": "CA",
                                    "postalCode": "94400",
                                    "phoneNumber": "6504320556",
                                    "dateOfBirth": "19801009",
                                    "country": "US"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "ptsV2PayoutsPost201Response",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "description": "This is the endpoint of the resource that was created by the successful request."
                                                        },
                                                        "method": {
                                                            "type": "string",
                                                            "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "id": {
                                            "type": "string",
                                            "maxLength": 26,
                                            "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                        },
                                        "submitTimeUtc": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "minLength": 6,
                                            "description": "Time of request in UTC. `Format: YYYY-MM-DDThh:mm:ssZ`\n\nExample 2016-08-11T22:47:57Z equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The T separates the date and the\ntime. The Z indicates UTC.\n"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "The status of the submitted transaction.\n\nPossible values:\n - ACCEPTED\n - DECLINED\n - INVALID_REQUEST\n",
                                            "enum": [
                                                "ACCEPTED",
                                                "DECLINED",
                                                "INVALID_REQUEST"
                                            ]
                                        },
                                        "reconciliationId": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Cybersource or merchant generated transaction reference number. This is sent to the processor and is echoed back in the response to the merchant. This is\nThis value is used for reconciliation purposes.\n"
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errorInformation": {
                                            "type": "object",
                                            "properties": {
                                                "reason": {
                                                    "type": "string",
                                                    "description": "The reason of the status.\n\nPossible values:\n - EXPIRED_CARD\n - PROCESSOR_DECLINED\n - STOLEN_LOST_CARD\n - UNAUTHORIZED_CARD\n - CVN_NOT_MATCH\n - INVALID_CVN\n - BLACKLISTED_CUSTOMER\n - INVALID_ACCOUNT\n - GENERAL_DECLINE\n - RISK_CONTROL_DECLINE\n - PROCESSOR_RISK_CONTROL_DECLINE\n",
                                                    "enum": [
                                                        "EXPIRED_CARD",
                                                        "PROCESSOR_DECLINED",
                                                        "STOLEN_LOST_CARD",
                                                        "UNAUTHORIZED_CARD",
                                                        "CVN_NOT_MATCH",
                                                        "INVALID_CVN",
                                                        "BLACKLISTED_CUSTOMER",
                                                        "INVALID_ACCOUNT",
                                                        "GENERAL_DECLINE",
                                                        "RISK_CONTROL_DECLINE",
                                                        "PROCESSOR_RISK_CONTROL_DECLINE"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "description": "The detail message related to the status and reason listed above."
                                                },
                                                "details": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "field": {
                                                                "type": "string",
                                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                                            },
                                                            "reason": {
                                                                "type": "string",
                                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                                "enum": [
                                                                    "MISSING_FIELD",
                                                                    "INVALID_DATA"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "clientReferenceInformation": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                                },
                                                "submitLocalDateTime": {
                                                    "type": "string",
                                                    "maxLength": 14,
                                                    "description": "Date and time at your physical location.\n\nFormat: `YYYYMMDDhhmmss`, where YYYY = year, MM = month, DD = day, hh = hour, mm = minutes ss = seconds\n"
                                                },
                                                "ownerMerchantId": {
                                                    "type": "string",
                                                    "description": "Merchant ID that was used to create the subscription or customer profile for which the service was requested.\n\nIf your CyberSource account is enabled for Recurring Billing, this field is returned only if you are using\nsubscription sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the subscription sharing information in Recurring Billing Using the Simple Order API.\n\nIf your CyberSource account is enabled for Payment Tokenization, this field is returned only if you are using\nprofile sharing and if your merchant ID is in the same merchant ID pool as the owner merchant ID.\n\nSee the profile sharing information in Payment Tokenization Using the Simple Order API.\n"
                                                }
                                            }
                                        },
                                        "merchantInformation": {
                                            "type": "object",
                                            "properties": {
                                                "merchantDescriptor": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nFor Payouts:\n* Paymentech (22)\n"
                                                        },
                                                        "locality": {
                                                            "type": "string",
                                                            "maxLength": 13,
                                                            "description": "Merchant City. For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "orderInformation": {
                                            "type": "object",
                                            "properties": {
                                                "amountDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "totalAmount": {
                                                            "type": "string",
                                                            "maxLength": 19,
                                                            "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                        },
                                                        "currency": {
                                                            "type": "string",
                                                            "maxLength": 3,
                                                            "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                        },
                                                        "settlementAmount": {
                                                            "type": "string",
                                                            "maxLength": 12,
                                                            "description": "This is a multicurrency field. It contains the transaction amount (field 4), converted to the Currency used to bill the cardholder\u2019s account.\n"
                                                        },
                                                        "settlementCurrency": {
                                                            "type": "string",
                                                            "maxLength": 3,
                                                            "description": "This is a multicurrency-only field. It contains a 3-digit numeric code that identifies the currency used by the issuer to bill the cardholder's account.\n"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "processorInformation": {
                                            "type": "object",
                                            "properties": {
                                                "approvalCode": {
                                                    "type": "string",
                                                    "maxLength": 6,
                                                    "description": "Issuer-generated approval code for the transaction."
                                                },
                                                "responseCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Transaction status from the processor."
                                                },
                                                "transactionId": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Network transaction identifier (TID). This value can be used to identify a specific transaction when\nyou are discussing the transaction with your processor.\n"
                                                },
                                                "systemTraceAuditNumber": {
                                                    "type": "string",
                                                    "maxLength": 6,
                                                    "description": "This field is returned only for **American Express Direct** and **CyberSource through VisaNet**.\n\n**American Express Direct**\n\nSystem trace audit number (STAN). This value identifies the transaction and is useful when investigating a\nchargeback dispute.\n\n**CyberSource through VisaNet**\n\nSystem trace number that must be printed on the customer\u2019s receipt.\n"
                                                },
                                                "responseCodeSource": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Used by Visa only and contains the response source/reason code that identifies the source of the response decision.\n"
                                                }
                                            }
                                        },
                                        "recipientInformation": {
                                            "type": "object",
                                            "properties": {
                                                "card": {
                                                    "type": "object",
                                                    "properties": {
                                                        "balance": {
                                                            "type": "string",
                                                            "maxLength": 12,
                                                            "description": "This field shows the available balance in the prepaid account. \nAcquirers always receive the available balance in the transaction currency.\n"
                                                        },
                                                        "currency": {
                                                            "type": "string",
                                                            "maxLength": 3,
                                                            "description": "This is a multicurrency-only field. It contains a 3-digit numeric code that identifies the currency used by the issuer.\n"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ],
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/pts/v2/payouts/5287556536256000401540",
                                        "method": "GET"
                                    }
                                },
                                "clientReferenceInformation": {
                                    "code": "1528755653559"
                                },
                                "id": "5287556536256000401540",
                                "orderInformation": {
                                    "amountDetails": {
                                        "totalAmount": "100.00",
                                        "currency": "USD"
                                    }
                                },
                                "processorInformation": {
                                    "systemTraceAuditNumber": "897596",
                                    "approvalCode": "831000",
                                    "transactionId": "016153570198200",
                                    "responseCode": "00",
                                    "responseCodeSource": "5"
                                },
                                "reconciliationId": "1087488702VIAQNSPQ",
                                "status": "ACCEPTED",
                                "submitTimeUtc": "2018-06-11T222054Z"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "title": "ptsV2PayoutsPost400Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "maxLength": 6,
                                    "minLength": 6,
                                    "description": "Time of request in UTC. `Format: YYYY-MM-DDThh:mm:ssZ`\n\nExample 2016-08-11T22:47:57Z equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The T separates the date and the\ntime. The Z indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction."
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_CARD\n - INVALID_MERCHANT_CONFIGURATION\n - INVALID_AMOUNT\n - DEBIT_CARD_USEAGE_EXCEEDD_LIMIT\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_CARD",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "INVALID_AMOUNT",
                                        "DEBIT_CARD_USEAGE_EXCEEDD_LIMIT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "ptsV2PayoutsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Payout (Card not Token)",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "33557799"
                            },
                            "senderInformation": {
                                "referenceNumber": "1234567890",
                                "address1": "900 Metro Center Blvd.900",
                                "countryCode": "US",
                                "locality": "Foster City",
                                "name": "Company Name",
                                "administrativeArea": "CA",
                                "account": {
                                    "fundsSource": "05"
                                }
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet",
                                "businessApplicationId": "FD",
                                "networkRoutingOrder": "V8"
                            },
                            "orderInformation": {
                                "amountDetails": {
                                    "totalAmount": "100.00",
                                    "currency": "USD"
                                }
                            },
                            "merchantInformation": {
                                "merchantDescriptor": {
                                    "country": "US",
                                    "postalCode": "94440",
                                    "locality": "FC",
                                    "name": "Sending Company Name",
                                    "administrativeArea": "CA"
                                }
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationYear": "2025",
                                    "number": "4111111111111111",
                                    "expirationMonth": "12",
                                    "type": "001"
                                }
                            },
                            "recipientInformation": {
                                "firstName": "John",
                                "lastName": "Doe",
                                "address1": "Paseo Padre Boulevard",
                                "locality": "Foster City",
                                "administrativeArea": "CA",
                                "postalCode": "94400",
                                "phoneNumber": "6504320556",
                                "country": "US"
                            }
                        }
                    },
                    "example1": {
                        "summary": "Payout (Token)",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "111111113"
                            },
                            "senderInformation": {
                                "referenceNumber": "1234567890",
                                "address1": "900 Metro Center Blvd.900",
                                "countryCode": "US",
                                "locality": "Foster City",
                                "name": "Company Name",
                                "administrativeArea": "CA",
                                "account": {
                                    "number": "1234567890123456789012345678901234",
                                    "fundsSource": "05"
                                }
                            },
                            "processingInformation": {
                                "commerceIndicator": "internet",
                                "businessApplicationId": "FD",
                                "networkRoutingOrder": "V8"
                            },
                            "orderInformation": {
                                "amountDetails": {
                                    "totalAmount": "111.00",
                                    "currency": "USD"
                                }
                            },
                            "merchantInformation": {
                                "merchantDescriptor": {
                                    "country": "US",
                                    "postalCode": "94440",
                                    "locality": "FC",
                                    "name": "Sending Company Name",
                                    "administrativeArea": "CA"
                                }
                            },
                            "paymentInformation": {
                                "customer": {
                                    "customerId": "7500BB199B4270EFE05340588D0AFCAD"
                                }
                            },
                            "recipientInformation": {
                                "firstName": "John",
                                "lastName": "Doe",
                                "address1": "Paseo Padre Boulevard",
                                "locality": "Foster City",
                                "administrativeArea": "CA",
                                "postalCode": "94400",
                                "phoneNumber": "6504320556",
                                "country": "US"
                            }
                        }
                    }
                }
            }
        },
        "/reporting/v3/report-downloads": {
            "get": {
                "tags": [
                    "ReportDownloads"
                ],
                "summary": "Download a report",
                "description": "Download a report using the unique report name and date.\n",
                "operationId": "downloadReport",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "x-queryParameterDefaults": {
                    "organizationId": "testrest",
                    "reportName": "Demo_Report",
                    "reportDate": "2018-09-30"
                },
                "produces": [
                    "application/xml",
                    "text/csv"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    {
                        "name": "reportDate",
                        "in": "query",
                        "description": "Valid date on which to download the report in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd\n",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "reportName",
                        "in": "query",
                        "description": "Name of the report to download",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "title": "reportingv3ReportDownloadsGet400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "No Reports Found"
                    }
                }
            }
        },
        "/reporting/v3/reports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve available reports",
                "description": "Retrieve a list of the available reports to which\nyou are subscribed. This will also give you the reportId value,\nwhich you can also use to download a report.\n",
                "operationId": "searchReports",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "x-queryParameterDefaults": {
                    "startTime": "2018-10-01T00:00:00.0Z",
                    "endTime": "2018-10-30T23:59:59.0Z",
                    "timeQueryType": "executedTime",
                    "reportMimeType": "application/xml"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Valid report Start Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Valid report End Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "timeQueryType",
                        "in": "query",
                        "description": "Specify time you would like to search",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "reportTimeFrame",
                            "executedTime"
                        ]
                    },
                    {
                        "name": "reportMimeType",
                        "in": "query",
                        "description": "Valid Report Format",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "application/xml",
                            "text/csv"
                        ]
                    },
                    {
                        "name": "reportFrequency",
                        "in": "query",
                        "description": "Valid Report Frequency",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DAILY",
                            "WEEKLY",
                            "MONTHLY",
                            "ADHOC"
                        ]
                    },
                    {
                        "name": "reportName",
                        "in": "query",
                        "description": "Valid Report Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "reportDefinitionId",
                        "in": "query",
                        "description": "Valid Report Definition Id",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "reportStatus",
                        "in": "query",
                        "description": "Valid Report Status",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "COMPLETED",
                            "PENDING",
                            "QUEUED",
                            "RUNNING",
                            "ERROR",
                            "NO_DATA"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "title": "reportingV3ReportsGet200Response",
                            "type": "object",
                            "properties": {
                                "reports": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "reportDefinitionId": {
                                                "type": "string",
                                                "description": "Unique Report Identifier of each report type",
                                                "example": "210"
                                            },
                                            "reportName": {
                                                "type": "string",
                                                "description": "Name of the report specified by merchant while creating the report",
                                                "example": "My Transaction Request Detail Report"
                                            },
                                            "reportMimeType": {
                                                "type": "string",
                                                "example": "application/xml",
                                                "description": "Format of the report to get generated",
                                                "enum": [
                                                    "application/xml",
                                                    "text/csv"
                                                ]
                                            },
                                            "reportFrequency": {
                                                "type": "string",
                                                "example": "DAILY",
                                                "description": "Frequency of the report to get generated",
                                                "enum": [
                                                    "DAILY",
                                                    "WEEKLY",
                                                    "MONTHLY",
                                                    "ADHOC"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status of the report",
                                                "enum": [
                                                    "COMPLETED",
                                                    "PENDING",
                                                    "QUEUED",
                                                    "RUNNING",
                                                    "ERROR",
                                                    "NO_DATA"
                                                ]
                                            },
                                            "reportStartTime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2017-10-01T10:10:10+05:00",
                                                "description": "Specifies the report start time in ISO 8601 format"
                                            },
                                            "reportEndTime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2017-10-02T10:10:10+05:00",
                                                "description": "Specifies the report end time in ISO 8601 format"
                                            },
                                            "timezone": {
                                                "type": "string",
                                                "example": "America/Chicago",
                                                "description": "Time Zone"
                                            },
                                            "reportId": {
                                                "type": "string",
                                                "example": "6d9cb5b6-0e97-2d03-e053-7cb8d30af52e",
                                                "description": "Unique identifier generated for every reports"
                                            },
                                            "organizationId": {
                                                "type": "string",
                                                "example": "Test_MerchantId",
                                                "description": "CyberSource Merchant Id"
                                            },
                                            "queuedTime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2017-10-03T10:10:10+05:00",
                                                "description": "Specifies the time of the report in queued  in ISO 8601 format"
                                            },
                                            "reportGeneratingTime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2017-10-03T10:10:10+05:00",
                                                "description": "Specifies the time of the report started to generate  in ISO 8601 format"
                                            },
                                            "reportCompletedTime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2017-10-03T10:10:10+05:00",
                                                "description": "Specifies the time of the report completed the generation  in ISO 8601 format"
                                            },
                                            "subscriptionType": {
                                                "type": "string",
                                                "example": "CUSTOM",
                                                "description": "Specifies whether the subscription created is either Custom, Standard or Classic\n"
                                            },
                                            "groupId": {
                                                "type": "string",
                                                "example": "12345",
                                                "description": "Id for selected group."
                                            }
                                        },
                                        "description": "Report Search Result Bean"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "title": "reportingV3ReportsGet400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "No Reports Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Create Adhoc Report",
                "description": "Create a one-time report. You must specify the\ntype of report in reportDefinitionName. For a list of values for\nreportDefinitionName, see the [Reporting Developer Guide](https://www.cybersource.com/developers/documentation/reporting_and_reconciliation)\n",
                "operationId": "createReport",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "x-queryParameterDefaults": {
                    "organizationId": "testrest"
                },
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    {
                        "in": "body",
                        "name": "requestBody",
                        "description": "Report subscription request payload",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "organizationId": {
                                    "type": "string",
                                    "description": "Valid CyberSource Organization Id",
                                    "pattern": "[a-zA-Z0-9-_]+",
                                    "example": "Test_Merchatnt_id"
                                },
                                "reportDefinitionName": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 80,
                                    "pattern": "[a-zA-Z0-9-]+",
                                    "example": "TransactionRequestClass"
                                },
                                "reportFields": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of fields which needs to get included in a report",
                                    "example": [
                                        "Request.RequestID",
                                        "Request.TransactionDate",
                                        "Request.MerchantID"
                                    ]
                                },
                                "reportMimeType": {
                                    "type": "string",
                                    "description": " Format of the report",
                                    "example": "application/xml",
                                    "enum": [
                                        "application/xml",
                                        "text/csv"
                                    ]
                                },
                                "reportName": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 128,
                                    "pattern": "[a-zA-Z0-9-_ ]+",
                                    "description": "Name of the report",
                                    "example": "My Transaction Request report"
                                },
                                "timezone": {
                                    "type": "string",
                                    "description": "Timezone of the report",
                                    "example": "America/Chicago"
                                },
                                "reportStartTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Start time of the report",
                                    "example": "2017-10-01T10:10:10+05:00"
                                },
                                "reportEndTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "End time of the report",
                                    "example": "2017-10-02T10:10:10+05:00"
                                },
                                "reportFilters": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "List of filters to apply",
                                    "example": {
                                        "Application.Name": [
                                            "ics_auth",
                                            "ics_bill"
                                        ]
                                    }
                                },
                                "reportPreferences": {
                                    "type": "object",
                                    "properties": {
                                        "signedAmounts": {
                                            "type": "boolean",
                                            "description": "Indicator to determine whether negative sign infront of amount for all refunded transaction"
                                        },
                                        "fieldNameConvention": {
                                            "type": "string",
                                            "description": "Specify the field naming convention to be followed in reports (applicable to only csv report formats",
                                            "enum": [
                                                "SOAPI",
                                                "SCMP"
                                            ]
                                        }
                                    },
                                    "description": "Report Preferences"
                                },
                                "groupName": {
                                    "type": "string",
                                    "pattern": "[0-9]*",
                                    "description": "Specifies the group name",
                                    "example": "myGroup"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "304": {
                        "description": "Not Modified"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "reportingV3ReportsPost400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Create Adhoc Report",
                        "value": {
                            "reportDefinitionName": "TransactionRequestClass",
                            "reportFields": [
                                "Request.RequestID",
                                "Request.TransactionDate",
                                "Request.MerchantID",
                                "AFSFields.IPAddress",
                                "AFSFields.IPCountry",
                                "AFSFields.IPRoutingMethod",
                                "AFSFields.IPState",
                                "Application.Name",
                                "BankInfo.Address",
                                "BankInfo.BranchCode",
                                "BankInfo.City",
                                "BankInfo.Country",
                                "BankInfo.Name",
                                "BankInfo.SwiftCode",
                                "BillTo.Address1",
                                "BillTo.Address2",
                                "BillTo.City",
                                "BillTo.CompanyName",
                                "BillTo.CompanyTaxID",
                                "BillTo.Country",
                                "BillTo.Email",
                                "BillTo.FirstName",
                                "BillTo.LastName",
                                "BillTo.MiddleName",
                                "BillTo.NameSuffix",
                                "BillTo.PersonalID",
                                "BillTo.Phone",
                                "BillTo.State",
                                "BillTo.Title",
                                "BillTo.Zip",
                                "ChargebackAndRetrieval.AdjustmentAmount",
                                "ChargebackAndRetrieval.AdjustmentCurrency",
                                "ChargebackAndRetrieval.ARN",
                                "ChargebackAndRetrieval.CaseIdentifier",
                                "ChargebackAndRetrieval.CaseNumber",
                                "ChargebackAndRetrieval.CaseTime",
                                "ChargebackAndRetrieval.CaseType",
                                "ChargebackAndRetrieval.ChargebackAmount",
                                "ChargebackAndRetrieval.ChargebackCurrency",
                                "ChargebackAndRetrieval.ChargebackMessage",
                                "ChargebackAndRetrieval.ChargebackReasonCode",
                                "ChargebackAndRetrieval.ChargebackReasonCodeDescription",
                                "ChargebackAndRetrieval.ChargebackTime",
                                "ChargebackAndRetrieval.DocumentIndicator",
                                "ChargebackAndRetrieval.FeeAmount",
                                "ChargebackAndRetrieval.FeeCurrency",
                                "ChargebackAndRetrieval.FinancialImpact",
                                "ChargebackAndRetrieval.FinancialImpactType",
                                "ChargebackAndRetrieval.MerchantCategoryCode",
                                "ChargebackAndRetrieval.PartialIndicator",
                                "ChargebackAndRetrieval.ResolutionTime",
                                "ChargebackAndRetrieval.ResolvedToIndicator",
                                "ChargebackAndRetrieval.RespondByDate",
                                "ChargebackAndRetrieval.TransactionType",
                                "Check.AccountEncoderID",
                                "Check.BankTransitNumber",
                                "Check.SecCode",
                                "CustomerFields.BillingAddress1",
                                "CustomerFields.BillingAddress2",
                                "CustomerFields.BillingCity",
                                "CustomerFields.BillingCompanyName",
                                "CustomerFields.BillingCountry",
                                "CustomerFields.BillingEmail",
                                "CustomerFields.BillingFirstName",
                                "CustomerFields.BillingLastName",
                                "CustomerFields.BillingPhone",
                                "CustomerFields.BillingPostalCode",
                                "CustomerFields.BillingState",
                                "CustomerFields.CustomerID",
                                "CustomerFields.CustomerUserName",
                                "CustomerFields.PersonalId(CPF/CNPJ)",
                                "CustomerFields.ShippingAddress1",
                                "CustomerFields.ShippingAddress2",
                                "CustomerFields.ShippingCity",
                                "CustomerFields.ShippingCompanyName",
                                "CustomerFields.ShippingCountry",
                                "CustomerFields.ShippingFirstName",
                                "CustomerFields.ShippingLastName",
                                "CustomerFields.ShippingPhone",
                                "CustomerFields.ShippingPostalCode",
                                "CustomerFields.ShippingState",
                                "DecisionManagerEvents.EventPolicy",
                                "DecisionManagerEvents.TypeofEvent",
                                "Device.DeviceID",
                                "DeviceFingerprintFields.abcd",
                                "DeviceFingerprintFields.BrowserLanguage",
                                "DeviceFingerprintFields.DeviceLatitude",
                                "DeviceFingerprintFields.DeviceLongitude",
                                "DeviceFingerprintFields.displayNameFinalCheck",
                                "DeviceFingerprintFields.DMESignOffFieldEdit",
                                "DeviceFingerprintFields.Fingerprint/DeviceFingerprint",
                                "DeviceFingerprintFields.FlashEnabled",
                                "DeviceFingerprintFields.FlashOperatingSystem",
                                "DeviceFingerprintFields.FlashVersion",
                                "DeviceFingerprintFields.GPSAccuracy",
                                "DeviceFingerprintFields.ImagesEnabled",
                                "DeviceFingerprintFields.Jailbreak/RootPrivileges",
                                "DeviceFingerprintFields.JavaScriptEnabled",
                                "DeviceFingerprintFields.ProfiledURL",
                                "DeviceFingerprintFields.ProxyIPAddress",
                                "DeviceFingerprintFields.ProxyIPAddressActivities",
                                "DeviceFingerprintFields.ProxyServerType",
                                "DeviceFingerprintFields.ScreenResolution",
                                "DeviceFingerprintFields.SignOffFieldDMEEditNewOne",
                                "DeviceFingerprintFields.SmartID",
                                "DeviceFingerprintFields.SmartIDConfidenceLevel",
                                "DeviceFingerprintFields.TimeOnPage",
                                "DeviceFingerprintFields.TrueIPAddress",
                                "DeviceFingerprintFields.TrueIPAddressActivities",
                                "DeviceFingerprintFields.TrueIPAddressAttributes",
                                "DeviceFingerprintFields.txdea1",
                                "DeviceFingerprintFields.txdesv",
                                "EmailageFields.FraudType",
                                "EmailageFields.IP Postal",
                                "EmailageFields.IPCity",
                                "EmailageFields.IPCountry",
                                "EmailageFields.IPRegion",
                                "EmailageFields.SourceIndustry",
                                "Event.Amount",
                                "Event.CurrencyCode",
                                "Event.Event",
                                "Event.EventDate",
                                "Event.ProcessorMessage",
                                "Exception.Action",
                                "Exception.CYBSExceptionID",
                                "Exception.DccLookupStatus",
                                "Exception.ExceptionAmount",
                                "Exception.ExceptionAmountCurrency",
                                "Exception.ExceptionCategory",
                                "Exception.ExceptionDate",
                                "Exception.ExceptionDescription",
                                "Exception.ExceptionDeviceHardwareRevision",
                                "Exception.ExceptionDeviceID",
                                "Exception.ExceptionDeviceOS",
                                "Exception.ExceptionDeviceOSVersion",
                                "Exception.ExceptionDeviceTerminalID",
                                "Exception.ExceptionMessage",
                                "Exception.ExceptionReasonDescription",
                                "Exception.ExceptionStatus",
                                "Exception.ExceptionStatusCode",
                                "Exception.ExceptionType",
                                "Exception.FinancialStatus",
                                "Exception.LastActionDate",
                                "Exception.NextActionDate",
                                "Exception.OriginalTransactionSubmissionDate",
                                "Exception.PaymentNumber",
                                "Exception.ProcessorCaseID",
                                "Exception.ProcessorResponseCode",
                                "Exception.ReasonCode",
                                "Exception.RetryCount",
                                "Fee.AssessmentAmount",
                                "Fee.AssessmentCurrency",
                                "Fee.BillingCycle",
                                "Fee.BillingType",
                                "Fee.ClearedInterchangeLevel",
                                "Fee.DiscountAmount",
                                "Fee.DiscountCurrency",
                                "Fee.DiscountRate",
                                "Fee.DowngradeReasonCode",
                                "Fee.InterchangeAmount",
                                "Fee.InterchangeCurrency",
                                "Fee.InterchangeRate",
                                "Fee.PerItemFeeAmount",
                                "Fee.PerItemFeeCurrency",
                                "Fee.PricedInterchangeLevel",
                                "Fee.ServiceFeeAmount",
                                "Fee.ServiceFeeAmountCcy",
                                "Fee.ServiceFeeFixedAmount",
                                "Fee.ServiceFeeFixedAmountCcy",
                                "Fee.ServiceFeeRate",
                                "Fee.SettlementAmount",
                                "Fee.SettlementCurrency",
                                "Fee.SettlementTime",
                                "Fee.SettlementTimeZone",
                                "Fee.SourceDescriptor",
                                "Fee.TotalFeeAmount",
                                "Fee.TotalFeeCurrency",
                                "Funding.AdjustmentAmount",
                                "Funding.AdjustmentCurrency",
                                "Funding.AdjustmentDescription",
                                "Funding.AdjustmentType",
                                "FundTransfer.BankCheckDigit",
                                "FundTransfer.IbanIndicator",
                                "Invoice.BillingGroupDescription",
                                "Invoice.NotProcessed",
                                "Invoice.OrganizationID",
                                "Invoice.PerformedServices",
                                "Invoice.Processed",
                                "Invoice.Total",
                                "JP.Amount",
                                "JP.AuthForward",
                                "JP.AuthorizationCode",
                                "JP.CardSuffix",
                                "JP.Currency",
                                "JP.CustomerFirstName",
                                "JP.CustomerLastName",
                                "JP.Date",
                                "JP.Gateway",
                                "JP.JPOInstallmentMethod",
                                "JP.JPOPaymentMethod",
                                "JP.MerchantID",
                                "JP.MerchantReferenceNumber",
                                "JP.PaymentMethod",
                                "JP.RequestID",
                                "JP.SubscriptionID",
                                "JP.Time",
                                "JP.TransactionReferenceNumber",
                                "JP.TransactionType",
                                "LineItems.FulfillmentType",
                                "LineItems.InvoiceNumber",
                                "LineItems.MerchantProductSku",
                                "LineItems.ProductCode",
                                "LineItems.ProductName",
                                "LineItems.Quantity",
                                "LineItems.TaxAmount",
                                "LineItems.UnitPrice",
                                "MarkAsSuspectFields.MarkingDate",
                                "MarkAsSuspectFields.MarkingNotes",
                                "MarkAsSuspectFields.MarkingReason",
                                "MarkAsSuspectFields.MarkingUserName",
                                "Merchant-DefinedDataFields.MerchantDefinedData1",
                                "Merchant-DefinedDataFields.MerchantDefinedData10",
                                "Merchant-DefinedDataFields.MerchantDefinedData100",
                                "Merchant-DefinedDataFields.MerchantDefinedData11",
                                "Merchant-DefinedDataFields.MerchantDefinedData12",
                                "Merchant-DefinedDataFields.MerchantDefinedData13",
                                "Merchant-DefinedDataFields.MerchantDefinedData14",
                                "Merchant-DefinedDataFields.MerchantDefinedData15",
                                "Merchant-DefinedDataFields.MerchantDefinedData16",
                                "Merchant-DefinedDataFields.MerchantDefinedData17",
                                "Merchant-DefinedDataFields.MerchantDefinedData18",
                                "Merchant-DefinedDataFields.MerchantDefinedData19",
                                "Merchant-DefinedDataFields.MerchantDefinedData2",
                                "Merchant-DefinedDataFields.MerchantDefinedData20",
                                "Merchant-DefinedDataFields.MerchantDefinedData21",
                                "Merchant-DefinedDataFields.MerchantDefinedData22",
                                "Merchant-DefinedDataFields.MerchantDefinedData23",
                                "Merchant-DefinedDataFields.MerchantDefinedData24",
                                "Merchant-DefinedDataFields.MerchantDefinedData25",
                                "Merchant-DefinedDataFields.MerchantDefinedData26",
                                "Merchant-DefinedDataFields.MerchantDefinedData27",
                                "Merchant-DefinedDataFields.MerchantDefinedData28",
                                "Merchant-DefinedDataFields.MerchantDefinedData29",
                                "Merchant-DefinedDataFields.MerchantDefinedData3",
                                "Merchant-DefinedDataFields.MerchantDefinedData30",
                                "Merchant-DefinedDataFields.MerchantDefinedData31",
                                "Merchant-DefinedDataFields.MerchantDefinedData32",
                                "Merchant-DefinedDataFields.MerchantDefinedData34",
                                "Merchant-DefinedDataFields.MerchantDefinedData35",
                                "Merchant-DefinedDataFields.MerchantDefinedData36",
                                "Merchant-DefinedDataFields.MerchantDefinedData37",
                                "Merchant-DefinedDataFields.MerchantDefinedData39",
                                "Merchant-DefinedDataFields.MerchantDefinedData4",
                                "Merchant-DefinedDataFields.MerchantDefinedData40",
                                "Merchant-DefinedDataFields.MerchantDefinedData41",
                                "Merchant-DefinedDataFields.MerchantDefinedData43",
                                "Merchant-DefinedDataFields.MerchantDefinedData44",
                                "Merchant-DefinedDataFields.MerchantDefinedData45",
                                "Merchant-DefinedDataFields.MerchantDefinedData46",
                                "Merchant-DefinedDataFields.MerchantDefinedData48",
                                "Merchant-DefinedDataFields.MerchantDefinedData49",
                                "Merchant-DefinedDataFields.MerchantDefinedData5",
                                "Merchant-DefinedDataFields.MerchantDefinedData50",
                                "Merchant-DefinedDataFields.MerchantDefinedData52",
                                "Merchant-DefinedDataFields.MerchantDefinedData53",
                                "Merchant-DefinedDataFields.MerchantDefinedData54",
                                "Merchant-DefinedDataFields.MerchantDefinedData56",
                                "Merchant-DefinedDataFields.MerchantDefinedData57",
                                "Merchant-DefinedDataFields.MerchantDefinedData58",
                                "Merchant-DefinedDataFields.MerchantDefinedData59",
                                "Merchant-DefinedDataFields.MerchantDefinedData6",
                                "Merchant-DefinedDataFields.MerchantDefinedData61",
                                "Merchant-DefinedDataFields.MerchantDefinedData62",
                                "Merchant-DefinedDataFields.MerchantDefinedData63",
                                "Merchant-DefinedDataFields.MerchantDefinedData65",
                                "Merchant-DefinedDataFields.MerchantDefinedData66",
                                "Merchant-DefinedDataFields.MerchantDefinedData67",
                                "Merchant-DefinedDataFields.MerchantDefinedData68",
                                "Merchant-DefinedDataFields.MerchantDefinedData7",
                                "Merchant-DefinedDataFields.MerchantDefinedData70",
                                "Merchant-DefinedDataFields.MerchantDefinedData71",
                                "Merchant-DefinedDataFields.MerchantDefinedData72",
                                "Merchant-DefinedDataFields.MerchantDefinedData73",
                                "Merchant-DefinedDataFields.MerchantDefinedData74",
                                "Merchant-DefinedDataFields.MerchantDefinedData75",
                                "Merchant-DefinedDataFields.MerchantDefinedData76",
                                "Merchant-DefinedDataFields.MerchantDefinedData77",
                                "Merchant-DefinedDataFields.MerchantDefinedData78",
                                "Merchant-DefinedDataFields.MerchantDefinedData79",
                                "Merchant-DefinedDataFields.MerchantDefinedData8",
                                "Merchant-DefinedDataFields.MerchantDefinedData80",
                                "Merchant-DefinedDataFields.MerchantDefinedData81",
                                "Merchant-DefinedDataFields.MerchantDefinedData82",
                                "Merchant-DefinedDataFields.MerchantDefinedData83",
                                "Merchant-DefinedDataFields.MerchantDefinedData84",
                                "Merchant-DefinedDataFields.MerchantDefinedData85",
                                "Merchant-DefinedDataFields.MerchantDefinedData86",
                                "Merchant-DefinedDataFields.MerchantDefinedData87",
                                "Merchant-DefinedDataFields.MerchantDefinedData88",
                                "Merchant-DefinedDataFields.MerchantDefinedData89",
                                "Merchant-DefinedDataFields.MerchantDefinedData9",
                                "Merchant-DefinedDataFields.MerchantDefinedData90",
                                "Merchant-DefinedDataFields.MerchantDefinedData91",
                                "Merchant-DefinedDataFields.MerchantDefinedData92",
                                "Merchant-DefinedDataFields.MerchantDefinedData93",
                                "Merchant-DefinedDataFields.MerchantDefinedData94",
                                "Merchant-DefinedDataFields.MerchantDefinedData95",
                                "Merchant-DefinedDataFields.MerchantDefinedData96",
                                "Merchant-DefinedDataFields.MerchantDefinedData97",
                                "Merchant-DefinedDataFields.MerchantDefinedData98",
                                "Merchant-DefinedDataFields.MerchantDefinedData99",
                                "OctSummary.AccountId",
                                "OctSummary.ResellerId",
                                "OctSummary.SettlementAmountCurrency",
                                "OctSummary.SettlementDate",
                                "OctSummary.TransactionAmountCurrency",
                                "OrderFields.ConnectionMethod",
                                "OrderFields.MerchantID",
                                "OrderFields.MerchantReferenceNumber",
                                "OrderFields.ReasonCode",
                                "OrderFields.ReplyCode",
                                "OrderFields.ReplyFlag",
                                "OrderFields.ReplyMessage",
                                "OrderFields.RequestID",
                                "OrderFields.ShippingMethod",
                                "OrderFields.TransactionDate",
                                "PayerAuth.RequestID",
                                "PayerAuth.TransactionType",
                                "PaymentData.ACHVerificationResult",
                                "PaymentData.ACHVerificationResultMapped",
                                "PaymentData.AcquirerMerchantID",
                                "PaymentData.AuthIndicator",
                                "PaymentData.AuthorizationCode",
                                "PaymentData.AuthorizationType",
                                "PaymentData.AuthReversalAmount",
                                "PaymentData.AuthReversalResult",
                                "PaymentData.AVSResult",
                                "PaymentData.AVSResultMapped",
                                "PaymentData.BalanceAmount",
                                "PaymentData.BalanceCurrencyCode",
                                "PaymentData.BinNumber",
                                "PaymentData.CardCategory",
                                "PaymentData.CardCategoryCode",
                                "PaymentData.CardPresent",
                                "PaymentData.CurrencyCode",
                                "PaymentData.CVResult",
                                "PaymentData.DCCIndicator",
                                "PaymentData.EMVRequestFallBack",
                                "PaymentData.EVEmail",
                                "PaymentData.EVEmailRaw",
                                "PaymentData.EVName",
                                "PaymentData.EVNameRaw",
                                "PaymentData.EVPhoneNumber",
                                "PaymentData.EVPhoneNumberRaw",
                                "PaymentData.EVPostalCode",
                                "PaymentData.EVPostalCodeRaw",
                                "PaymentData.EVStreet",
                                "PaymentData.EVStreetRaw",
                                "PaymentData.ExchangeRate",
                                "PaymentData.ExchangeRateDate",
                                "PaymentData.MandateReferenceNumber",
                                "PaymentData.NetworkCode",
                                "PaymentData.NetworkTransactionID",
                                "PaymentData.NumberOfInstallments",
                                "PaymentData.OriginalAmount",
                                "PaymentData.OriginalCurrency",
                                "PaymentData.PaymentProductCode",
                                "PaymentData.POSEntryMode",
                                "PaymentData.ProcessorMID",
                                "PaymentData.ProcessorResponseCode",
                                "PaymentData.ProcessorResponseID",
                                "PaymentData.ProcessorTID",
                                "PaymentData.ProcessorTransactionID",
                                "PaymentData.RequestedAmount",
                                "PaymentData.RequestedAmountCurrencyCode",
                                "PaymentData.SubMerchantCity",
                                "PaymentData.SubMerchantCountry",
                                "PaymentData.SubMerchantEmail",
                                "PaymentData.SubMerchantID",
                                "PaymentData.SubMerchantName",
                                "PaymentData.SubMerchantPhone",
                                "PaymentData.SubMerchantPostalCode",
                                "PaymentData.SubMerchantState",
                                "PaymentData.SubMerchantStreet",
                                "PaymentData.TargetAmount",
                                "PaymentData.TargetCurrency",
                                "PaymentFields.AccountSuffix",
                                "PaymentFields.CardBIN",
                                "PaymentFields.CardBINCountry",
                                "PaymentFields.CardIssuer",
                                "PaymentFields.CardScheme",
                                "PaymentFields.CardType",
                                "PaymentFields.CardVerificationResult",
                                "PaymentMethod.AccountSuffix",
                                "PaymentMethod.AdditionalCardType",
                                "PaymentMethod.BankAccountName",
                                "PaymentMethod.BankCode",
                                "PaymentMethod.BoletoBarCodeNumber",
                                "PaymentMethod.BoletoNumber",
                                "PaymentMethod.CardType",
                                "PaymentMethod.CheckNumber",
                                "PaymentMethod.ExpirationMonth",
                                "PaymentMethod.ExpirationYear",
                                "PaymentMethod.IssueNumber",
                                "PaymentMethod.MandateId",
                                "PaymentMethod.StartMonth",
                                "PaymentMethod.StartYear",
                                "PaymentMethod.WalletType",
                                "POSTerminalExceptions.AccountSuffix",
                                "POSTerminalExceptions.CurrencyCode",
                                "POSTerminalExceptions.ExpirationMO",
                                "POSTerminalExceptions.ExpirationYR",
                                "POSTerminalExceptions.LastName",
                                "POSTerminalExceptions.MerchantID",
                                "Recipient.RecipientBillingAmount",
                                "Recipient.RecipientBillingCurrency",
                                "Recipient.ReferenceNumber",
                                "Request.PartnerOriginalTransactionID",
                                "Sender.Address",
                                "Sender.City",
                                "Sender.Country",
                                "Sender.DOB",
                                "Sender.FirstName",
                                "Sender.LastName",
                                "Sender.MiddleInitial",
                                "Sender.PhoneNumber",
                                "Sender.PostalCode",
                                "Sender.SenderReferenceNumber",
                                "Sender.SourceOfFunds",
                                "Sender.State",
                                "ShipTo.CompanyName",
                                "Subscriptions.Applications",
                                "Subscriptions.AuthAVSResults",
                                "Subscriptions.AuthCardVerificationResult",
                                "Subscriptions.AuthCode",
                                "Subscriptions.AuthRCode",
                                "Subscriptions.AuthResponseCode",
                                "Subscriptions.AuthType",
                                "Subscriptions.BillToAddress1",
                                "Subscriptions.BillToAddress2",
                                "Subscriptions.BillToCity",
                                "Subscriptions.BillToCompanyName",
                                "Subscriptions.BillToCountry",
                                "Subscriptions.BillToEmail",
                                "Subscriptions.BillToFirstName",
                                "Subscriptions.BillToLastName",
                                "Subscriptions.BillToState",
                                "Subscriptions.BillToZip",
                                "Subscriptions.CardType",
                                "Subscriptions.Comments",
                                "Subscriptions.ConsumerPhone",
                                "Subscriptions.CurrencyCode",
                                "Subscriptions.CustomerCCAccountSuffix",
                                "Subscriptions.CustomerCCExpiryMonth",
                                "Subscriptions.CustomerCCExpiryYear",
                                "Subscriptions.CustomerCCIssueNo",
                                "Subscriptions.CustomerCCRoutingNumber",
                                "Subscriptions.CustomerCCStartMonth",
                                "Subscriptions.CustomerCCStartYear",
                                "Subscriptions.CustomerCCSubTypeDescription",
                                "Subscriptions.EcommerceIndicator",
                                "Subscriptions.IPAddress",
                                "Subscriptions.MerchantDefinedData1",
                                "Subscriptions.MerchantDefinedData2",
                                "Subscriptions.MerchantDefinedData3",
                                "Subscriptions.MerchantDefinedData4",
                                "Subscriptions.MerchantRefNo",
                                "Subscriptions.MerchantSecureData1",
                                "Subscriptions.MerchantSecureData2",
                                "Subscriptions.MerchantSecureData3",
                                "Subscriptions.MerchantSecureData4",
                                "Subscriptions.PaymentProcessor",
                                "Subscriptions.PaymentsSuccess",
                                "Subscriptions.RCode",
                                "Subscriptions.ReasonCode",
                                "Subscriptions.RequestID",
                                "Subscriptions.RequestToken",
                                "Subscriptions.RFlag",
                                "Subscriptions.RMsg",
                                "Subscriptions.ShipToAddress1",
                                "Subscriptions.ShipToAddress2",
                                "Subscriptions.ShipToCity",
                                "Subscriptions.ShipToCompanyName",
                                "Subscriptions.ShipToCountry",
                                "Subscriptions.ShipToFirstName",
                                "Subscriptions.ShipToLastName",
                                "Subscriptions.ShipToState",
                                "Subscriptions.ShipToZip",
                                "Subscriptions.SubscriptionID",
                                "Subscriptions.TaxAmount",
                                "Subscriptions.TransactionDate",
                                "Subscriptions.TransRefNo",
                                "TaxCalculation.Status",
                                "Token.NetworkTokenTransType",
                                "Token.TokenCode",
                                "TransactionDetails.MerchantId",
                                "TransactionDetails.PaymentMethodDesc",
                                "TransactionDetails.PaymentMethodType",
                                "TransactionDetails.RequestId",
                                "TravelFields.DepartureTime",
                                "VelocityMorphing.FieldName",
                                "VelocityMorphing.InfoCode",
                                "WhitepagesProFields.EmailDomainCreationDate"
                            ],
                            "reportMimeType": "application/xml",
                            "reportName": "testrest_v2",
                            "timezone": "GMT",
                            "reportStartTime": "2018-09-01T12:00:00+05:00",
                            "reportEndTime": "2018-09-02T12:00:00+05:00",
                            "reportPreferences": {
                                "signedAmounts": "true",
                                "fieldNameConvention": "SOAPI"
                            }
                        }
                    }
                }
            }
        },
        "/reporting/v3/reports/{reportId}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get Report based on reportId",
                "description": "Download a report using the reportId value. If\nyou don\u2019t already know this value, you can obtain it using the\nRetrieve available reports call.\n",
                "operationId": "getReportByReportId",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "x-queryParameterDefaults": {
                    "organizationId": "testrest"
                },
                "produces": [
                    "application/hal+json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "Valid Report Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "title": "reportingV3ReportsIdGet200Response",
                            "type": "object",
                            "properties": {
                                "organizationId": {
                                    "type": "string",
                                    "description": "CyberSource merchant id",
                                    "example": "myMerchantId"
                                },
                                "reportId": {
                                    "type": "string",
                                    "description": "Report ID Value",
                                    "example": "6da01922-bb8e-a1fb-e053-7cb8d30ade29"
                                },
                                "reportDefinitionId": {
                                    "type": "string",
                                    "description": "Report definition Id",
                                    "example": "210"
                                },
                                "reportName": {
                                    "type": "string",
                                    "description": "Report Name",
                                    "example": "My Transaction Request report"
                                },
                                "reportMimeType": {
                                    "type": "string",
                                    "example": "application/xml",
                                    "description": "Report Format",
                                    "enum": [
                                        "application/xml",
                                        "text/csv"
                                    ]
                                },
                                "reportFrequency": {
                                    "type": "string",
                                    "example": "DAILY",
                                    "description": "Report Frequency Value",
                                    "enum": [
                                        "DAILY",
                                        "WEEKLY",
                                        "MONTHLY",
                                        "ADHOC"
                                    ]
                                },
                                "reportFields": {
                                    "type": "array",
                                    "description": "List of Integer Values",
                                    "items": {
                                        "type": "string"
                                    },
                                    "example": [
                                        "Request.RequestID",
                                        "Request.TransactionDate",
                                        "Request.MerchantID"
                                    ]
                                },
                                "reportStatus": {
                                    "type": "string",
                                    "description": "Report Status Value",
                                    "enum": [
                                        "COMPLETED",
                                        "PENDING",
                                        "QUEUED",
                                        "RUNNING",
                                        "ERROR",
                                        "NO_DATA",
                                        "RERUN"
                                    ]
                                },
                                "reportStartTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2017-10-01T10:10:10+05:00",
                                    "description": "Report Start Time Value"
                                },
                                "reportEndTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2017-10-02T10:10:10+05:00",
                                    "description": "Report End Time Value"
                                },
                                "timezone": {
                                    "type": "string",
                                    "description": "Time Zone Value",
                                    "example": "America/Chicago"
                                },
                                "reportFilters": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "List of filters to apply",
                                    "example": {
                                        "Application.Name": [
                                            "ics_auth",
                                            "ics_bill"
                                        ]
                                    }
                                },
                                "reportPreferences": {
                                    "description": "Report Preferences",
                                    "type": "object",
                                    "properties": {
                                        "signedAmounts": {
                                            "type": "boolean",
                                            "description": "Indicator to determine whether negative sign infront of amount for all refunded transaction"
                                        },
                                        "fieldNameConvention": {
                                            "type": "string",
                                            "description": "Specify the field naming convention to be followed in reports (applicable to only csv report formats",
                                            "enum": [
                                                "SOAPI",
                                                "SCMP"
                                            ]
                                        }
                                    }
                                },
                                "groupId": {
                                    "type": "string",
                                    "description": "Id for selected group.",
                                    "example": "12345"
                                }
                            },
                            "description": "Report Log"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "title": "reportingV3ReportsIdPost400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "No Reports Found"
                    }
                }
            }
        },
        "/reporting/v3/report-definitions/{reportDefinitionName}": {
            "get": {
                "tags": [
                    "ReportDefinitions"
                ],
                "summary": "Get report definition",
                "description": "View the attributes of an individual report type.\nFor a list of values for reportDefinitionName, see the\n[Reporting Developer Guide](https://www.cybersource.com/developers/documentation/reporting_and_reconciliation/)\n",
                "operationId": "getResourceInfoByReportDefinition",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "x-queryParameterDefaults": {
                    "organizationId": "testrest"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionName",
                        "in": "path",
                        "description": "Name of the Report definition to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "title": "reportingV3ReportDefinitionsNameGet200Response",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "reportDefinitionId": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "reportDefintionName": {
                                    "type": "string"
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "filterType": {
                                                "type": "string",
                                                "description": "Attribute Filter Type.",
                                                "example": "MULTI"
                                            },
                                            "default": {
                                                "type": "boolean"
                                            },
                                            "required": {
                                                "type": "boolean"
                                            },
                                            "supportedType": {
                                                "type": "string",
                                                "description": "Valid values for the filter.",
                                                "example": [
                                                    "ics_score",
                                                    "ics_ap_auth",
                                                    "ics_ap_auth_reversal",
                                                    "ics_ap_billing_agreement",
                                                    "ics_ap_cancel",
                                                    "ics_ap_capture",
                                                    "ics_ap_initiate",
                                                    "ics_ap_options",
                                                    "ics_ap_order",
                                                    "ics_ap_refund",
                                                    "ics_ap_sale",
                                                    "ics_ap_sessions",
                                                    "ics_ap_check_status",
                                                    "ics_auto_auth_reversal",
                                                    "ics_bank_transfer",
                                                    "ics_bank_transfer_real_time",
                                                    "ics_bank_transfer_refund",
                                                    "ics_bin_lookup",
                                                    "ics_boleto_payment",
                                                    "ics_cm_action",
                                                    "ics_china_payment",
                                                    "ics_china_refund",
                                                    "ics_auth",
                                                    "ics_auto_full_auth_reversal",
                                                    "ics_auth_refresh",
                                                    "ics_auth_reversal",
                                                    "ics_credit",
                                                    "ics_bill",
                                                    "ics_risk_update",
                                                    "ics_dcc",
                                                    "ics_dcc_update",
                                                    "ics_decision",
                                                    "ics_dm_event",
                                                    "ics_direct_debit",
                                                    "ics_direct_debit_mandate",
                                                    "ics_direct_debit_refund",
                                                    "ics_direct_debit_validate",
                                                    "ics_ecp_authenticate",
                                                    "ics_ecp_credit",
                                                    "ics_ecp_debit",
                                                    "ics_get_masterpass_data",
                                                    "ics_get_visa_checkout_data",
                                                    "ics_create_isv",
                                                    "ics_get_isv_history",
                                                    "ics_add_value_to_isv",
                                                    "ics_get_isv_info",
                                                    "ics_modify_isv",
                                                    "ics_get_isv_profiles",
                                                    "ics_redeem_isv",
                                                    "ics_ifs_setup",
                                                    "ics_ifs_update",
                                                    "ics_ipgeo",
                                                    "ics_oct",
                                                    "ics_pa_enroll",
                                                    "ics_pa_validate",
                                                    "paypal_mip_agreement_ipn",
                                                    "ics_paypal_button_create",
                                                    "ics_paypal_credit",
                                                    "ics_paypal_authorization",
                                                    "ics_paypal_create_agreement",
                                                    "ics_paypal_update_agreement",
                                                    "ics_paypal_ec_order_setup",
                                                    "ics_paypal_auth_reversal",
                                                    "ics_paypal_ec_do_payment",
                                                    "ics_paypal_do_ref_transaction",
                                                    "ics_paypal_refund",
                                                    "ics_paypal_do_capture",
                                                    "paypal_ipn",
                                                    "ics_paypal_preapproved_payment",
                                                    "ics_pinless_debit",
                                                    "ics_pinless_debit_validate",
                                                    "ics_pinless_debit_reversal",
                                                    "ics_export",
                                                    "ics_service_fee_auth",
                                                    "ics_service_fee_auth_reversal",
                                                    "ics_service_fee_bill",
                                                    "ics_service_fee_credit",
                                                    "ics_service_fee_ecp_credit",
                                                    "ics_service_fee_ecp_debit",
                                                    "ics_pay_subscription_create",
                                                    "ics_pay_subscription_create_dup",
                                                    "ics_pay_subscription_delete",
                                                    "ics_pay_subscription_update",
                                                    "ics_dav",
                                                    "ics_download",
                                                    "ics_tax",
                                                    "ics_timeout_auth_reversal",
                                                    "ics_timeout_oct_reversal",
                                                    "ics_void",
                                                    "ics_pin_debit_purchase",
                                                    "ics_pin_debit_credit",
                                                    "ics_pin_debit_reversal",
                                                    "ics_timeout_pin_debit_reversal",
                                                    "ics_gift_card_activation",
                                                    "ics_gift_card_balance_inquiry",
                                                    "ics_gift_card_redemption",
                                                    "ics_gift_card_refund",
                                                    "ics_gift_card_reload",
                                                    "ics_gift_card_void",
                                                    "ics_gift_card_reversal"
                                                ]
                                            }
                                        }
                                    }
                                },
                                "supportedFormats": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "application/xml",
                                            "text/csv"
                                        ]
                                    }
                                },
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "reportingV3ReportDefinitionsNameGet400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "Report not found"
                    }
                }
            }
        },
        "/reporting/v3/report-definitions": {
            "get": {
                "tags": [
                    "ReportDefinitions"
                ],
                "summary": "Get reporting resource information",
                "description": "View a list of supported reports and their attributes before subscribing to them.\n",
                "operationId": "getResourceV2Info",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "x-queryParameterDefaults": {
                    "organizationId": "testrest"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "title": "reportingV3ReportDefinitionsGet200Response",
                            "type": "object",
                            "properties": {
                                "reportDefinitions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "reportDefinitionId": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "| Id  |         Definition Class          |\n| --- | --------------------------------- |\n| 210 | TransactionRequestClass           |\n| 211 | PaymentBatchDetailClass           |\n| 212 | ExceptionDetailClass              |\n| 213 | ProcessorSettlementDetailClass    |\n| 214 | ProcessorEventsDetailClass        |\n| 215 | FundingDetailClass                |\n| 216 | AgingDetailClass                  |\n| 217 | ChargebackAndRetrievalDetailClass |\n| 218 | DepositDetailClass                |\n| 219 | FeeDetailClass                    |\n| 220 | InvoiceSummaryClass               |\n| 221 | PayerAuthDetailClass              |\n| 222 | ConversionDetailClass             |\n| 270 | JPTransactionDetailClass          |\n| 271 | ServiceFeeDetailClass             |\n| 310 | GatewayTransactionRequestClass    |\n| 400 | DecisionManagerEventDetailClass   |\n| 401 | DecisionManagerDetailClass        |\n| 410 | FeeSummaryClass                   |\n| 420 | TaxCalculationClass               |\n| 520 | POSTerminalExceptionClass         |\n| 620 | SubscriptionDetailClass           |\n"
                                            },
                                            "reportDefintionName": {
                                                "type": "string"
                                            },
                                            "supportedFormats": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "items": {
                                                    "type": "string",
                                                    "enum": [
                                                        "application/xml",
                                                        "text/csv"
                                                    ]
                                                }
                                            },
                                            "description": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "reportingV3ReportDefinitionsGet400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "Report not found"
                    }
                }
            }
        },
        "/reporting/v3/report-subscriptions": {
            "get": {
                "tags": [
                    "ReportSubscriptions"
                ],
                "summary": "Get all subscriptions",
                "description": "View a summary of all report subscriptions.\n",
                "operationId": "getAllSubscriptions",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "produces": [
                    "application/hal+json"
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "title": "reportingV3ReportSubscriptionsGet200Response",
                            "type": "object",
                            "properties": {
                                "subscriptions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "organizationId": {
                                                "type": "string",
                                                "description": "Selected Organization Id",
                                                "example": "Merchant 1"
                                            },
                                            "reportDefinitionId": {
                                                "type": "string",
                                                "description": "Report Definition Id",
                                                "example": "210"
                                            },
                                            "reportDefinitionName": {
                                                "type": "string",
                                                "description": "Report Definition Class",
                                                "example": "TransactionRequestDetailClass"
                                            },
                                            "reportMimeType": {
                                                "type": "string",
                                                "example": "application/xml",
                                                "description": "Report Format",
                                                "enum": [
                                                    "application/xml",
                                                    "text/csv"
                                                ]
                                            },
                                            "reportFrequency": {
                                                "type": "string",
                                                "example": "DAILY",
                                                "description": "Report Frequency",
                                                "enum": [
                                                    "DAILY",
                                                    "WEEKLY",
                                                    "MONTHLY",
                                                    "ADHOC"
                                                ]
                                            },
                                            "reportName": {
                                                "type": "string",
                                                "description": "Report Name",
                                                "example": "My Transaction Request Detail Report"
                                            },
                                            "timezone": {
                                                "type": "string",
                                                "description": "Time Zone",
                                                "example": "America/Chicago"
                                            },
                                            "startTime": {
                                                "type": "string",
                                                "description": "Start Time",
                                                "format": "date-time",
                                                "example": "2017-10-01T10:10:10+05:00"
                                            },
                                            "startDay": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Start Day",
                                                "example": 1
                                            },
                                            "reportFields": {
                                                "type": "array",
                                                "example": [
                                                    "Request.RequestID",
                                                    "Request.TransactionDate",
                                                    "Request.MerchantID"
                                                ],
                                                "description": "List of all fields String values",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "reportFilters": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": "List of filters to apply",
                                                "example": {
                                                    "Application.Name": [
                                                        "ics_auth",
                                                        "ics_bill"
                                                    ]
                                                }
                                            },
                                            "reportPreferences": {
                                                "type": "object",
                                                "properties": {
                                                    "signedAmounts": {
                                                        "type": "boolean",
                                                        "description": "Indicator to determine whether negative sign infront of amount for all refunded transaction"
                                                    },
                                                    "fieldNameConvention": {
                                                        "type": "string",
                                                        "description": "Specify the field naming convention to be followed in reports (applicable to only csv report formats",
                                                        "enum": [
                                                            "SOAPI",
                                                            "SCMP"
                                                        ]
                                                    }
                                                },
                                                "description": "Report Preferences"
                                            },
                                            "groupId": {
                                                "type": "string",
                                                "example": "12345",
                                                "description": "Id for the selected group."
                                            }
                                        },
                                        "description": "Subscription Details"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "reportingV3ReportSubscriptionsGet400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "Subscriptions not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ReportSubscriptions"
                ],
                "summary": "Create Report Subscription for a report name by organization",
                "description": "Create a report subscription for your organization. The report name must be unique.\n",
                "operationId": "createSubscription",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    {
                        "in": "body",
                        "name": "requestBody",
                        "description": "Report subscription request payload",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "reportDefinitionName",
                                "reportFields",
                                "reportName",
                                "startTime",
                                "timezone",
                                "reportFrequency",
                                "reportMimeType"
                            ],
                            "properties": {
                                "organizationId": {
                                    "type": "string",
                                    "pattern": "[a-zA-Z0-9-_]+",
                                    "description": "Valid CyberSource organizationId",
                                    "example": "Merchant 1"
                                },
                                "reportDefinitionName": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 80,
                                    "pattern": "[a-zA-Z0-9-]+",
                                    "description": "Valid Report Definition Name",
                                    "example": "TransactionDetailReportClass"
                                },
                                "reportFields": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "example": [
                                        "Request.RequestID",
                                        "Request.TransactionDate",
                                        "Request.MerchantID"
                                    ]
                                },
                                "reportMimeType": {
                                    "type": "string",
                                    "example": "application/xml",
                                    "enum": [
                                        "application/xml",
                                        "text/csv"
                                    ]
                                },
                                "reportFrequency": {
                                    "type": "string",
                                    "description": "The frequency for which subscription is created.",
                                    "example": "DAILY",
                                    "enum": [
                                        "DAILY",
                                        "WEEKLY",
                                        "MONTHLY",
                                        "ADHOC"
                                    ]
                                },
                                "reportName": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 128,
                                    "pattern": "[a-zA-Z0-9-_ ]+",
                                    "example": "My Daily Subdcription"
                                },
                                "timezone": {
                                    "type": "string",
                                    "example": "America/Chicago"
                                },
                                "startTime": {
                                    "type": "string",
                                    "description": "The hour at which the report generation should start. It should be in hhmm format.",
                                    "example": "0900"
                                },
                                "startDay": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 31,
                                    "description": "This is the start day if the frequency is WEEKLY or MONTHLY. The value varies from 1-7 for WEEKLY and 1-31 for MONTHLY. For WEEKLY 1 means Sunday and 7 means Saturday. By default the value is 1."
                                },
                                "reportFilters": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "List of filters to apply",
                                    "example": {
                                        "Application.Name": [
                                            "ics_auth",
                                            "ics_bill"
                                        ]
                                    }
                                },
                                "reportPreferences": {
                                    "type": "object",
                                    "properties": {
                                        "signedAmounts": {
                                            "type": "boolean",
                                            "description": "Indicator to determine whether negative sign infront of amount for all refunded transaction"
                                        },
                                        "fieldNameConvention": {
                                            "type": "string",
                                            "description": "Specify the field naming convention to be followed in reports (applicable to only csv report formats",
                                            "enum": [
                                                "SOAPI",
                                                "SCMP"
                                            ]
                                        }
                                    },
                                    "description": "Report Preferences"
                                },
                                "groupName": {
                                    "type": "string",
                                    "pattern": "[a-zA-Z0-9-_ ]+",
                                    "description": "Valid GroupName",
                                    "example": "CEMEA Group"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "304": {
                        "description": "NOT MODIFIED"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message"
                                },
                                "localizationKey": {
                                    "type": "string",
                                    "description": "Localization Key Name"
                                },
                                "correlationId": {
                                    "type": "string",
                                    "description": "Correlation Id"
                                },
                                "detail": {
                                    "type": "string",
                                    "description": "Error Detail"
                                },
                                "fields": {
                                    "type": "array",
                                    "description": "Error fields List",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path of the failed property"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error description about validation failed field"
                                            },
                                            "localizationKey": {
                                                "type": "string",
                                                "description": "Localized Key Name"
                                            }
                                        },
                                        "description": "Provide validation failed input field details"
                                    }
                                }
                            },
                            "description": "Error Bean"
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Create Report Subscription",
                        "value": {
                            "reportDefinitionName": "TransactionRequestClass",
                            "reportFields": [
                                "Request.RequestID",
                                "Request.TransactionDate",
                                "Request.MerchantID",
                                "AFSFields.IPAddress",
                                "AFSFields.IPCountry",
                                "AFSFields.IPRoutingMethod",
                                "AFSFields.IPState",
                                "Application.Name",
                                "BankInfo.Address",
                                "BankInfo.BranchCode",
                                "BankInfo.City",
                                "BankInfo.Country",
                                "BankInfo.Name",
                                "BankInfo.SwiftCode",
                                "BillTo.Address1",
                                "BillTo.Address2",
                                "BillTo.City",
                                "BillTo.CompanyName",
                                "BillTo.CompanyTaxID",
                                "BillTo.Country",
                                "BillTo.Email",
                                "BillTo.FirstName",
                                "BillTo.LastName",
                                "BillTo.MiddleName",
                                "BillTo.NameSuffix",
                                "BillTo.PersonalID",
                                "BillTo.Phone",
                                "BillTo.State",
                                "BillTo.Title",
                                "BillTo.Zip",
                                "ChargebackAndRetrieval.AdjustmentAmount",
                                "ChargebackAndRetrieval.AdjustmentCurrency",
                                "ChargebackAndRetrieval.ARN",
                                "ChargebackAndRetrieval.CaseIdentifier",
                                "ChargebackAndRetrieval.CaseNumber",
                                "ChargebackAndRetrieval.CaseTime",
                                "ChargebackAndRetrieval.CaseType",
                                "ChargebackAndRetrieval.ChargebackAmount",
                                "ChargebackAndRetrieval.ChargebackCurrency",
                                "ChargebackAndRetrieval.ChargebackMessage",
                                "ChargebackAndRetrieval.ChargebackReasonCode",
                                "ChargebackAndRetrieval.ChargebackReasonCodeDescription",
                                "ChargebackAndRetrieval.ChargebackTime",
                                "ChargebackAndRetrieval.DocumentIndicator",
                                "ChargebackAndRetrieval.FeeAmount",
                                "ChargebackAndRetrieval.FeeCurrency",
                                "ChargebackAndRetrieval.FinancialImpact",
                                "ChargebackAndRetrieval.FinancialImpactType",
                                "ChargebackAndRetrieval.MerchantCategoryCode",
                                "ChargebackAndRetrieval.PartialIndicator",
                                "ChargebackAndRetrieval.ResolutionTime",
                                "ChargebackAndRetrieval.ResolvedToIndicator",
                                "ChargebackAndRetrieval.RespondByDate",
                                "ChargebackAndRetrieval.TransactionType",
                                "Check.AccountEncoderID",
                                "Check.BankTransitNumber",
                                "Check.SecCode",
                                "CustomerFields.BillingAddress1",
                                "CustomerFields.BillingAddress2",
                                "CustomerFields.BillingCity",
                                "CustomerFields.BillingCompanyName",
                                "CustomerFields.BillingCountry",
                                "CustomerFields.BillingEmail",
                                "CustomerFields.BillingFirstName",
                                "CustomerFields.BillingLastName",
                                "CustomerFields.BillingPhone",
                                "CustomerFields.BillingPostalCode",
                                "CustomerFields.BillingState",
                                "CustomerFields.CustomerID",
                                "CustomerFields.CustomerUserName",
                                "CustomerFields.PersonalId(CPF/CNPJ)",
                                "CustomerFields.ShippingAddress1",
                                "CustomerFields.ShippingAddress2",
                                "CustomerFields.ShippingCity",
                                "CustomerFields.ShippingCompanyName",
                                "CustomerFields.ShippingCountry",
                                "CustomerFields.ShippingFirstName",
                                "CustomerFields.ShippingLastName",
                                "CustomerFields.ShippingPhone",
                                "CustomerFields.ShippingPostalCode",
                                "CustomerFields.ShippingState",
                                "DecisionManagerEvents.EventPolicy",
                                "DecisionManagerEvents.TypeofEvent",
                                "Device.DeviceID",
                                "DeviceFingerprintFields.abcd",
                                "DeviceFingerprintFields.BrowserLanguage",
                                "DeviceFingerprintFields.DeviceLatitude",
                                "DeviceFingerprintFields.DeviceLongitude",
                                "DeviceFingerprintFields.displayNameFinalCheck",
                                "DeviceFingerprintFields.DMESignOffFieldEdit",
                                "DeviceFingerprintFields.Fingerprint/DeviceFingerprint",
                                "DeviceFingerprintFields.FlashEnabled",
                                "DeviceFingerprintFields.FlashOperatingSystem",
                                "DeviceFingerprintFields.FlashVersion",
                                "DeviceFingerprintFields.GPSAccuracy",
                                "DeviceFingerprintFields.ImagesEnabled",
                                "DeviceFingerprintFields.Jailbreak/RootPrivileges",
                                "DeviceFingerprintFields.JavaScriptEnabled",
                                "DeviceFingerprintFields.ProfiledURL",
                                "DeviceFingerprintFields.ProxyIPAddress",
                                "DeviceFingerprintFields.ProxyIPAddressActivities",
                                "DeviceFingerprintFields.ProxyServerType",
                                "DeviceFingerprintFields.ScreenResolution",
                                "DeviceFingerprintFields.SignOffFieldDMEEditNewOne",
                                "DeviceFingerprintFields.SmartID",
                                "DeviceFingerprintFields.SmartIDConfidenceLevel",
                                "DeviceFingerprintFields.TimeOnPage",
                                "DeviceFingerprintFields.TrueIPAddress",
                                "DeviceFingerprintFields.TrueIPAddressActivities",
                                "DeviceFingerprintFields.TrueIPAddressAttributes",
                                "DeviceFingerprintFields.txdea1",
                                "DeviceFingerprintFields.txdesv",
                                "EmailageFields.FraudType",
                                "EmailageFields.IP Postal",
                                "EmailageFields.IPCity",
                                "EmailageFields.IPCountry",
                                "EmailageFields.IPRegion",
                                "EmailageFields.SourceIndustry",
                                "Event.Amount",
                                "Event.CurrencyCode",
                                "Event.Event",
                                "Event.EventDate",
                                "Event.ProcessorMessage",
                                "Exception.Action",
                                "Exception.CYBSExceptionID",
                                "Exception.DccLookupStatus",
                                "Exception.ExceptionAmount",
                                "Exception.ExceptionAmountCurrency",
                                "Exception.ExceptionCategory",
                                "Exception.ExceptionDate",
                                "Exception.ExceptionDescription",
                                "Exception.ExceptionDeviceHardwareRevision",
                                "Exception.ExceptionDeviceID",
                                "Exception.ExceptionDeviceOS",
                                "Exception.ExceptionDeviceOSVersion",
                                "Exception.ExceptionDeviceTerminalID",
                                "Exception.ExceptionMessage",
                                "Exception.ExceptionReasonDescription",
                                "Exception.ExceptionStatus",
                                "Exception.ExceptionStatusCode",
                                "Exception.ExceptionType",
                                "Exception.FinancialStatus",
                                "Exception.LastActionDate",
                                "Exception.NextActionDate",
                                "Exception.OriginalTransactionSubmissionDate",
                                "Exception.PaymentNumber",
                                "Exception.ProcessorCaseID",
                                "Exception.ProcessorResponseCode",
                                "Exception.ReasonCode",
                                "Exception.RetryCount",
                                "Fee.AssessmentAmount",
                                "Fee.AssessmentCurrency",
                                "Fee.BillingCycle",
                                "Fee.BillingType",
                                "Fee.ClearedInterchangeLevel",
                                "Fee.DiscountAmount",
                                "Fee.DiscountCurrency",
                                "Fee.DiscountRate",
                                "Fee.DowngradeReasonCode",
                                "Fee.InterchangeAmount",
                                "Fee.InterchangeCurrency",
                                "Fee.InterchangeRate",
                                "Fee.PerItemFeeAmount",
                                "Fee.PerItemFeeCurrency",
                                "Fee.PricedInterchangeLevel",
                                "Fee.ServiceFeeAmount",
                                "Fee.ServiceFeeAmountCcy",
                                "Fee.ServiceFeeFixedAmount",
                                "Fee.ServiceFeeFixedAmountCcy",
                                "Fee.ServiceFeeRate",
                                "Fee.SettlementAmount",
                                "Fee.SettlementCurrency",
                                "Fee.SettlementTime",
                                "Fee.SettlementTimeZone",
                                "Fee.SourceDescriptor",
                                "Fee.TotalFeeAmount",
                                "Fee.TotalFeeCurrency",
                                "Funding.AdjustmentAmount",
                                "Funding.AdjustmentCurrency",
                                "Funding.AdjustmentDescription",
                                "Funding.AdjustmentType",
                                "FundTransfer.BankCheckDigit",
                                "FundTransfer.IbanIndicator",
                                "Invoice.BillingGroupDescription",
                                "Invoice.NotProcessed",
                                "Invoice.OrganizationID",
                                "Invoice.PerformedServices",
                                "Invoice.Processed",
                                "Invoice.Total",
                                "JP.Amount",
                                "JP.AuthForward",
                                "JP.AuthorizationCode",
                                "JP.CardSuffix",
                                "JP.Currency",
                                "JP.CustomerFirstName",
                                "JP.CustomerLastName",
                                "JP.Date",
                                "JP.Gateway",
                                "JP.JPOInstallmentMethod",
                                "JP.JPOPaymentMethod",
                                "JP.MerchantID",
                                "JP.MerchantReferenceNumber",
                                "JP.PaymentMethod",
                                "JP.RequestID",
                                "JP.SubscriptionID",
                                "JP.Time",
                                "JP.TransactionReferenceNumber",
                                "JP.TransactionType",
                                "LineItems.FulfillmentType",
                                "LineItems.InvoiceNumber",
                                "LineItems.MerchantProductSku",
                                "LineItems.ProductCode",
                                "LineItems.ProductName",
                                "LineItems.Quantity",
                                "LineItems.TaxAmount",
                                "LineItems.UnitPrice",
                                "MarkAsSuspectFields.MarkingDate",
                                "MarkAsSuspectFields.MarkingNotes",
                                "MarkAsSuspectFields.MarkingReason",
                                "MarkAsSuspectFields.MarkingUserName",
                                "Merchant-DefinedDataFields.MerchantDefinedData1",
                                "Merchant-DefinedDataFields.MerchantDefinedData10",
                                "Merchant-DefinedDataFields.MerchantDefinedData100",
                                "Merchant-DefinedDataFields.MerchantDefinedData11",
                                "Merchant-DefinedDataFields.MerchantDefinedData12",
                                "Merchant-DefinedDataFields.MerchantDefinedData13",
                                "Merchant-DefinedDataFields.MerchantDefinedData14",
                                "Merchant-DefinedDataFields.MerchantDefinedData15",
                                "Merchant-DefinedDataFields.MerchantDefinedData16",
                                "Merchant-DefinedDataFields.MerchantDefinedData17",
                                "Merchant-DefinedDataFields.MerchantDefinedData18",
                                "Merchant-DefinedDataFields.MerchantDefinedData19",
                                "Merchant-DefinedDataFields.MerchantDefinedData2",
                                "Merchant-DefinedDataFields.MerchantDefinedData20",
                                "Merchant-DefinedDataFields.MerchantDefinedData21",
                                "Merchant-DefinedDataFields.MerchantDefinedData22",
                                "Merchant-DefinedDataFields.MerchantDefinedData23",
                                "Merchant-DefinedDataFields.MerchantDefinedData24",
                                "Merchant-DefinedDataFields.MerchantDefinedData25",
                                "Merchant-DefinedDataFields.MerchantDefinedData26",
                                "Merchant-DefinedDataFields.MerchantDefinedData27",
                                "Merchant-DefinedDataFields.MerchantDefinedData28",
                                "Merchant-DefinedDataFields.MerchantDefinedData29",
                                "Merchant-DefinedDataFields.MerchantDefinedData3",
                                "Merchant-DefinedDataFields.MerchantDefinedData30",
                                "Merchant-DefinedDataFields.MerchantDefinedData31",
                                "Merchant-DefinedDataFields.MerchantDefinedData32",
                                "Merchant-DefinedDataFields.MerchantDefinedData34",
                                "Merchant-DefinedDataFields.MerchantDefinedData35",
                                "Merchant-DefinedDataFields.MerchantDefinedData36",
                                "Merchant-DefinedDataFields.MerchantDefinedData37",
                                "Merchant-DefinedDataFields.MerchantDefinedData39",
                                "Merchant-DefinedDataFields.MerchantDefinedData4",
                                "Merchant-DefinedDataFields.MerchantDefinedData40",
                                "Merchant-DefinedDataFields.MerchantDefinedData41",
                                "Merchant-DefinedDataFields.MerchantDefinedData43",
                                "Merchant-DefinedDataFields.MerchantDefinedData44",
                                "Merchant-DefinedDataFields.MerchantDefinedData45",
                                "Merchant-DefinedDataFields.MerchantDefinedData46",
                                "Merchant-DefinedDataFields.MerchantDefinedData48",
                                "Merchant-DefinedDataFields.MerchantDefinedData49",
                                "Merchant-DefinedDataFields.MerchantDefinedData5",
                                "Merchant-DefinedDataFields.MerchantDefinedData50",
                                "Merchant-DefinedDataFields.MerchantDefinedData52",
                                "Merchant-DefinedDataFields.MerchantDefinedData53",
                                "Merchant-DefinedDataFields.MerchantDefinedData54",
                                "Merchant-DefinedDataFields.MerchantDefinedData56",
                                "Merchant-DefinedDataFields.MerchantDefinedData57",
                                "Merchant-DefinedDataFields.MerchantDefinedData58",
                                "Merchant-DefinedDataFields.MerchantDefinedData59",
                                "Merchant-DefinedDataFields.MerchantDefinedData6",
                                "Merchant-DefinedDataFields.MerchantDefinedData61",
                                "Merchant-DefinedDataFields.MerchantDefinedData62",
                                "Merchant-DefinedDataFields.MerchantDefinedData63",
                                "Merchant-DefinedDataFields.MerchantDefinedData65",
                                "Merchant-DefinedDataFields.MerchantDefinedData66",
                                "Merchant-DefinedDataFields.MerchantDefinedData67",
                                "Merchant-DefinedDataFields.MerchantDefinedData68",
                                "Merchant-DefinedDataFields.MerchantDefinedData7",
                                "Merchant-DefinedDataFields.MerchantDefinedData70",
                                "Merchant-DefinedDataFields.MerchantDefinedData71",
                                "Merchant-DefinedDataFields.MerchantDefinedData72",
                                "Merchant-DefinedDataFields.MerchantDefinedData73",
                                "Merchant-DefinedDataFields.MerchantDefinedData74",
                                "Merchant-DefinedDataFields.MerchantDefinedData75",
                                "Merchant-DefinedDataFields.MerchantDefinedData76",
                                "Merchant-DefinedDataFields.MerchantDefinedData77",
                                "Merchant-DefinedDataFields.MerchantDefinedData78",
                                "Merchant-DefinedDataFields.MerchantDefinedData79",
                                "Merchant-DefinedDataFields.MerchantDefinedData8",
                                "Merchant-DefinedDataFields.MerchantDefinedData80",
                                "Merchant-DefinedDataFields.MerchantDefinedData81",
                                "Merchant-DefinedDataFields.MerchantDefinedData82",
                                "Merchant-DefinedDataFields.MerchantDefinedData83",
                                "Merchant-DefinedDataFields.MerchantDefinedData84",
                                "Merchant-DefinedDataFields.MerchantDefinedData85",
                                "Merchant-DefinedDataFields.MerchantDefinedData86",
                                "Merchant-DefinedDataFields.MerchantDefinedData87",
                                "Merchant-DefinedDataFields.MerchantDefinedData88",
                                "Merchant-DefinedDataFields.MerchantDefinedData89",
                                "Merchant-DefinedDataFields.MerchantDefinedData9",
                                "Merchant-DefinedDataFields.MerchantDefinedData90",
                                "Merchant-DefinedDataFields.MerchantDefinedData91",
                                "Merchant-DefinedDataFields.MerchantDefinedData92",
                                "Merchant-DefinedDataFields.MerchantDefinedData93",
                                "Merchant-DefinedDataFields.MerchantDefinedData94",
                                "Merchant-DefinedDataFields.MerchantDefinedData95",
                                "Merchant-DefinedDataFields.MerchantDefinedData96",
                                "Merchant-DefinedDataFields.MerchantDefinedData97",
                                "Merchant-DefinedDataFields.MerchantDefinedData98",
                                "Merchant-DefinedDataFields.MerchantDefinedData99",
                                "OctSummary.AccountId",
                                "OctSummary.ResellerId",
                                "OctSummary.SettlementAmountCurrency",
                                "OctSummary.SettlementDate",
                                "OctSummary.TransactionAmountCurrency",
                                "OrderFields.ConnectionMethod",
                                "OrderFields.MerchantID",
                                "OrderFields.MerchantReferenceNumber",
                                "OrderFields.ReasonCode",
                                "OrderFields.ReplyCode",
                                "OrderFields.ReplyFlag",
                                "OrderFields.ReplyMessage",
                                "OrderFields.RequestID",
                                "OrderFields.ShippingMethod",
                                "OrderFields.TransactionDate",
                                "PayerAuth.RequestID",
                                "PayerAuth.TransactionType",
                                "PaymentData.ACHVerificationResult",
                                "PaymentData.ACHVerificationResultMapped",
                                "PaymentData.AcquirerMerchantID",
                                "PaymentData.AuthIndicator",
                                "PaymentData.AuthorizationCode",
                                "PaymentData.AuthorizationType",
                                "PaymentData.AuthReversalAmount",
                                "PaymentData.AuthReversalResult",
                                "PaymentData.AVSResult",
                                "PaymentData.AVSResultMapped",
                                "PaymentData.BalanceAmount",
                                "PaymentData.BalanceCurrencyCode",
                                "PaymentData.BinNumber",
                                "PaymentData.CardCategory",
                                "PaymentData.CardCategoryCode",
                                "PaymentData.CardPresent",
                                "PaymentData.CurrencyCode",
                                "PaymentData.CVResult",
                                "PaymentData.DCCIndicator",
                                "PaymentData.EMVRequestFallBack",
                                "PaymentData.EVEmail",
                                "PaymentData.EVEmailRaw",
                                "PaymentData.EVName",
                                "PaymentData.EVNameRaw",
                                "PaymentData.EVPhoneNumber",
                                "PaymentData.EVPhoneNumberRaw",
                                "PaymentData.EVPostalCode",
                                "PaymentData.EVPostalCodeRaw",
                                "PaymentData.EVStreet",
                                "PaymentData.EVStreetRaw",
                                "PaymentData.ExchangeRate",
                                "PaymentData.ExchangeRateDate",
                                "PaymentData.MandateReferenceNumber",
                                "PaymentData.NetworkCode",
                                "PaymentData.NetworkTransactionID",
                                "PaymentData.NumberOfInstallments",
                                "PaymentData.OriginalAmount",
                                "PaymentData.OriginalCurrency",
                                "PaymentData.PaymentProductCode",
                                "PaymentData.POSEntryMode",
                                "PaymentData.ProcessorMID",
                                "PaymentData.ProcessorResponseCode",
                                "PaymentData.ProcessorResponseID",
                                "PaymentData.ProcessorTID",
                                "PaymentData.ProcessorTransactionID",
                                "PaymentData.RequestedAmount",
                                "PaymentData.RequestedAmountCurrencyCode",
                                "PaymentData.SubMerchantCity",
                                "PaymentData.SubMerchantCountry",
                                "PaymentData.SubMerchantEmail",
                                "PaymentData.SubMerchantID",
                                "PaymentData.SubMerchantName",
                                "PaymentData.SubMerchantPhone",
                                "PaymentData.SubMerchantPostalCode",
                                "PaymentData.SubMerchantState",
                                "PaymentData.SubMerchantStreet",
                                "PaymentData.TargetAmount",
                                "PaymentData.TargetCurrency",
                                "PaymentFields.AccountSuffix",
                                "PaymentFields.CardBIN",
                                "PaymentFields.CardBINCountry",
                                "PaymentFields.CardIssuer",
                                "PaymentFields.CardScheme",
                                "PaymentFields.CardType",
                                "PaymentFields.CardVerificationResult",
                                "PaymentMethod.AccountSuffix",
                                "PaymentMethod.AdditionalCardType",
                                "PaymentMethod.BankAccountName",
                                "PaymentMethod.BankCode",
                                "PaymentMethod.BoletoBarCodeNumber",
                                "PaymentMethod.BoletoNumber",
                                "PaymentMethod.CardType",
                                "PaymentMethod.CheckNumber",
                                "PaymentMethod.ExpirationMonth",
                                "PaymentMethod.ExpirationYear",
                                "PaymentMethod.IssueNumber",
                                "PaymentMethod.MandateId",
                                "PaymentMethod.StartMonth",
                                "PaymentMethod.StartYear",
                                "PaymentMethod.WalletType",
                                "POSTerminalExceptions.AccountSuffix",
                                "POSTerminalExceptions.CurrencyCode",
                                "POSTerminalExceptions.ExpirationMO",
                                "POSTerminalExceptions.ExpirationYR",
                                "POSTerminalExceptions.LastName",
                                "POSTerminalExceptions.MerchantID",
                                "Recipient.RecipientBillingAmount",
                                "Recipient.RecipientBillingCurrency",
                                "Recipient.ReferenceNumber",
                                "Request.PartnerOriginalTransactionID",
                                "Sender.Address",
                                "Sender.City",
                                "Sender.Country",
                                "Sender.DOB",
                                "Sender.FirstName",
                                "Sender.LastName",
                                "Sender.MiddleInitial",
                                "Sender.PhoneNumber",
                                "Sender.PostalCode",
                                "Sender.SenderReferenceNumber",
                                "Sender.SourceOfFunds",
                                "Sender.State",
                                "ShipTo.CompanyName",
                                "Subscriptions.Applications",
                                "Subscriptions.AuthAVSResults",
                                "Subscriptions.AuthCardVerificationResult",
                                "Subscriptions.AuthCode",
                                "Subscriptions.AuthRCode",
                                "Subscriptions.AuthResponseCode",
                                "Subscriptions.AuthType",
                                "Subscriptions.BillToAddress1",
                                "Subscriptions.BillToAddress2",
                                "Subscriptions.BillToCity",
                                "Subscriptions.BillToCompanyName",
                                "Subscriptions.BillToCountry",
                                "Subscriptions.BillToEmail",
                                "Subscriptions.BillToFirstName",
                                "Subscriptions.BillToLastName",
                                "Subscriptions.BillToState",
                                "Subscriptions.BillToZip",
                                "Subscriptions.CardType",
                                "Subscriptions.Comments",
                                "Subscriptions.ConsumerPhone",
                                "Subscriptions.CurrencyCode",
                                "Subscriptions.CustomerCCAccountSuffix",
                                "Subscriptions.CustomerCCExpiryMonth",
                                "Subscriptions.CustomerCCExpiryYear",
                                "Subscriptions.CustomerCCIssueNo",
                                "Subscriptions.CustomerCCRoutingNumber",
                                "Subscriptions.CustomerCCStartMonth",
                                "Subscriptions.CustomerCCStartYear",
                                "Subscriptions.CustomerCCSubTypeDescription",
                                "Subscriptions.EcommerceIndicator",
                                "Subscriptions.IPAddress",
                                "Subscriptions.MerchantDefinedData1",
                                "Subscriptions.MerchantDefinedData2",
                                "Subscriptions.MerchantDefinedData3",
                                "Subscriptions.MerchantDefinedData4",
                                "Subscriptions.MerchantRefNo",
                                "Subscriptions.MerchantSecureData1",
                                "Subscriptions.MerchantSecureData2",
                                "Subscriptions.MerchantSecureData3",
                                "Subscriptions.MerchantSecureData4",
                                "Subscriptions.PaymentProcessor",
                                "Subscriptions.PaymentsSuccess",
                                "Subscriptions.RCode",
                                "Subscriptions.ReasonCode",
                                "Subscriptions.RequestID",
                                "Subscriptions.RequestToken",
                                "Subscriptions.RFlag",
                                "Subscriptions.RMsg",
                                "Subscriptions.ShipToAddress1",
                                "Subscriptions.ShipToAddress2",
                                "Subscriptions.ShipToCity",
                                "Subscriptions.ShipToCompanyName",
                                "Subscriptions.ShipToCountry",
                                "Subscriptions.ShipToFirstName",
                                "Subscriptions.ShipToLastName",
                                "Subscriptions.ShipToState",
                                "Subscriptions.ShipToZip",
                                "Subscriptions.SubscriptionID",
                                "Subscriptions.TaxAmount",
                                "Subscriptions.TransactionDate",
                                "Subscriptions.TransRefNo",
                                "TaxCalculation.Status",
                                "Token.NetworkTokenTransType",
                                "Token.TokenCode",
                                "TransactionDetails.MerchantId",
                                "TransactionDetails.PaymentMethodDesc",
                                "TransactionDetails.PaymentMethodType",
                                "TransactionDetails.RequestId",
                                "TravelFields.DepartureTime",
                                "VelocityMorphing.FieldName",
                                "VelocityMorphing.InfoCode",
                                "WhitepagesProFields.EmailDomainCreationDate"
                            ],
                            "reportMimeType": "application/xml",
                            "reportFrequency": "WEEKLY",
                            "reportName": "testrest_subcription_v1",
                            "timezone": "GMT",
                            "startTime": "0900",
                            "startDay": "1"
                        }
                    }
                }
            }
        },
        "/reporting/v3/report-subscriptions/{reportName}": {
            "get": {
                "tags": [
                    "ReportSubscriptions"
                ],
                "summary": "Get subscription for report name",
                "description": "View the details of a report subscription, such as\nthe report format or report frequency, using the report\u2019s\nunique name.\n",
                "operationId": "getSubscription",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "reportName",
                        "in": "path",
                        "description": "Name of the Report to Retrieve",
                        "required": true,
                        "type": "string",
                        "maxLength": 80,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9-_+]+"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "title": "reportingV3ReportsSbscriptionsNameGet200Response",
                            "type": "object",
                            "properties": {
                                "organizationId": {
                                    "type": "string",
                                    "description": "Selected Organization Id",
                                    "example": "Merchant 1"
                                },
                                "reportDefinitionId": {
                                    "type": "string",
                                    "description": "Report Definition Id",
                                    "example": "210"
                                },
                                "reportDefinitionName": {
                                    "type": "string",
                                    "description": "Report Definition Class",
                                    "example": "TransactionRequestDetailClass"
                                },
                                "reportMimeType": {
                                    "type": "string",
                                    "example": "application/xml",
                                    "description": "Report Format",
                                    "enum": [
                                        "application/xml",
                                        "text/csv"
                                    ]
                                },
                                "reportFrequency": {
                                    "type": "string",
                                    "example": "DAILY",
                                    "description": "Report Frequency",
                                    "enum": [
                                        "DAILY",
                                        "WEEKLY",
                                        "MONTHLY",
                                        "ADHOC"
                                    ]
                                },
                                "reportName": {
                                    "type": "string",
                                    "description": "Report Name",
                                    "example": "My Transaction Request Detail Report"
                                },
                                "timezone": {
                                    "type": "string",
                                    "description": "Time Zone",
                                    "example": "America/Chicago"
                                },
                                "startTime": {
                                    "type": "string",
                                    "description": "Start Time",
                                    "format": "date-time",
                                    "example": "2017-10-01T10:10:10+05:00"
                                },
                                "startDay": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Start Day",
                                    "example": 1
                                },
                                "reportFields": {
                                    "type": "array",
                                    "example": [
                                        "Request.RequestID",
                                        "Request.TransactionDate",
                                        "Request.MerchantID"
                                    ],
                                    "description": "List of all fields String values",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "reportFilters": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "List of filters to apply",
                                    "example": {
                                        "Application.Name": [
                                            "ics_auth",
                                            "ics_bill"
                                        ]
                                    }
                                },
                                "reportPreferences": {
                                    "type": "object",
                                    "properties": {
                                        "signedAmounts": {
                                            "type": "boolean",
                                            "description": "Indicator to determine whether negative sign infront of amount for all refunded transaction"
                                        },
                                        "fieldNameConvention": {
                                            "type": "string",
                                            "description": "Specify the field naming convention to be followed in reports (applicable to only csv report formats",
                                            "enum": [
                                                "SOAPI",
                                                "SCMP"
                                            ]
                                        }
                                    },
                                    "description": "Report Preferences"
                                },
                                "groupId": {
                                    "type": "string",
                                    "example": "12345",
                                    "description": "Id for the selected group."
                                }
                            },
                            "description": "Subscription Details"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "reportingV3ReportSubscriptionsNameGet400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "Subscription not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ReportSubscriptions"
                ],
                "summary": "Delete subscription of a report name by organization",
                "description": "Delete a report subscription for your\norganization. You must know the unique name of the report\nyou want to delete.\n",
                "operationId": "deleteSubscription",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "reportName",
                        "in": "path",
                        "description": "Name of the Report to Delete",
                        "required": true,
                        "type": "string",
                        "maxLength": 80,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9-_+]+"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "reportingV3ReportSubscriptionsNameDelete400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "title": "reportingV3ReportSubscriptionsnameDelete404Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    }
                }
            }
        },
        "/reporting/v3/notification-of-changes": {
            "get": {
                "tags": [
                    "NotificationOfChanges"
                ],
                "summary": "Get Notification Of Changes",
                "description": "Download the Notification of Change report. This\nreport shows eCheck-related fields updated as a result of a\nresponse to an eCheck settlement transaction.\n",
                "operationId": "getNotificationOfChangeReport",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "x-queryParameterDefaults": {
                    "startTime": "2018-05-01T12:00:00-05:00",
                    "endTime": "2018-05-30T12:00:00-05:00"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Valid report Start Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Valid report End Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "title": "reportingV3NotificationofChangesGet200Response",
                            "type": "object",
                            "properties": {
                                "notificationOfChanges": {
                                    "type": "array",
                                    "description": "List of Notification Of Change Info values",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "merchantReferenceNumber": {
                                                "type": "string",
                                                "example": "TC30877-10",
                                                "description": "Merchant Reference Number"
                                            },
                                            "transactionReferenceNumber": {
                                                "type": "string",
                                                "example": "55563",
                                                "description": "Transaction Reference Number"
                                            },
                                            "time": {
                                                "type": "string",
                                                "example": "2017-10-01T10:10:10+05:00",
                                                "format": "date-time",
                                                "description": "Notification Of Change Date(ISO 8601 Extended)"
                                            },
                                            "code": {
                                                "type": "string",
                                                "example": "TC30877-10",
                                                "description": "Merchant Reference Number"
                                            },
                                            "accountType": {
                                                "type": "string",
                                                "example": "Checking Account",
                                                "description": "Account Type"
                                            },
                                            "routingNumber": {
                                                "type": "string",
                                                "example": "123456789",
                                                "description": "Routing Number"
                                            },
                                            "accountNumber": {
                                                "type": "string",
                                                "example": "############1234",
                                                "description": "Account Number"
                                            },
                                            "consumerName": {
                                                "type": "string",
                                                "example": "Consumer Name",
                                                "description": "Consumer Name"
                                            }
                                        },
                                        "description": "Notification Of Change"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "reportingV3NotificationofChangesGet400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Token provided is no more valid."
                    },
                    "404": {
                        "description": "Report not found",
                        "schema": {
                            "title": "reportingV3NotificationofChangesGet404Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "title": "reportingV3NotificationofChangesGet500Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    }
                }
            }
        },
        "/reporting/v3/purchase-refund-details": {
            "get": {
                "tags": [
                    "PurchaseAndRefundDetails"
                ],
                "summary": "Get Purchase and Refund details",
                "description": "Download the Purchase and Refund Details\nreport. This report report includes all purchases and refund\ntransactions, as well as all activities related to transactions\nresulting in an adjustment to the net proceeds.\n",
                "operationId": "getPurchaseAndRefundDetails",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "x-queryParameterDefaults": {
                    "organizationId": "testrest",
                    "startTime": "2018-05-01T12:00:00-05:00",
                    "endTime": "2018-05-30T12:00:00-05:00",
                    "groupName": "groupName",
                    "paymentSubtype": "VI",
                    "viewBy": "requestDate",
                    "offset": "20",
                    "limit": "2000"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Valid report Start Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Valid report End Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    {
                        "name": "paymentSubtype",
                        "in": "query",
                        "description": "Payment Subtypes.\n  - **ALL**:  All Payment Subtypes\n  - **VI** :  Visa\n  - **MC** :  Master Card\n  - **AX** :  American Express\n  - **DI** :  Discover\n  - **DP** :  Pinless Debit\n",
                        "required": false,
                        "type": "string",
                        "default": "ALL",
                        "enum": [
                            "ALL",
                            "VI",
                            "MC",
                            "AX",
                            "DI",
                            "DP"
                        ]
                    },
                    {
                        "name": "viewBy",
                        "in": "query",
                        "description": "View results by Request Date or Submission Date.\n  - **requestDate** : Request Date\n  - **submissionDate**: Submission Date\n",
                        "required": false,
                        "type": "string",
                        "default": "requestDate",
                        "enum": [
                            "requestDate",
                            "submissionDate"
                        ]
                    },
                    {
                        "name": "groupName",
                        "in": "query",
                        "description": "Valid CyberSource Group Name.User can define groups using CBAPI and Group Management Module in EBC2. Groups are collection of organizationIds",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset of the Purchase and Refund Results.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Results count per page. Range(1-2000)",
                        "required": false,
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 2000,
                        "default": 2000,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "title": "reportingV3PurchaseRefundDetailsGet200Response",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "offset": {
                                            "type": "integer"
                                        },
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "pageResults": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "description": "PurchaseAndRefundDetails",
                                    "properties": {
                                        "requestDetails": {
                                            "type": "array",
                                            "description": "List of Request Info values",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "requestId": {
                                                        "type": "string",
                                                        "example": "12345678901234567890123456",
                                                        "description": "An unique identification number assigned by CyberSource to identify the submitted request."
                                                    },
                                                    "cybersourceMerchantId": {
                                                        "type": "string",
                                                        "example": "Cybersource Merchant Id",
                                                        "description": "Cybersource Merchant Id"
                                                    },
                                                    "processorMerchantId": {
                                                        "type": "string",
                                                        "example": "Processor Merchant Id",
                                                        "description": "Cybersource Processor Merchant Id"
                                                    },
                                                    "groupName": {
                                                        "type": "string",
                                                        "example": "996411990498708810001",
                                                        "description": "Group Name"
                                                    },
                                                    "transactionReferenceNumber": {
                                                        "type": "string",
                                                        "example": "RZ3J9WCS9J33",
                                                        "description": "Transaction Reference Number"
                                                    },
                                                    "merchantReferenceNumber": {
                                                        "type": "string",
                                                        "example": "47882339",
                                                        "description": "Merchant Reference Number"
                                                    }
                                                },
                                                "description": "Request Info Section"
                                            }
                                        },
                                        "settlements": {
                                            "type": "array",
                                            "description": "List of Settlement Info values",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "requestId": {
                                                        "type": "string",
                                                        "example": "12345678901234567890123456",
                                                        "description": "An unique identification number assigned by CyberSource to identify the submitted request."
                                                    },
                                                    "transactionType": {
                                                        "type": "string",
                                                        "example": "Purchases",
                                                        "description": "Transaction Type"
                                                    },
                                                    "submissionTime": {
                                                        "type": "string",
                                                        "example": "2017-10-01T10:10:10+05:00",
                                                        "description": "Submission Date",
                                                        "format": "date-time"
                                                    },
                                                    "amount": {
                                                        "type": "string",
                                                        "example": "23.00",
                                                        "description": "Amount"
                                                    },
                                                    "currencyCode": {
                                                        "type": "string",
                                                        "example": "USD",
                                                        "description": "Valid ISO 4217 ALPHA-3 currency code"
                                                    },
                                                    "paymentMethod": {
                                                        "type": "string",
                                                        "example": "VISA",
                                                        "description": "payment method"
                                                    },
                                                    "walletType": {
                                                        "type": "string",
                                                        "example": "V.me",
                                                        "description": "Solution Type (Wallet)"
                                                    },
                                                    "paymentType": {
                                                        "type": "string",
                                                        "example": "credit card",
                                                        "description": "Payment Type"
                                                    },
                                                    "accountSuffix": {
                                                        "type": "string",
                                                        "example": "0004",
                                                        "description": "Account Suffix"
                                                    },
                                                    "cybersourceBatchTime": {
                                                        "type": "string",
                                                        "example": "2017-10-01T10:10:10+05:00",
                                                        "description": "Cybersource Batch Time",
                                                        "format": "date-time"
                                                    },
                                                    "cybersourceBatchId": {
                                                        "type": "string",
                                                        "example": "123123123123123",
                                                        "description": "Cybersource Batch Id"
                                                    },
                                                    "cardType": {
                                                        "type": "string",
                                                        "example": "null",
                                                        "description": "Card Type"
                                                    },
                                                    "debitNetwork": {
                                                        "type": "string",
                                                        "example": "",
                                                        "description": "Debit Network"
                                                    }
                                                }
                                            }
                                        },
                                        "authorizations": {
                                            "type": "array",
                                            "description": "List of Authorization Info values",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "requestId": {
                                                        "type": "string",
                                                        "example": "12345678901234567890123456",
                                                        "description": "An unique identification number assigned by CyberSource to identify the submitted request."
                                                    },
                                                    "transactionReferenceNumber": {
                                                        "type": "string",
                                                        "example": "RZ3J9WCS9J27",
                                                        "description": "Authorization Transaction Reference Number"
                                                    },
                                                    "time": {
                                                        "type": "string",
                                                        "example": "2017-10-01T10:10:10+05:00",
                                                        "description": "Authorization Date",
                                                        "format": "date-time"
                                                    },
                                                    "authorizationRequestId": {
                                                        "type": "string",
                                                        "example": "12345678901234567890123459",
                                                        "description": "Authorization Request Id"
                                                    },
                                                    "amount": {
                                                        "type": "string",
                                                        "example": "2.50",
                                                        "description": "Authorization Amount"
                                                    },
                                                    "currencyCode": {
                                                        "type": "string",
                                                        "example": "USD",
                                                        "description": "Valid ISO 4217 ALPHA-3 currency code"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "160780",
                                                        "description": "Authorization Code"
                                                    },
                                                    "rcode": {
                                                        "type": "string",
                                                        "example": "1",
                                                        "description": "Authorization RCode"
                                                    }
                                                },
                                                "description": "Authorization Info Values"
                                            }
                                        },
                                        "feeAndFundingDetails": {
                                            "type": "array",
                                            "description": "List of Fee Funding Info values",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "requestId": {
                                                        "type": "string",
                                                        "maxLength": 26,
                                                        "example": "12345678901234567890123456",
                                                        "description": "An unique identification number assigned by CyberSource to identify the submitted request."
                                                    },
                                                    "interchangePerItemFee": {
                                                        "type": "string",
                                                        "example": "2.7",
                                                        "description": "interchange Per Item Fee"
                                                    },
                                                    "discountPercentage": {
                                                        "type": "string",
                                                        "example": "2.39",
                                                        "description": "Discount Percentage"
                                                    },
                                                    "discountAmount": {
                                                        "type": "string",
                                                        "example": "0.429",
                                                        "description": "Discount Amount"
                                                    },
                                                    "discountPerItemFee": {
                                                        "type": "string",
                                                        "example": "0.002",
                                                        "description": "Discount Per Item Fee"
                                                    },
                                                    "totalFee": {
                                                        "type": "string",
                                                        "example": "0.429",
                                                        "description": "Total Fee"
                                                    },
                                                    "feeCurrency": {
                                                        "type": "string",
                                                        "example": "1",
                                                        "description": "Fee Currency"
                                                    },
                                                    "duesAssessments": {
                                                        "type": "string",
                                                        "example": "0",
                                                        "description": "Dues Assessments"
                                                    },
                                                    "fundingAmount": {
                                                        "type": "string",
                                                        "example": "2.50",
                                                        "description": "Funding Amount"
                                                    },
                                                    "fundingCurrency": {
                                                        "type": "string",
                                                        "example": "USD",
                                                        "description": "Funding Currency (ISO 4217)"
                                                    }
                                                },
                                                "description": "Fee Funding Section"
                                            }
                                        },
                                        "others": {
                                            "type": "array",
                                            "description": "List of Other Info values",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "requestId": {
                                                        "type": "string",
                                                        "maxLength": 26,
                                                        "example": "12345678901234567890123456",
                                                        "description": "An unique identification number assigned by CyberSource to identify the submitted request."
                                                    },
                                                    "merchantData1": {
                                                        "type": "string",
                                                        "example": "Merchant Defined Data",
                                                        "description": "Merchant Defined Data"
                                                    },
                                                    "merchantData2": {
                                                        "type": "string",
                                                        "example": "Merchant Defined Data",
                                                        "description": "Merchant Defined Data"
                                                    },
                                                    "merchantData3": {
                                                        "type": "string",
                                                        "example": "Merchant Defined Data",
                                                        "description": "Merchant Defined Data"
                                                    },
                                                    "merchantData4": {
                                                        "type": "string",
                                                        "example": "Merchant Defined Data",
                                                        "description": "Merchant Defined Data"
                                                    },
                                                    "firstName": {
                                                        "type": "string",
                                                        "example": "First Name",
                                                        "description": "First Name"
                                                    },
                                                    "lastName": {
                                                        "type": "string",
                                                        "example": "Last Name",
                                                        "description": "Last Name"
                                                    }
                                                },
                                                "description": "Other Merchant Details Values."
                                            }
                                        },
                                        "settlementStatuses": {
                                            "type": "array",
                                            "description": "List of Settlement Status Info values",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "requestId": {
                                                        "type": "string",
                                                        "maxLength": 26,
                                                        "example": "12345678901234567890123456",
                                                        "description": "An unique identification number assigned by CyberSource to identify the submitted request."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "Settlement Status",
                                                        "description": "Settlement Status"
                                                    },
                                                    "settlementTime": {
                                                        "type": "string",
                                                        "example": "2017-10-01T10:10:10+05:00",
                                                        "format": "date-time",
                                                        "description": "Settlement Date"
                                                    },
                                                    "reasonCode": {
                                                        "example": "reasonCode",
                                                        "type": "string",
                                                        "description": "ReasonCode"
                                                    },
                                                    "errorText": {
                                                        "example": "errorText",
                                                        "type": "string",
                                                        "description": "errorText"
                                                    }
                                                },
                                                "description": "Settlement Status Section Values."
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "reportingV3PurchaseRefundDetailsGet400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "title": "reportingV3PurchaseRefundDetailsGet401Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "Report not found",
                        "schema": {
                            "title": "reportingV3PurchaseRefundDetailsGet404Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "title": "reportingV3PurchaseRefundDetailsGet500Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        },
                        "examples": {
                            "application/json": {
                                "code": "SERVER_ERROR",
                                "correlationId": null,
                                "detail": "Internal Server Error. Please contact the customer support.",
                                "localizationKey": "cybsapi.server.error",
                                "message": "Error encountered while processing request"
                            }
                        }
                    }
                }
            }
        },
        "/reporting/v3/payment-batch-summaries": {
            "get": {
                "tags": [
                    "PaymentBatchSummaries"
                ],
                "summary": "Get payment batch summary data",
                "description": "Scope can be either account/merchant or reseller.",
                "operationId": "getPaymentBatchSummary",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting",
                    "isClientSideApi": true
                },
                "x-queryParameterDefaults": {
                    "organizationId": "testrest",
                    "startTime": "2018-05-01T12:00:00-05:00",
                    "endTime": "2018-05-30T12:00:00-05:00"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Valid report Start Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Valid report End Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    {
                        "name": "rollUp",
                        "in": "query",
                        "description": "Conditional - RollUp for data for DAY/WEEK/MONTH. Required while getting breakdown data for a Merchant",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "day",
                            "week",
                            "month"
                        ]
                    },
                    {
                        "name": "breakdown",
                        "in": "query",
                        "description": "Conditional - Breakdown on account_rollup/allMerchants/selectedMerchant. Required while getting breakdown data for a Merchant.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "account_rollup",
                            "all_merchant",
                            "selected_merchant"
                        ]
                    },
                    {
                        "name": "startDayOfWeek",
                        "in": "query",
                        "description": "Optional - Start day of week to breakdown data for weeks in a month",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "maximum": 7
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "startTime": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "endTime": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "paymentBatchSummaries": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "currencyCode": {
                                                "type": "string",
                                                "example": "USD"
                                            },
                                            "paymentSubTypeDescription": {
                                                "type": "string",
                                                "example": "Diners Club"
                                            },
                                            "startTime": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "endTime": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "salesCount": {
                                                "type": "integer",
                                                "example": 10,
                                                "format": "int32"
                                            },
                                            "salesAmount": {
                                                "type": "string",
                                                "example": "5000.01"
                                            },
                                            "creditCount": {
                                                "type": "integer",
                                                "example": 10,
                                                "format": "int32"
                                            },
                                            "creditAmount": {
                                                "type": "string",
                                                "example": "5000.01"
                                            },
                                            "accountName": {
                                                "type": "string",
                                                "example": "ubmerchant296"
                                            },
                                            "accountId": {
                                                "type": "string",
                                                "example": "ubmerchant296_acct"
                                            },
                                            "merchantId": {
                                                "type": "string",
                                                "example": "ubmerchant296_3"
                                            },
                                            "merchantName": {
                                                "type": "string",
                                                "example": "ubmerchant296_3"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "Payment Batch Summary not found"
                    }
                }
            }
        },
        "/reporting/v3/conversion-details": {
            "get": {
                "tags": [
                    "ConversionDetails"
                ],
                "summary": "Get conversion detail transactions",
                "description": "Get conversion detail of transactions for a merchant.",
                "operationId": "getConversionDetail",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "x-queryParameterDefaults": {
                    "startTime": "2019-03-21T00:00:00.0Z",
                    "endTime": "2019-03-21T23:00:00.0Z",
                    "organizationId": "testrest"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Valid report Start Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Valid report End Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "title": "reportingV3ConversionDetailsGet200Response",
                            "type": "object",
                            "properties": {
                                "organizationId": {
                                    "type": "string",
                                    "description": "Merchant Id",
                                    "example": "testMerchantId"
                                },
                                "startTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2017-10-01T10:10:10+05:00"
                                },
                                "endTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2017-10-01T10:10:10+05:00"
                                },
                                "conversionDetails": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "merchantReferenceNumber": {
                                                "type": "string",
                                                "description": "Merchant reference number of a merchant",
                                                "example": "1234567890"
                                            },
                                            "conversionTime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Date of conversion",
                                                "example": "2017-10-01T10:10:10+05:00"
                                            },
                                            "requestId": {
                                                "type": "string",
                                                "description": "Cybersource Transation request id",
                                                "example": "1234567890123456789012"
                                            },
                                            "originalDecision": {
                                                "type": "string",
                                                "description": "Original decision",
                                                "example": "REVIEW"
                                            },
                                            "newDecision": {
                                                "type": "string",
                                                "description": "New decision",
                                                "example": "ACCEPT"
                                            },
                                            "reviewer": {
                                                "type": "string",
                                                "description": "User name of the reviewer",
                                                "example": "testuserId"
                                            },
                                            "reviewerComments": {
                                                "type": "string",
                                                "description": "Comments of the reviewer",
                                                "example": "Verified order."
                                            },
                                            "queue": {
                                                "type": "string",
                                                "description": "Name of the queue",
                                                "example": "Review Queue"
                                            },
                                            "profile": {
                                                "type": "string",
                                                "description": "Name of the profile",
                                                "example": "Test Profile"
                                            },
                                            "notes": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "time": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "Time of the note added by reviewer",
                                                            "example": "2017-10-01T10:10:10+05:00"
                                                        },
                                                        "addedBy": {
                                                            "type": "string",
                                                            "description": "Note added by reviewer",
                                                            "example": "testuserId"
                                                        },
                                                        "comments": {
                                                            "type": "string",
                                                            "description": "Comments given by the reviewer",
                                                            "example": "Verified the order and accepted."
                                                        }
                                                    },
                                                    "xml": {
                                                        "name": "note"
                                                    }
                                                }
                                            }
                                        },
                                        "xml": {
                                            "name": "conversionDataPoint"
                                        }
                                    }
                                }
                            },
                            "xml": {
                                "name": "conversionDetailResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "reportingV3ConversionDetailsGet400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "404": {
                        "description": "Conversion detail not found",
                        "schema": {
                            "title": "reportingV3ConversionDetailsGet404Response"
                        }
                    }
                }
            }
        },
        "/reporting/v3/net-fundings": {
            "get": {
                "tags": [
                    "NetFundings"
                ],
                "summary": "Get Netfunding information for an account or a merchant",
                "description": "Get Netfunding information for an account or a merchant.",
                "operationId": "getNetFundingDetails",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Valid report Start Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Valid report End Time in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd'T'HH:mm:ss.SSSZ (e.g. 2018-01-01T00:00:00.000Z)\n",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    {
                        "name": "groupName",
                        "in": "query",
                        "description": "Valid CyberSource Group Name.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "title": "reportingV3NetFundingsGet200Response",
                            "type": "object",
                            "properties": {
                                "startTime": {
                                    "type": "string",
                                    "description": "Valid report Start Date in **ISO 8601 format**.\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n**Example:**\n- yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n",
                                    "example": "2017-10-01T10:10:10+05:00",
                                    "format": "date-time",
                                    "xml": {
                                        "attribute": true
                                    }
                                },
                                "endTime": {
                                    "type": "string",
                                    "description": "Valid report End Date in **ISO 8601 format**\n**Example date format:**\n- yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n",
                                    "example": "2018-04-12T23:20:50.52Z",
                                    "format": "date-time",
                                    "xml": {
                                        "attribute": true
                                    }
                                },
                                "netFundingSummaries": {
                                    "type": "array",
                                    "description": "List of Netfunding summary objects",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "PURCHASES",
                                                    "REFUNDS",
                                                    "FEES",
                                                    "CHARGEBACKS"
                                                ],
                                                "example": "PURCHASES"
                                            },
                                            "paymentSubType": {
                                                "type": "string",
                                                "example": "VI"
                                            },
                                            "conveyedCount": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "conveyedAmount": {
                                                "type": "string",
                                                "example": "100.50"
                                            },
                                            "settledCount": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "fundedCount": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "fundedAmount": {
                                                "type": "string",
                                                "example": "150.50"
                                            },
                                            "currencyCode": {
                                                "type": "string",
                                                "description": "Valid ISO 4217 ALPHA-3 currency code",
                                                "example": "USD"
                                            }
                                        },
                                        "xml": {
                                            "name": "NetFundingSummary"
                                        }
                                    },
                                    "xml": {
                                        "name": "NetFundingSummaries",
                                        "wrapped": true
                                    }
                                },
                                "totalPurchases": {
                                    "type": "array",
                                    "description": "List of total purchases currency wise",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "currency",
                                            "value"
                                        ],
                                        "properties": {
                                            "currency": {
                                                "type": "string",
                                                "description": "Valid ISO 4217 ALPHA-3 currency code",
                                                "example": "USD"
                                            },
                                            "value": {
                                                "type": "string",
                                                "example": "10.01"
                                            }
                                        },
                                        "xml": {
                                            "name": "Amount"
                                        }
                                    },
                                    "xml": {
                                        "name": "totalPurchases",
                                        "wrapped": true
                                    }
                                },
                                "totalRefunds": {
                                    "type": "array",
                                    "description": "List of total refunds currency wise",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "currency",
                                            "value"
                                        ],
                                        "properties": {
                                            "currency": {
                                                "type": "string",
                                                "description": "Valid ISO 4217 ALPHA-3 currency code",
                                                "example": "USD"
                                            },
                                            "value": {
                                                "type": "string",
                                                "example": "10.01"
                                            }
                                        },
                                        "xml": {
                                            "name": "Amount"
                                        }
                                    },
                                    "xml": {
                                        "name": "totalRefunds",
                                        "wrapped": true
                                    }
                                },
                                "totalFees": {
                                    "type": "array",
                                    "description": "List of total fees currency wise",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "currency",
                                            "value"
                                        ],
                                        "properties": {
                                            "currency": {
                                                "type": "string",
                                                "description": "Valid ISO 4217 ALPHA-3 currency code",
                                                "example": "USD"
                                            },
                                            "value": {
                                                "type": "string",
                                                "example": "10.01"
                                            }
                                        },
                                        "xml": {
                                            "name": "Amount"
                                        }
                                    },
                                    "xml": {
                                        "name": "totalFees",
                                        "wrapped": true
                                    }
                                },
                                "totalChargebacks": {
                                    "type": "array",
                                    "description": "List of total chargebacks currency wise",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "currency",
                                            "value"
                                        ],
                                        "properties": {
                                            "currency": {
                                                "type": "string",
                                                "description": "Valid ISO 4217 ALPHA-3 currency code",
                                                "example": "USD"
                                            },
                                            "value": {
                                                "type": "string",
                                                "example": "10.01"
                                            }
                                        },
                                        "xml": {
                                            "name": "Amount"
                                        }
                                    },
                                    "xml": {
                                        "name": "totalChargebacks",
                                        "wrapped": true
                                    }
                                },
                                "netTotal": {
                                    "type": "array",
                                    "description": "List of new total currency wise",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "currency",
                                            "value"
                                        ],
                                        "properties": {
                                            "currency": {
                                                "type": "string",
                                                "description": "Valid ISO 4217 ALPHA-3 currency code",
                                                "example": "USD"
                                            },
                                            "value": {
                                                "type": "string",
                                                "example": "10.01"
                                            }
                                        },
                                        "xml": {
                                            "name": "Amount"
                                        }
                                    },
                                    "xml": {
                                        "name": "netTotal",
                                        "wrapped": true
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "reportingV3NetFundingsGet400Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "title": "reportingV3NetFundingsGet401Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "title": "reportingV3NetFundingsGet403Response"
                        }
                    },
                    "404": {
                        "description": "Report not found",
                        "schema": {
                            "title": "reportingV3NetFundingsGet404Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "title": "reportingV3NetFundingsGet500Response",
                            "type": "object",
                            "required": [
                                "submitTimeUtc",
                                "reason",
                                "message",
                                "details"
                            ],
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time of request in UTC. \n",
                                    "example": "2016-08-11T22:47:57Z"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "Documented reason code\n",
                                    "example": "INVALID_DATA"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Short descriptive message to the user.\n",
                                    "example": "One or more fields contains invalid data"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "Error field list\n",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Field in request that caused an error\n"
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Documented reason code\n"
                                            }
                                        },
                                        "description": "Provides failed validation input field detail\n"
                                    }
                                }
                            },
                            "description": "HTTP status code for client application"
                        },
                        "examples": {
                            "application/json": {
                                "code": "SERVER_ERROR",
                                "correlationId": null,
                                "detail": null,
                                "fields": [],
                                "localizationKey": "cybsapi.server.error",
                                "message": "Error encountered while processing request"
                            }
                        }
                    }
                }
            }
        },
        "/reporting/v3/dtds/{reportDefinitionNameVersion}": {
            "get": {
                "tags": [
                    "DownloadDTD"
                ],
                "summary": "Used to download DTDs for reports.",
                "description": "Downloads DTDs for reports on no-auth.",
                "operationId": "getDTDV2",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting",
                    "isClientSideApi": true
                },
                "produces": [
                    "application/xml-dtd"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionNameVersion",
                        "in": "path",
                        "description": "Name and version of DTD file to download. Some DTDs only have one version. In that case version name is not needed. Some example values are ctdr-1.0, tdr, pbdr-1.1",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad request. DTD file name may be invalid"
                    },
                    "404": {
                        "description": "DTD file not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/reporting/v3/xsds/{reportDefinitionNameVersion}": {
            "get": {
                "tags": [
                    "DownloadXSD"
                ],
                "summary": "Used to download XSDs for reports.",
                "description": "Downloads XSDs for reports on no-auth.",
                "operationId": "getXSDV2",
                "x-devcenter-metaData": {
                    "categoryTag": "Reporting",
                    "isClientSideApi": true
                },
                "produces": [
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionNameVersion",
                        "in": "path",
                        "description": "Name and version of XSD file to download. Some XSDs only have one version. In that case version name is not needed. Some example values are DecisionManagerDetailReport, DecisionManagerTypes",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad request. XSD file name may be invalid"
                    },
                    "404": {
                        "description": "XSD file not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/risk/v1/decisions": {
            "post": {
                "summary": "Create Decision Manager case",
                "description": "This is the combined request to the Decision Manager Service for a transaction sent to Cybersource.\nDecision Manager will return a decision based on the request values.\n",
                "operationId": "createDecisionManagerCase",
                "tags": [
                    "decision manager"
                ],
                "x-devcenter-metaData": {
                    "categoryTag": "Decision_Manager"
                },
                "parameters": [
                    {
                        "name": "createDecisionManagerCaseRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "orderInformation",
                                "clientReferenceInformation"
                            ],
                            "properties": {
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "comments": {
                                            "type": "string",
                                            "maxLength": 255,
                                            "description": "Brief description of the order or any comment you wish to add to the order."
                                        }
                                    }
                                },
                                "processorInformation": {
                                    "type": "object",
                                    "description": "Contains information related to the payment processor.",
                                    "properties": {
                                        "avs": {
                                            "type": "object",
                                            "description": "Address Verification Service",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Value returned for address verification from the Payments Authorization response."
                                                }
                                            }
                                        }
                                    }
                                },
                                "paymentInformation": {
                                    "type": "object",
                                    "description": "Contains the payment data for this transaction.",
                                    "properties": {
                                        "card": {
                                            "type": "object",
                                            "description": "Use this for a non-tokenized payment card.",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "The customer\u2019s payment card number, also knows as the Primary Account Nunmber (PAN). You can also use this field\nfor encoded account numbers.\n\nFor processor-specific information, see the `customer_cc_number` field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                },
                                                "bin": {
                                                    "type": "string",
                                                    "maxLength": 6,
                                                    "description": "description: The BIN is the first six digits of the card's Primary Account Number (PAN).\n"
                                                },
                                                "expirationMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Two-digit month in which the payment card expires.\n\nFormat: `MM`.\n\nValid values: `01` through `12`.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`01` through `12`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `12`.\n\nFor processor-specific information, see the `customer_cc_expmo` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Four-digit year in which the credit card expires.\n\nFormat: `YYYY`.\n\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`1900` through `3000`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**FDC Nashville Global and FDMS South**\\\nYou can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `2021`.\n\nFor processor-specific information, see the `customer_cc_expyr` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        },
                                        "tokenizedCard": {
                                            "type": "object",
                                            "description": "Use this object to submit a payment network token instead of card-based values.",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Customer\u2019s payment network token value.\n"
                                                },
                                                "expirationMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Two-digit month in which the payment network token expires. `Format: MM`. Possible values: 01 through 12.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (01 through 12) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use 12.\n\nFor processor-specific information, see the customer_cc_expmo field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Four-digit year in which the payment network token expires. `Format: YYYY`.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (1900 through 3000) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**FDC Nashville Global and FDMS South**\\\nYou can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (card_type=039), if there is no expiration date on the card, use 2021.\n\nFor processor-specific information, see the customer_cc_expyr field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "description": "Contains detailed order-level information.",
                                    "properties": {
                                        "amountDetails": {
                                            "type": "object",
                                            "description": "Contains `currency` and `totalAmount` for this order.",
                                            "required": [
                                                "currency"
                                            ],
                                            "properties": {
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                },
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 19,
                                                    "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                }
                                            }
                                        },
                                        "shippingDetails": {
                                            "type": "object",
                                            "description": "Contains shipping information not related to address.",
                                            "properties": {
                                                "giftWrap": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Boolean that indicates whether the customer requested gift wrapping for this\npurchase. This field can contain one of the following\nvalues:\n\n- `yes`: The customer requested gift wrapping.\n- `no`: The customer did not request gift wrapping.\n"
                                                },
                                                "shippingMethod": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Shipping method for the product. Possible values:\n\n - `lowcost`: Lowest-cost service\n - `sameday`: Courier or same-day service\n - `oneday`: Next-day or overnight service\n - `twoday`: Two-day service\n - `threeday`: Three-day service\n - `pickup`: Store pick-up\n - `other`: Other shipping method\n - `none`: No shipping method because product is a service or subscription\n"
                                                }
                                            }
                                        },
                                        "shipTo": {
                                            "type": "object",
                                            "description": "Contains recipient shipping information.",
                                            "properties": {
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the shipping address."
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Second line of the shipping address."
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the shipping address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "description": "Country of the shipping address. Use the two-character ISO Standard Country Codes.",
                                                    "maxLength": 2
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the shipping address."
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First name of the recipient.\n\n**Processor specific maximum length**\n\n- Litle: 25\n- All other processors: 60\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Last name of the recipient.\n\n**Processor-specific maximum length**\n\n- Litle: 25\n- All other processors: 60\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Phone number associated with the shipping address."
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the shipping address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\n**American Express Direct**\\\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the\nremaining value is longer than nine characters, truncates the value starting from the right side.\n"
                                                }
                                            }
                                        },
                                        "returnsAccepted": {
                                            "type": "string",
                                            "maxLength": 3,
                                            "description": "Boolean that indicates whether returns are accepted for this order.\nThis field can contain one of the following values:\n- `yes`: Returns are accepted for this order.\n- `no`: Returns are not accepted for this order.\n"
                                        },
                                        "lineItems": {
                                            "type": "array",
                                            "description": "This array contains detailed information about individual products in the order.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "unitPrice": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you\ncannot include any other special characters. CyberSource truncates the amount to the correct number of decimal\nplaces.\n\nFor processor-specific information, see the amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n- Table 12, \"Authorization Information for Specific Processors,\" on page 36\n- Table 16, \"Capture Information for Specific Processors,\" on page 51\n- Table 20, \"Credit Information for Specific Processors,\" on page 65\n\n**DCC for First Data**\\\nThis value is the original amount in your local currency. You must include this field. You cannot use grand_total_amount. See \"Dynamic Currency Conversion for First Data,\" page 113.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 12, \"Authorization Information for Specific Processors,\" on page 36.\n\n**Zero Amount Authorizations**\\\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 220.\n"
                                                    },
                                                    "quantity": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 9999999999,
                                                        "description": "Number of units for this order.\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of the other values that are related to shipping and/or handling.\nWhen `orderInformation.lineItems[].productCode` is `gift_card`, this is the total count of individual prepaid gift cards purchased.\n",
                                                        "default": 1
                                                    },
                                                    "productSKU": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Stock Keeping Unit (SKU) code for the product.\n\nFor an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`), this field is required when _orderInformation.lineItems[].productCode_ is not set to **default** or one of the other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "productRisk": {
                                                        "type": "string",
                                                        "maxLength": 6,
                                                        "description": "Indicates the level of risk for the product. This field can contain one of the following values:\n- `low`: The product is associated with few chargebacks.\n- `normal`: The product is associated with a normal number of chargebacks.\n- `high`: The product is associated with many chargebacks.\n"
                                                    },
                                                    "productName": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "For an authorization or capture transaction (`processingOptions.capture` is set to `true` or `false`),\nthis field is required when `orderInformation.lineItems[].productCode` is not set to `default` or one of\nthe other values that are related to shipping and/or handling.\n"
                                                    },
                                                    "productCode": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Type of product. This value is used to determine the category that the product is in: electronic, handling,\nphysical, service, or shipping. The default value is **default**.\nIf you are performing an authorization transaction (`processingOptions.capture` is set to `false`), and you set this field to a value other than default or any of the values related to\nshipping and handling, then the fields `quantity`, `productName`, and `productSku` are required.\nIt can also have a value of \"gift_card\".\n\nSee Appendix O, \"Product Codes,\" on page 373 for a list of valid values.\nFor a payment, when you set this field to a value other than default or any of the values related to\nshipping and handling, below fields _quantity_, _productName_, and _productSKU_ are required.\n"
                                                    },
                                                    "gift": {
                                                        "type": "string",
                                                        "maxLength": 3,
                                                        "description": "Determines whether to assign risk to the order if the billing and shipping addresses specify different cities,\nstates, or countries. This field can contain one of the following values:\n- `yes`: Orders are assigned only slight additional risk if billing and shipping addresses are different.\n- `no` (default): Orders are assigned higher additional risk if billing and shipping addresses are different.\n- `off`: Differences between billing and shipping addresses do not affect the score.\n",
                                                        "default": "no"
                                                    },
                                                    "distributorProductSku": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Product\u2019s identifier code. This field is inserted into the outgoing message without being parsed or formatted.\nThis field is included as Distributor product SKU (Offer) in the list of API fields with which you can create\ncustom rules.\n"
                                                    },
                                                    "passenger": {
                                                        "type": "object",
                                                        "description": "Contains travel-related passenger details.",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "maxLength": 32,
                                                                "description": "Passenger classification associated with the price of the ticket. You can use one of the following values:\n- `ADT`: Adult\n- `CNN`: Child\n- `INF`: Infant\n- `YTH`: Youth\n- `STU`: Student\n- `SCR`: Senior Citizen\n- `MIL`: Military\n"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "maxLength": 32,
                                                                "description": "Your company's passenger classification, such as with a frequent flyer program. In this case, you might use\nvalues such as `standard`, `gold`, or `platinum`.\n"
                                                            },
                                                            "phone": {
                                                                "type": "string",
                                                                "maxLength": 15,
                                                                "description": "Passenger's phone number. If the order is from outside the U.S., CyberSource recommends that you include\nthe country code.\n"
                                                            },
                                                            "firstName": {
                                                                "type": "string",
                                                                "maxLength": 60,
                                                                "description": "Passenger's first name."
                                                            },
                                                            "lastName": {
                                                                "type": "string",
                                                                "maxLength": 60,
                                                                "description": "Passenger's last name."
                                                            },
                                                            "id": {
                                                                "type": "string",
                                                                "maxLength": 40,
                                                                "description": "ID of the passenger to whom the ticket was issued. For example, you can use this field for the frequent flyer\nnumber.\n"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "maxLength": 255,
                                                                "description": "Passenger's email address, including the full domain name, such as jdoe@example.com."
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "billTo": {
                                            "type": "object",
                                            "properties": {
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the billing street address as it appears on the credit card issuer\u2019s records.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_address1 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Additional address information.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**Atos**\nThis field must not contain colons (:).\n\n**Chase Paymentech Solutions, FDC Compass, and TSYS Acquiring Solutions**\nThis value is used for AVS.\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_address2 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "State or province of the billing address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_state field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Country of the billing address. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_country field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the billing address.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the bill_city field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s first name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**:\\\nThis field may be sent only for FDC Compass.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_firstname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s last name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\n**For Payouts** : This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the customer_lastname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Customer\u2019s phone number.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nCyberSource recommends that you include the country code when the order is from outside the U.S.\n\nFor processor-specific information, see the customer_phone field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Customer's email address, including the full domain name.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_email field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**American Express Direct**\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the remaining value is longer than nine characters, truncates the value starting from the right side.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_zip field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "description": "Contains information about the buyer.",
                                    "properties": {
                                        "hashedPassword": {
                                            "type": "string",
                                            "maxLength": 100,
                                            "description": "The description for this field is not available.\n"
                                        },
                                        "dateOfBirth": {
                                            "type": "string",
                                            "maxLength": 8,
                                            "description": "Recipient\u2019s date of birth. **Format**: `YYYYMMDD`.\n\nThis field is a pass-through, which means that CyberSource ensures that the value is eight numeric characters\nbut otherwise does not verify the value or modify it in any way before sending it to the processor. If the field\nis not required for the transaction, CyberSource does not forward it to the processor.\n\nFor more details, see \"Recipients,\" page 224.\n"
                                        },
                                        "personalIdentification": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "description": "The type of the identification.\n\nPossible values:\n  - `NATIONAL`\n  - `CPF`\n  - `CPNJ`\n  - `CURP`\n  - `SSN`\n  - `DRIVER_LICENSE`\n\nThis field is supported only on the following processors.\n\n**ComercioLatino**\\\nSet this field to the Cadastro de Pessoas Fisicas (CPF).\n\n**CyberSource Latin American Processing**\\\nSupported for Redecard in Brazil. Set this field to the Cadastro de Pessoas Fisicas (CPF), which is required for AVS for Redecard in Brazil.\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n",
                                                        "enum": [
                                                            "NATIONAL",
                                                            "CPF",
                                                            "CPNJ",
                                                            "CURP",
                                                            "SSN",
                                                            "DRIVER_LICENSE"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "maxLength": 26,
                                                        "description": "The value of the identification type. This field is supported only on the following processors.\n\n**ComercioLatino**\nSet this field to the Cadastro de Pessoas Fisicas (CPF).\n\n**CyberSource Latin American Processing**\nSupported for Redecard in Brazil. Set this field to the Cadastro de Pessoas Fisicas (CPF), which is required for AVS for Redecard in Brazil.\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\nFor processor-specific information, see the personal_id field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n  \nIf type = PASSPORT, this is the cardholder's passport number.\nRecommended for Discover ProtectBuy.\n"
                                                    },
                                                    "issuedBy": {
                                                        "type": "string",
                                                        "description": "If type = DRIVER_LICENSE, this is the State or province where the customer\u2019s driver\u2019s license was issued.\nUse the two-character State, Province, and Territory Codes for the United States and Canada.\n\n** TeleCheck **\nContact your TeleCheck representative to find out whether this field is required or optional.\n\n** All Other Processors **\nNot used.\n\nIf type = PASSPORT, this is the Issuing country for the cardholder\u2019s passport.\nRecommended for Discover ProtectBuy.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "deviceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "cookiesAccepted": {
                                            "type": "string",
                                            "description": "Boolean that indicates whether the customer\u2019s browser accepts cookies. This field can contain one of the following values:\n  - `yes`: The customer\u2019s browser accepts cookies.\n  - `no`: The customer\u2019s browser does not accept cookies.\n"
                                        },
                                        "ipAddress": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Customer\u2019s IP address, such as 10.1.27.63, reported by your Web server via socket information.\n"
                                        },
                                        "hostName": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Host name reported by the customer\u2019s browser to your Web server identified via the HTTP header."
                                        },
                                        "fingerprintSessionId": {
                                            "type": "string",
                                            "description": "Contains the session ID that you send to Decision Manager to obtain the device fingerprint\ninformation. The string can contain uppercase and lowercase letters, digits, hyphen (-), and\nunderscore (_). However, do not use the same uppercase and lowercase letters to indicate different session IDs.\nThe session ID must be unique for each merchant ID. You can use any string that you are already generating,\nsuch as an order number or web session ID.The session ID must be unique for each page load, regardless of an\nindividual\u2019s web session ID.\nIf the same user navigates to a profiled page and is assigned a web session, navigates away from the profiled\npage, then navigates back to the profiled page, the generated session ID should be different and unique.\nAn example of an ideal session ID would be a web session ID plus the timestamp. This measure ensures that a\nunique ID is generated every time the page is loaded, even if it is the same user reloading the page.\n"
                                        },
                                        "httpBrowserEmail": {
                                            "type": "string",
                                            "description": "Email address set in the customer\u2019s browser, which may differ from customer email.\n"
                                        },
                                        "userAgent": {
                                            "type": "string",
                                            "maxLength": 40,
                                            "description": "Customer\u2019s browser as identified from the HTTP header data. For example, Mozilla is the value that identifies\nthe Netscape browser.\n"
                                        }
                                    }
                                },
                                "cardVerification": {
                                    "type": "object",
                                    "properties": {
                                        "resultCode": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Result of card verification. Returned by the authorization service in the `processorInformation.cardVerification.resultCode`\nreply field. If ics_auth and ics_score are requested at the same time, the value is automatically\npassed from ics_auth to ics_score. For more information on using this field, see\n\"\"Sending the Results of Address and Card Verification Tests,\"\" page 16.\nThe field contains one of the following values:\n  - `I`: Card verification number failed processor's data\n  validation check.\n  - `M`: Card verification number matched.\n  - `N`: Card verification number not matched.\n  - `P`: Card verification number not processed.\n  - `S`: Card verification number is on the card but was not included in the request.\n  - `U`: Card verification is not supported by the issuing bank.\n  - `X`: Card verification is not supported by the payment card company.\n  - Space Character: Deprecated. Ignore this value.\n  - `1`: CyberSource does not support card verification for this processor or card type.\n  - `2`: Processor returned value unrecognized for card verification response.\n  - `3`: Processor did not return card verification result code.\n"
                                        }
                                    }
                                },
                                "riskInformation": {
                                    "type": "object",
                                    "properties": {
                                        "profile": {
                                            "type": "object",
                                            "description": "Identifies a risk profile.",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 30,
                                                    "description": "Name of the active profile chosen by the profile selector. If no profile selector exists,\nthe default active profile is chosen.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "travelInformation": {
                                    "type": "object",
                                    "properties": {
                                        "completeRoute": {
                                            "type": "string",
                                            "maxLength": 255,
                                            "description": "Concatenation of individual travel legs in the format ORIG1-DEST1[:ORIG2-DEST2...:ORIGn-DESTn], for\nexample, SFO-JFK:JFK-LHR:LHR-CDG. For airport codes, see the IATA Airline and Airport Code Search.\nNote In your request, send either the complete route or the individual legs (_leg#_orig and _leg#_dest). If you\nsend all the fields, the value of _complete_route takes precedence over that of the _leg# fields.\n"
                                        },
                                        "departureTime": {
                                            "type": "string",
                                            "maxLength": 25,
                                            "description": "Departure date and time of the first leg of the trip. Use one of the following formats:\n  - yyyy-MM-dd HH:mm z\n  - yyyy-MM-dd hh:mm a z\n  - yyyy-MM-dd hh:mma z\n  HH = hour in 24-hour format\n  hh = hour in 12-hour format\n  a = am or pm (case insensitive)\n  z = time zone of the departing flight, for example: If the\n  airline is based in city A, but the flight departs from city\n  B, z is the time zone of city B at the time of departure.\nImportant For travel information, use GMT instead of UTC, or use the local time zone.\nExamples\n2011-03-20 11:30 PM PDT\n2011-03-20 11:30pm GMT\n2011-03-20 11:30pm GMT-05:00\nEastern Standard Time: GMT-05:00 or EST\nNote When specifying an offset from GMT, the format must be exactly as specified in the example. Insert no\nspaces between the time zone and the offset.\n"
                                        },
                                        "journeyType": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "description": "Type of travel, for example one way or round trip."
                                        },
                                        "legs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "origination": {
                                                        "type": "string",
                                                        "maxLength": 3,
                                                        "description": "Use to specify the airport code for the origin of the leg of the trip, which is designated by the pound (#)\nsymbol in the field name. This code is usually three digits long, for example: SFO = San Francisco.\nDo not use the colon (:) or the dash (-). For airport codes, see the IATA Airline and Airport Code Search.\nThe leg number can be a positive integer from 0 to N.\nFor example:\ndecision_manager_travel_leg0_orig=SFO\ndecision_manager_travel_leg1_orig=SFO\nNote In your request, send either the complete route or the individual legs (_leg#_orig and _leg#_dest). If you\nsend all the fields, the complete route takes precedence over the individual legs.\n"
                                                    },
                                                    "destination": {
                                                        "type": "string",
                                                        "maxLength": 3,
                                                        "description": "Use to specify the airport code for the destination of the leg of the trip, which is designated by the pound (#)\nsymbol in the field name. This code is usually three digits long, for example: SFO = San Francisco. Do not use the\ncolon (:) or the dash (-). For airport codes, see the IATA Airline and Airport Code Search. The leg number can be a\npositive integer from 0 to N.\nFor example:\ndecision_manager_travel_leg0_dest=SFO\ndecision_manager_travel_leg1_dest=SFO\nNote In your request, send either the complete route or the individual legs (_leg#_orig and _leg#_dest). If you\nsend all the fields, the complete route takes precedence over the individual legs.\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "merchantDefinedInformation": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Contains merchant-defined key-value pairs.",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "Fields that you can use to store information. The value\nappears in the Case Management Details window in the\nBusiness Center. The first four fields are the same fields\nthat are used by the Secure Data services. See request\ncode examples.\nWarning Merchant-defined data fields are not intended\nto and must not be used to capture personally identifying\ninformation. Accordingly, merchants are prohibited from\ncapturing, obtaining, and/or transmitting any personally\nidentifying information in or via the merchant-defined data\nfields. Personally identifying information includes, but is\nnot limited to, address, credit card number, social security\nnumber, driver's license number, state-issued\nidentification number, passport number, and card\nverification numbers (CVV, CVC2, CVV2, CID, CVN). In\nthe event CyberSource discovers that a merchant is\ncapturing and/or transmitting personally identifying\ninformation via the merchant-defined data fields, whether\nor not intentionally, CyberSource will immediately\nsuspend the merchant's account, which will result in a\nrejection of any and all transaction requests submitted by\nthe merchant after the point of suspension.\n"
                                            },
                                            "value": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "String value for the key"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "title": "riskV1DecisionsPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        },
                                        "reversal": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        },
                                        "capture": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "submitTimeLocal": {
                                    "type": "string",
                                    "description": "Time that the transaction was submitted in local time."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n  - `ACCEPTED`\n  - `REJECTED`\n  - `PENDING_REVIEW`\n"
                                },
                                "riskInformation": {
                                    "type": "object",
                                    "description": "Contains the result of risk assessment.",
                                    "properties": {
                                        "profile": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 30,
                                                    "description": "Name of the active profile chosen by the profile selector. If no profile selector exists,\nthe default active profile is chosen.\n"
                                                },
                                                "desinationQueue": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Name of the queue where orders that are not automatically accepted are sent.\n"
                                                },
                                                "selectorRule": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Name of the profile selector rule that chooses the profile to use for the\ntransaction. If no profile selector exists, the value is Default Active Profile.\n"
                                                }
                                            }
                                        },
                                        "rules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Description of the rule as it appears in the Profile Editor."
                                                    },
                                                    "decision": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Summarizes the result for the rule according to the setting that you chose in the Profile Editor.\nThis field can contain one of the following values:\n- `IGNORE`\n- `REVIEW`\n- `REJECT`\n- `ACCEPT`\n"
                                                    }
                                                }
                                            }
                                        },
                                        "infoCodes": {
                                            "type": "object",
                                            "properties": {
                                                "velocity": {
                                                    "type": "array",
                                                    "description": "List of information codes triggered by the order. These information codes were generated when you created\nthe order and product velocity rules and are returned so that you can associate them with the rules.\n",
                                                    "items": {
                                                        "type": "string",
                                                        "description": "Indicates excessive volume of transactions."
                                                    }
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "description": "Indicates a mismatch between the customer\u2019s billing and shipping addresses.",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "customerList": {
                                                    "type": "array",
                                                    "description": "Indicates that customer information is associated with transactions that are either on the negative or\nthe positive list.\n",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "identityChange": {
                                                    "type": "array",
                                                    "description": "Indicates excessive identity changes. The threshold is variable depending on the identity elements being\ncompared. This field can contain one or more information codes, separated by carets (^).\n",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "internet": {
                                                    "type": "array",
                                                    "description": "Indicates a problem with the customer\u2019s email address, IP address, or billing address.",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "description": "Indicates a problem with the customer\u2019s phone number.",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "suspicious": {
                                                    "type": "array",
                                                    "description": "Indicates that the customer provided potentially suspicious information.",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "globalVelocity": {
                                                    "type": "array",
                                                    "description": "Indicates that the customer has a high purchase frequency.",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "velocity": {
                                            "type": "object",
                                            "properties": {
                                                "morphing": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "count": {
                                                                "type": "integer",
                                                                "maxLength": 5,
                                                                "description": "Morphing count. Note The count is not returned for the initial transaction."
                                                            },
                                                            "fieldName": {
                                                                "type": "string",
                                                                "maxLength": 255,
                                                                "description": "Field name of the morphing element. specified by the setting that you chose in the\nVelocity Editor. For all possible values, Please refer to Simple Order API Developer Guide\n on [CyberSource Business Center](https://ebc2.cybersource.com/ebc2/) - Look for 'Reply Fields': \"decisionReply_morphingElement_#_fieldName\".\n"
                                                            },
                                                            "informationCode": {
                                                                "type": "string",
                                                                "maxLength": 255,
                                                                "description": "Identifier that CYBS assigned to the velocity rule specified by the number."
                                                            }
                                                        }
                                                    }
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Indicates a mismatch between the customer\u2019s billing and shipping addresses."
                                                    }
                                                }
                                            }
                                        },
                                        "casePriority": {
                                            "type": "integer",
                                            "maxLength": 1,
                                            "description": "You receive this field only if you subscribe to the Enhanced Case Management service.\nFor all possible values, Please refer to Simple Order API Developer Guide\non [CyberSource Business Center](https://ebc2.cybersource.com/ebc2/) - Look for 'Reply Fields': \"decisionReply_casePriority\".\n"
                                        },
                                        "localTime": {
                                            "type": "string",
                                            "maxLength": 255,
                                            "description": "The customer's local time (hh:mm:ss), which is calculated from the transaction request time and the\ncustomer's billing address.\n"
                                        },
                                        "paymentInformation": {
                                            "type": "object",
                                            "description": "Contains response information about the payment.",
                                            "properties": {
                                                "binCountry": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Country (two-digit country code) associated with the BIN of the customer\u2019s card used for the payment.\nReturned if the information is available. Use this field for additional information when reviewing orders.\nThis information is also displayed in the details page of the Business Center.\n"
                                                },
                                                "accountType": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Type of payment card account. This field can refer to a credit card, debit card, or prepaid card\naccount type.\n"
                                                },
                                                "issuer": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Name of the bank or entity that issued the card account."
                                                },
                                                "scheme": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Subtype of card account. This field can contain one of the following values:\n- Maestro International\n- Maestro UK Domestic\n- MasterCard Credit\n- MasterCard Debit\n- Visa Credit\n- Visa Debit\n- Visa Electron\n*Note:* Additional values may be present.\n"
                                                },
                                                "bin": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Credit card BIN (the first six digits of the credit card).Derived either from the `bin` request field\nor from the first six characters of the `number` field.\n"
                                                }
                                            }
                                        },
                                        "score": {
                                            "type": "object",
                                            "properties": {
                                                "factorCodes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "description": "This field contains information that affected the score of the order.\nThis field will contain one or more codes, separated by carets (^).\n"
                                                    }
                                                },
                                                "modelUsed": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Name of the score model used for the transaction. If you did not include a custom model in your request,\nthis field contains the name of CyberSource\u2019s default model.\n"
                                                },
                                                "result": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Total score calculated for this order. The value cannot be negative.\n"
                                                }
                                            }
                                        },
                                        "ipAddress": {
                                            "type": "object",
                                            "description": "Contains detailed response information about the customer's IP address.",
                                            "properties": {
                                                "anonymizerStatus": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Indicates whether the transaction IP address is associated with a known anonymous proxy.\nFor all possible values, Please refer to Simple Order API Developer Guide\non [CyberSource Business Center](https://ebc2.cybersource.com/ebc2/)- Look for 'Reply Fields': \"afsReply_ipAnonymizerStatus\".\n"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Name of the city decoded from the IP address used directly or indirectly by the customer to send the order.\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Name of the country decoded from the IP address used directly or indirectly by the customer to send the order.\n"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Name of the state decoded from the IP address used directly or indirectly by the customer to send the order.\n"
                                                },
                                                "routingMethod": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Routing method decoded from the IP address used directly or indirectly by the customer to send the order.\nFor all possible values, Please refer to Simple Order API Developer Guide\non [CyberSource Business Center](https://ebc2.cybersource.com/ebc2/)- Look for 'Reply Fields': \"afsService_ipRoutingMethod \".\n"
                                                }
                                            }
                                        },
                                        "providers": {
                                            "type": "object",
                                            "properties": {
                                                "providerName": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "description": "Name of the 3rd party provider, for example, Emailage.",
                                                        "properties": {
                                                            "fieldName": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "description": "Field name, for example, email address domain name (domain_name)."
                                                                }
                                                            },
                                                            "fieldValue": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "description": "Value for the field, for example, yahoo.com."
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string",
                                            "description": "The reason of the status.\n\nPossible values:\n - AVS_FAILED\n - CONTACT_PROCESSOR\n - EXPIRED_CARD\n - PROCESSOR_DECLINED\n - INSUFFICIENT_FUND\n - STOLEN_LOST_CARD\n - ISSUER_UNAVAILABLE\n - UNAUTHORIZED_CARD\n - CVN_NOT_MATCH\n - EXCEEDS_CREDIT_LIMIT\n - INVALID_CVN\n - DECLINED_CHECK\n - BLACKLISTED_CUSTOMER\n - SUSPENDED_ACCOUNT\n - PAYMENT_REFUSED\n - CV_FAILED\n - INVALID_ACCOUNT\n - GENERAL_DECLINE\n - INVALID_MERCHANT_CONFIGURATION\n",
                                            "enum": [
                                                "AVS_FAILED",
                                                "CONTACT_PROCESSOR",
                                                "CV_FAILED",
                                                "EXPIRED_CARD",
                                                "PROCESSOR_DECLINED",
                                                "INSUFFICIENT_FUND",
                                                "STOLEN_LOST_CARD",
                                                "ISSUER_UNAVAILABLE",
                                                "UNAUTHORIZED_CARD",
                                                "CVN_NOT_MATCH",
                                                "EXCEEDS_CREDIT_LIMIT",
                                                "INVALID_CVN",
                                                "PAYMENT_REFUSED",
                                                "INVALID_ACCOUNT",
                                                "GENERAL_DECLINE"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "The detail message related to the status and reason listed above."
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                                    },
                                                    "reason": {
                                                        "type": "string",
                                                        "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                        "enum": [
                                                            "MISSING_FIELD",
                                                            "INVALID_DATA"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "riskV1DecisionsPost400Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_MERCHANT_CONFIGURATION\n - PROCESSOR_UNAVAILABLE\n"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "riskV1DecisionsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Basic DM Transaction",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationMonth": "12",
                                    "expirationYear": "2020",
                                    "number": "4444444444444448"
                                }
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "James",
                                    "lastName": "Smith",
                                    "locality": "Clearwater milford",
                                    "address1": "96, powers street",
                                    "email": "test@visa.com",
                                    "country": "US",
                                    "administrativeArea": "NH",
                                    "postalCode": "03055",
                                    "phoneNumber": "7606160717"
                                },
                                "amountDetails": {
                                    "currency": "USD",
                                    "totalAmount": "144.14"
                                }
                            }
                        },
                        "responseValue": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "id": "5526663169230178269497",
                            "riskInformation": {
                                "score": "H",
                                "localTime": "12:11:56",
                                "infoCodes": {
                                    "address": [
                                        "COR-BA",
                                        "MM-BIN"
                                    ]
                                },
                                "profile": {
                                    "name": "Example",
                                    "selectorRule": "Default Active Profile"
                                },
                                "rules": [
                                    {
                                        "decision": "IGNORE",
                                        "name": "Correctable errors in addresses"
                                    },
                                    {
                                        "decision": "REVIEW",
                                        "name": "Order is above your AFS threshold for review."
                                    },
                                    {
                                        "decision": "IGNORE",
                                        "name": "CVN not submitted"
                                    }
                                ],
                                "paymentInformation": {
                                    "scheme": "VISA CREDIT",
                                    "bin": "444444",
                                    "accountType": "GOLD",
                                    "issuer": "CREDIT AGRICOLE BANK POLSKA, S.A.",
                                    "binCountry": "PL"
                                },
                                "providers": {},
                                "casePriority": "3"
                            },
                            "status": "ACCEPTED",
                            "submitTimeUtc": "2019-03-13T16:12:00Z"
                        }
                    },
                    "example1": {
                        "summary": "DM with Device Information",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationMonth": "12",
                                    "expirationYear": "2020",
                                    "number": "4444444444444448"
                                }
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "James",
                                    "lastName": "Smith",
                                    "locality": "Clearwater milford",
                                    "address1": "96, powers street",
                                    "email": "test@visa.com",
                                    "country": "US",
                                    "administrativeArea": "NH",
                                    "postalCode": "03055",
                                    "phoneNumber": "7606160717"
                                },
                                "amountDetails": {
                                    "currency": "USD",
                                    "totalAmount": "144.14"
                                }
                            },
                            "deviceInformation": {
                                "cookiesAccepted": "yes",
                                "hostName": "host.com",
                                "httpBrowserEmail": "xyz@gmail.com",
                                "userAgent": "Chrome",
                                "ipAddress": "64.124.61.215"
                            }
                        },
                        "responseValue": {
                            "riskInformation": {
                                "score": {
                                    "result": "99",
                                    "modelUsed": "default"
                                },
                                "localTime": "10:02:05",
                                "profile": {
                                    "name": "Profile 1_test",
                                    "selectorRule": "Default Active Profile"
                                },
                                "rules": [
                                    {
                                        "decision": "IGNORE",
                                        "name": "Correctable errors in addresses"
                                    },
                                    {
                                        "decision": "REVIEW",
                                        "name": "Order is above your AFS threshold for review."
                                    },
                                    {
                                        "decision": "IGNORE",
                                        "name": "CVN not submitted"
                                    }
                                ],
                                "paymentInformation": {
                                    "scheme": "VISA CREDIT",
                                    "bin": "444444",
                                    "accountType": "GOLD",
                                    "issuer": "CREDIT AGRICOLE BANK POLSKA, S.A."
                                },
                                "casePriority": "3"
                            },
                            "ipAddress": {
                                "country": "us",
                                "city": "seattle",
                                "state": "wa",
                                "routingMethod": "fixed"
                            }
                        }
                    },
                    "example2": {
                        "summary": "DM with Merchant Defined Information",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationMonth": "12",
                                    "expirationYear": "2020",
                                    "number": "4444444444444448"
                                }
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "James",
                                    "lastName": "Smith",
                                    "locality": "Clearwater milford",
                                    "address1": "96, powers street",
                                    "email": "test@visa.com",
                                    "country": "US",
                                    "administrativeArea": "NH",
                                    "postalCode": "03055",
                                    "phoneNumber": "7606160717"
                                },
                                "amountDetails": {
                                    "currency": "USD",
                                    "totalAmount": "144.14"
                                }
                            },
                            "merchantDefinedInformation": [
                                {
                                    "key": "1",
                                    "value": "Test"
                                },
                                {
                                    "key": "2",
                                    "value": "Test2"
                                }
                            ]
                        },
                        "responseValue": {
                            "riskInformation": {
                                "score": {
                                    "result": "99",
                                    "modelUsed": "default"
                                },
                                "localTime": "10:02:05",
                                "profile": {
                                    "name": "Profile 1_test",
                                    "selectorRule": "Default Active Profile"
                                },
                                "paymentInformation": {
                                    "scheme": "VISA CREDIT",
                                    "bin": "444444",
                                    "accountType": "GOLD",
                                    "issuer": "CREDIT AGRICOLE BANK POLSKA, S.A."
                                },
                                "casePriority": "3"
                            },
                            "rules": [
                                {
                                    "decision": "REJECT",
                                    "name": "Incorrect merchant defined data "
                                }
                            ]
                        }
                    },
                    "example3": {
                        "summary": "DM with Travel Information",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationMonth": "12",
                                    "expirationYear": "2020",
                                    "number": "4444444444444448"
                                }
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "James",
                                    "lastName": "Smith",
                                    "locality": "Clearwater milford",
                                    "address1": "96, powers street",
                                    "email": "test@visa.com",
                                    "country": "US",
                                    "administrativeArea": "NH",
                                    "postalCode": "03055",
                                    "phoneNumber": "7606160717"
                                },
                                "amountDetails": {
                                    "currency": "USD",
                                    "totalAmount": "144.14"
                                }
                            },
                            "travelInformation": {
                                "completeRoute": "SFO-JFK:JFK-BLR",
                                "departureTime": "2011-03-20 11:30pm GMT",
                                "journeyType": "One way",
                                "legs": [
                                    {
                                        "destination": "JFK",
                                        "origination": "SFO"
                                    },
                                    {
                                        "destination": "BLR",
                                        "origination": "JFK"
                                    }
                                ]
                            }
                        },
                        "responseValue": {
                            "riskInformation": {
                                "score": {
                                    "result": "99",
                                    "modelUsed": "default"
                                },
                                "localTime": "10:02:05",
                                "profile": {
                                    "name": "Profile 1_test",
                                    "selectorRule": "Default Active Profile"
                                },
                                "paymentInformation": {
                                    "scheme": "VISA CREDIT",
                                    "bin": "444444",
                                    "accountType": "GOLD",
                                    "issuer": "CREDIT AGRICOLE BANK POLSKA, S.A."
                                },
                                "casePriority": "3"
                            },
                            "rules": [
                                {
                                    "decision": "IGNORE",
                                    "name": "Correctable errors in addresses"
                                }
                            ]
                        }
                    },
                    "example4": {
                        "summary": "DM with Buyer Information",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationMonth": "12",
                                    "expirationYear": "2020",
                                    "number": "4444444444444448"
                                }
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "James",
                                    "lastName": "Smith",
                                    "locality": "Clearwater milford",
                                    "address1": "96, powers street",
                                    "email": "test@visa.com",
                                    "country": "US",
                                    "administrativeArea": "NH",
                                    "postalCode": "03055",
                                    "phoneNumber": "7606160717"
                                },
                                "amountDetails": {
                                    "currency": "USD",
                                    "totalAmount": "144.14"
                                }
                            },
                            "buyerInformation": {
                                "hashedPassword": "",
                                "dateOfBirth": "1998-05-05",
                                "personalIdentification": [
                                    {
                                        "id": "1a23apwe98",
                                        "type": "CPF"
                                    }
                                ]
                            }
                        },
                        "responseValue": {
                            "riskInformation": {
                                "score": {
                                    "result": "99",
                                    "modelUsed": "default"
                                },
                                "localTime": "10:02:05",
                                "profile": {
                                    "name": "Profile 1_test",
                                    "selectorRule": "Default Active Profile"
                                },
                                "paymentInformation": {
                                    "scheme": "VISA CREDIT",
                                    "bin": "444444",
                                    "accountType": "GOLD",
                                    "issuer": "CREDIT AGRICOLE BANK POLSKA, S.A."
                                },
                                "casePriority": "3"
                            },
                            "rules": [
                                {
                                    "decision": "REJECT",
                                    "name": "Incorrect BUYER data "
                                }
                            ]
                        }
                    },
                    "example5": {
                        "summary": "DM with Shipping Information",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationMonth": "12",
                                    "expirationYear": "2020",
                                    "number": "4444444444444448"
                                }
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "James",
                                    "lastName": "Smith",
                                    "locality": "Clearwater milford",
                                    "address1": "96, powers street",
                                    "email": "test@visa.com",
                                    "country": "US",
                                    "administrativeArea": "NH",
                                    "postalCode": "03055",
                                    "phoneNumber": "7606160717"
                                },
                                "amountDetails": {
                                    "currency": "USD",
                                    "totalAmount": "144.14"
                                }
                            },
                            "shipTo": {
                                "address1": "96, powers street",
                                "address2": "",
                                "locality": "Clearwater milford",
                                "country": "INDIA",
                                "firstName": "James",
                                "lastName": "Smith",
                                "phoneNumber": "7606160717",
                                "administrativeArea": "KA",
                                "postalCode": "560056"
                            }
                        },
                        "responseValue": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "id": "5526665686910178269497",
                            "riskInformation": {
                                "score": {
                                    "result": "99",
                                    "modelUsed": "default"
                                },
                                "localTime": "10:02:05",
                                "profile": {
                                    "name": "Profile 1_test",
                                    "selectorRule": "Default Active Profile"
                                },
                                "infoCodes": {
                                    "address": [
                                        "MM-A"
                                    ]
                                },
                                "rules": [
                                    {
                                        "decision": "IGNORE",
                                        "name": "Correctable errors in addresses"
                                    },
                                    {
                                        "decision": "REVIEW",
                                        "name": "Order is above your AFS threshold for review."
                                    },
                                    {
                                        "decision": "IGNORE",
                                        "name": "CVN not submitted"
                                    }
                                ],
                                "paymentInformation": {
                                    "scheme": "VISA CREDIT",
                                    "bin": "444444",
                                    "accountType": "GOLD",
                                    "issuer": "CREDIT AGRICOLE BANK POLSKA, S.A."
                                },
                                "casePriority": "3"
                            }
                        }
                    },
                    "example6": {
                        "summary": "SCORE_EXCEEDS_THRESHOLD response",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationMonth": "12",
                                    "expirationYear": "2020",
                                    "number": "4444444444444448"
                                }
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "James",
                                    "lastName": "Smith",
                                    "locality": "Clearwater milford",
                                    "address1": "96, powers street",
                                    "email": "test@visa.com",
                                    "country": "US",
                                    "administrativeArea": "NH",
                                    "postalCode": "03055",
                                    "phoneNumber": "7606160717"
                                },
                                "amountDetails": {
                                    "currency": "USD",
                                    "totalAmount": "144.14"
                                }
                            },
                            "shipTo": {
                                "address1": "96, powers street",
                                "address2": "",
                                "locality": "Clearwater milford",
                                "country": "INDIA",
                                "firstName": "James",
                                "lastName": "Smith",
                                "phoneNumber": "7606160717",
                                "administrativeArea": "KA",
                                "postalCode": "560056"
                            }
                        },
                        "responseValue": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "errorInformation": {
                                "reason": "SCORE_EXCEEDS_THRESHOLD",
                                "message": "Soft Decline - Fraud score exceeds threshold."
                            },
                            "id": "5525558950470178269497",
                            "riskInformation": {
                                "score": {
                                    "result": "90",
                                    "factorCodes": [
                                        "D",
                                        "Y"
                                    ],
                                    "modelUsed": "default"
                                },
                                "localTime": "05:31:35",
                                "infoCodes": {
                                    "address": [
                                        "COR-BA",
                                        "MM-BIN"
                                    ]
                                },
                                "ipAddress": {
                                    "country": "us",
                                    "city": "seattle",
                                    "state": "wa",
                                    "routingMethod": "fixed"
                                }
                            },
                            "status": "REJECTED",
                            "submitTimeUtc": "2019-03-14T09:31:35Z"
                        }
                    },
                    "example7": {
                        "summary": "DECISION_PROFILE_REJECT response",
                        "value": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "paymentInformation": {
                                "card": {
                                    "expirationMonth": "12",
                                    "expirationYear": "2020",
                                    "number": "4444444444444448"
                                }
                            },
                            "orderInformation": {
                                "billTo": {
                                    "firstName": "James",
                                    "lastName": "Smith",
                                    "locality": "Clearwater milford",
                                    "address1": "96, powers street",
                                    "email": "test@visa.com",
                                    "country": "US",
                                    "administrativeArea": "NH",
                                    "postalCode": "03055",
                                    "phoneNumber": "7606160717"
                                },
                                "amountDetails": {
                                    "currency": "USD",
                                    "totalAmount": "144.14"
                                }
                            },
                            "riskInformation": {
                                "profile": {
                                    "name": "profile2"
                                },
                                "score": {
                                    "ignoreAvsResults": "false"
                                }
                            }
                        },
                        "responseValue": {
                            "clientReferenceInformation": {
                                "code": "54323007"
                            },
                            "errorInformation": {
                                "reason": "DECISION_PROFILE_REJECT",
                                "message": "The order has been rejected by Decision Manager"
                            },
                            "id": "5525558833540178269497",
                            "riskInformation": {
                                "score": {
                                    "result": "96",
                                    "factorCodes": [
                                        "H",
                                        "V",
                                        "Y"
                                    ],
                                    "modelUsed": "default"
                                },
                                "localTime": "05:31:23",
                                "infoCodes": {
                                    "address": [
                                        "COR-BA",
                                        "MM-BIN"
                                    ]
                                },
                                "profile": {
                                    "destinationQueue": "Example",
                                    "name": "profile2",
                                    "selectorRule": "Default Active Profile"
                                },
                                "rules": [
                                    {
                                        "decision": "IGNORE",
                                        "name": "Correctable errors in addresses"
                                    },
                                    {
                                        "decision": "REVIEW",
                                        "name": "Order is above your AFS threshold for review."
                                    },
                                    {
                                        "decision": "IGNORE",
                                        "name": "CVN not submitted"
                                    }
                                ],
                                "paymentInformation": {
                                    "scheme": "VISA CREDIT",
                                    "bin": "444444",
                                    "accountType": "GOLD",
                                    "issuer": "CREDIT AGRICOLE BANK POLSKA, S.A.",
                                    "binCountry": "PL"
                                },
                                "casePriority": "3"
                            },
                            "status": "REJECTED",
                            "submitTimeUtc": "2019-03-14T09:31:29Z"
                        }
                    }
                }
            }
        },
        "/sfs/v1/file-details": {
            "get": {
                "tags": [
                    "SecureFileShare"
                ],
                "summary": "Get list of files",
                "description": "Get list of files and it's information of them available inside the report directory",
                "operationId": "getFileDetail",
                "x-devcenter-metaData": {
                    "categoryTag": "Secure_File_Share"
                },
                "x-queryParameterDefaults": {
                    "organizationId": "testrest",
                    "startDate": "2018-10-20T00:00:00.000Z",
                    "endDate": "2018-10-30T00:00:00.000Z"
                },
                "produces": [
                    "application/hal+json"
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Valid start date in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd\n",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Valid end date in **ISO 8601 format**\nPlease refer the following link to know more about ISO 8601 format.\n- https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\n\n **Example date format:**\n  - yyyy-MM-dd\n",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "title": "V1FileDetailsGet200Response",
                            "type": "object",
                            "properties": {
                                "fileDetails": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "fileId": {
                                                "type": "string",
                                                "description": "Unique identifier of a file",
                                                "example": "AC855F9F42C90361EC78202F47CDE98D70BEAA6FB00FB56AE83EE9A9DAEE077B"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the file",
                                                "example": "MyTransactionDetailreport.xml"
                                            },
                                            "createdTime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Date and time for the file in PST",
                                                "example": "2017-10-01T00:00:00+05:00"
                                            },
                                            "lastModifiedTime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Date and time for the file in PST",
                                                "example": "2017-10-01T00:00:00+05:00"
                                            },
                                            "date": {
                                                "type": "string",
                                                "format": "date",
                                                "description": "Date and time for the file in PST",
                                                "example": "2017-10-05"
                                            },
                                            "mimeType": {
                                                "type": "string",
                                                "description": "File extension",
                                                "enum": [
                                                    "application/xml",
                                                    "text/csv",
                                                    "application/pdf",
                                                    "application/octet-stream"
                                                ],
                                                "example": "application/xml"
                                            },
                                            "size": {
                                                "type": "integer",
                                                "description": "Size of the file in bytes",
                                                "example": 2245397
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "/sfs/v1/file-details?startDate=2018-01-01&endDate=2018-01-02"
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "example": "GET"
                                                }
                                            }
                                        },
                                        "files": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "fileId": {
                                                        "type": "string",
                                                        "description": "Unique identifier for each file",
                                                        "example": "AC855F9F42C90361EC78202F47CDE98D70BEAA6FB00FB56AE83EE9A9DAEE077B"
                                                    },
                                                    "href": {
                                                        "type": "string",
                                                        "example": "/sfs/v1/files/AC855F9F42C90361EC78202F47CDE98D70BEAA6FB00FB56AE83EE9A9DAEE077B"
                                                    },
                                                    "method": {
                                                        "type": "string",
                                                        "example": "GET"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "title": "V1FilesGet400Response",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message"
                                },
                                "localizationKey": {
                                    "type": "string",
                                    "description": "Localization Key Name"
                                },
                                "correlationId": {
                                    "type": "string",
                                    "description": "Correlation Id"
                                },
                                "detail": {
                                    "type": "string",
                                    "description": "Error Detail"
                                },
                                "fields": {
                                    "type": "array",
                                    "description": "Error fields List",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path of the failed property"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error description about validation failed field"
                                            },
                                            "localizationKey": {
                                                "type": "string",
                                                "description": "Localized Key Name"
                                            }
                                        },
                                        "description": "Provide validation failed input field details"
                                    }
                                }
                            },
                            "description": "Error Bean"
                        },
                        "examples": {
                            "application/json": {
                                "code": "VALIDATION_ERROR",
                                "correlationId": null,
                                "detail": null,
                                "fields": [
                                    {
                                        "path": "startTime",
                                        "message": "Start date should not precede 18 months from current time in GMT",
                                        "localizationKey": null
                                    }
                                ],
                                "localizationKey": "cybsapi.validation.errors",
                                "message": "Field validation errors"
                            }
                        }
                    },
                    "401": {
                        "description": "Ok",
                        "schema": {
                            "title": "V1FileDetailsGet401Response",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message"
                                },
                                "localizationKey": {
                                    "type": "string",
                                    "description": "Localization Key Name"
                                },
                                "correlationId": {
                                    "type": "string",
                                    "description": "Correlation Id"
                                },
                                "detail": {
                                    "type": "string",
                                    "description": "Error Detail"
                                },
                                "fields": {
                                    "type": "array",
                                    "description": "Error fields List",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path of the failed property"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error description about validation failed field"
                                            },
                                            "localizationKey": {
                                                "type": "string",
                                                "description": "Localized Key Name"
                                            }
                                        },
                                        "description": "Provide validation failed input field details"
                                    }
                                }
                            },
                            "description": "Error Bean"
                        },
                        "examples": {
                            "application/json": {
                                "code": "VALIDATION_ERROR",
                                "correlationId": null,
                                "detail": null,
                                "fields": [
                                    {
                                        "path": "organizationId",
                                        "message": "Organization doesn't has access to File details",
                                        "localizationKey": null
                                    }
                                ],
                                "localizationKey": "cybsapi.validation.errors",
                                "message": "Field validation errors"
                            }
                        }
                    },
                    "404": {
                        "description": "Files Info not found",
                        "schema": {
                            "title": "V1FileDetailsGet404Response",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message"
                                },
                                "localizationKey": {
                                    "type": "string",
                                    "description": "Localization Key Name"
                                },
                                "correlationId": {
                                    "type": "string",
                                    "description": "Correlation Id"
                                },
                                "detail": {
                                    "type": "string",
                                    "description": "Error Detail"
                                },
                                "fields": {
                                    "type": "array",
                                    "description": "Error fields List",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path of the failed property"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error description about validation failed field"
                                            },
                                            "localizationKey": {
                                                "type": "string",
                                                "description": "Localized Key Name"
                                            }
                                        },
                                        "description": "Provide validation failed input field details"
                                    }
                                }
                            },
                            "description": "Error Bean"
                        },
                        "examples": {
                            "application/json": {
                                "code": "RESOURCE_NOTFOUND",
                                "correlationId": null,
                                "detail": "The requested resource is not found. Please try again later.",
                                "localizationKey": "cybsapi.resource.notfound",
                                "message": "Files Info not found for requested input values"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "title": "V1FileDetailsGet500Response",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message"
                                },
                                "localizationKey": {
                                    "type": "string",
                                    "description": "Localization Key Name"
                                },
                                "correlationId": {
                                    "type": "string",
                                    "description": "Correlation Id"
                                },
                                "detail": {
                                    "type": "string",
                                    "description": "Error Detail"
                                },
                                "fields": {
                                    "type": "array",
                                    "description": "Error fields List",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path of the failed property"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error description about validation failed field"
                                            },
                                            "localizationKey": {
                                                "type": "string",
                                                "description": "Localized Key Name"
                                            }
                                        },
                                        "description": "Provide validation failed input field details"
                                    }
                                }
                            },
                            "description": "Error Bean"
                        },
                        "examples": {
                            "application/json": {
                                "code": "SERVER_ERROR",
                                "correlationId": null,
                                "detail": "Internal Server Error. Please contact the customer support.",
                                "localizationKey": "cybsapi.server.error",
                                "message": "Error encountered while processing request"
                            }
                        }
                    }
                }
            }
        },
        "/sfs/v1/files/{fileId}": {
            "get": {
                "tags": [
                    "SecureFileShare"
                ],
                "summary": "Download a file with file identifier",
                "description": "Download a file for the given file identifier",
                "operationId": "getFile",
                "x-devcenter-metaData": {
                    "categoryTag": "Secure_File_Share"
                },
                "x-queryParameterDefaults": {
                    "organizationId": "testrest"
                },
                "produces": [
                    "application/xml",
                    "text/csv",
                    "application/pdf"
                ],
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "Unique identifier for each file",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "description": "Valid Cybersource Organization Id",
                        "pattern": "[a-zA-Z0-9-_]+",
                        "required": false,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message"
                                },
                                "localizationKey": {
                                    "type": "string",
                                    "description": "Localization Key Name"
                                },
                                "correlationId": {
                                    "type": "string",
                                    "description": "Correlation Id"
                                },
                                "detail": {
                                    "type": "string",
                                    "description": "Error Detail"
                                },
                                "fields": {
                                    "type": "array",
                                    "description": "Error fields List",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path of the failed property"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error description about validation failed field"
                                            },
                                            "localizationKey": {
                                                "type": "string",
                                                "description": "Localized Key Name"
                                            }
                                        },
                                        "description": "Provide validation failed input field details"
                                    }
                                }
                            },
                            "description": "Error Bean"
                        }
                    },
                    "404": {
                        "description": "No Reports Found"
                    }
                }
            }
        },
        "/tms/v1/instrumentidentifiers": {
            "post": {
                "summary": "Create an Instrument Identifier",
                "parameters": [
                    {
                        "name": "profile-id",
                        "in": "header",
                        "description": "The id of a profile containing user specific TMS configuration.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "v-c-merchant-id",
                        "in": "header",
                        "description": "CyberSource merchant id.",
                        "required": true,
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 32
                    },
                    {
                        "name": "v-c-correlation-id",
                        "in": "header",
                        "description": "The mandatory correlation id passed by upstream (calling) system.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "Client-Application",
                        "in": "header",
                        "description": "Client application name",
                        "required": false,
                        "pattern": "^[a-zA-Z0-9\\\\-_]{3,30}|$",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    {
                        "name": "createInstrumentIdentifierRequest",
                        "in": "body",
                        "description": "Please specify either a Card, Bank Account or Enrollable Card",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "enrollable card",
                                    "description": "Type of Card"
                                },
                                "card": {
                                    "type": "object",
                                    "properties": {
                                        "number": {
                                            "type": "string",
                                            "example": "4622943127013705",
                                            "minLength": 12,
                                            "maxLength": 19,
                                            "description": "Credit card number (PAN)."
                                        },
                                        "expirationMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Card expiration month.\n\nFormat: `MM`.\nPossible values: `01` through `12`.\n"
                                        },
                                        "expirationYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Card expiration year.\n\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n"
                                        },
                                        "securityCode": {
                                            "type": "string",
                                            "example": "838",
                                            "minLength": 3,
                                            "maxLength": 4,
                                            "description": "Card security code."
                                        }
                                    }
                                },
                                "billTo": {
                                    "type": "object",
                                    "properties": {
                                        "address1": {
                                            "type": "string",
                                            "example": "8310 Capital of Texas Highway North",
                                            "description": "First address line registered with card."
                                        },
                                        "address2": {
                                            "type": "string",
                                            "example": "Bluffstone Drive",
                                            "description": "Second address line registered with card."
                                        },
                                        "locality": {
                                            "type": "string",
                                            "example": "Austin",
                                            "description": "Locality registered with card."
                                        },
                                        "administrativeArea": {
                                            "type": "string",
                                            "example": "TX",
                                            "description": "Administrative area registered with card."
                                        },
                                        "postalCode": {
                                            "type": "string",
                                            "example": "78731",
                                            "description": "Postal code registered with card."
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "US",
                                            "description": "Country registered with card."
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Instrument Identifier"
                ],
                "operationId": "createInstrumentIdentifier",
                "x-devcenter-metaData": {
                    "categoryTag": "Token_Management"
                },
                "consumes": [
                    "application/hal+json;charset=utf-8"
                ],
                "produces": [
                    "application/hal+json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "An existing Instrument Identifier containing the same data has already been returned.",
                        "headers": {
                            "Location": {
                                "description": "Link to the Instrument Identifier.",
                                "type": "string"
                            },
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1InstrumentIdentifiersPost200Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "ancestor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "successor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1234567890123456800",
                                    "description": "Unique identification number assigned by CyberSource to the submitted request."
                                },
                                "object": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "instrumentIdentifier",
                                    "description": "Describes type of token.",
                                    "enum": [
                                        "instrumentIdentifier"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "ACTIVE",
                                    "description": "Current state of the token.",
                                    "enum": [
                                        "ACTIVE",
                                        "CLOSED"
                                    ]
                                },
                                "card": {
                                    "type": "object",
                                    "properties": {
                                        "number": {
                                            "type": "string",
                                            "example": "1234567890987654",
                                            "minLength": 12,
                                            "maxLength": 19,
                                            "description": "Customer\u2019s credit card number."
                                        }
                                    }
                                },
                                "bankAccount": {
                                    "type": "object",
                                    "properties": {
                                        "number": {
                                            "type": "string",
                                            "example": "1234567890123456800",
                                            "minLength": 1,
                                            "maxLength": 19,
                                            "description": "Checking account number."
                                        },
                                        "routingNumber": {
                                            "type": "string",
                                            "example": "123456789",
                                            "minLength": 1,
                                            "maxLength": 9,
                                            "description": "Routing number."
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "authorizationOptions": {
                                            "type": "object",
                                            "properties": {
                                                "initiator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "merchantInitiatedTransaction": {
                                                            "type": "object",
                                                            "properties": {
                                                                "previousTransactionId": {
                                                                    "type": "string",
                                                                    "example": "123456789012345",
                                                                    "maxLength": 15,
                                                                    "description": "Previous Consumer Initiated Transaction Id."
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "metadata": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "creator": {
                                            "type": "string",
                                            "example": "merchantName",
                                            "description": "The creator of the token."
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                    }
                                },
                                "paymentInstruments": {
                                    "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789/paymentinstruments"
                                },
                                "id": "1234567890123456789",
                                "object": "instrumentIdentifier",
                                "state": "ACTIVE",
                                "card": {
                                    "number": "444444XXXXXX4444"
                                },
                                "processingInformation": {
                                    "authorizationOptions": {
                                        "initiator": {
                                            "merchantInitiatedTransaction": {
                                                "previousTransactionId": "123456789012345"
                                            }
                                        }
                                    }
                                },
                                "metadata": {
                                    "creator": "user"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "A new Instrument Identifier has been created.",
                        "headers": {
                            "Location": {
                                "description": "Link to the Instrument Identifier.",
                                "type": "string"
                            },
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1InstrumentIdentifiersPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "ancestor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "successor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1234567890123456800",
                                    "description": "Unique identification number assigned by CyberSource to the submitted request."
                                },
                                "object": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "instrumentIdentifier",
                                    "description": "Describes type of token.",
                                    "enum": [
                                        "instrumentIdentifier"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "ACTIVE",
                                    "description": "Current state of the token.",
                                    "enum": [
                                        "ACTIVE",
                                        "CLOSED"
                                    ]
                                },
                                "card": {
                                    "type": "object",
                                    "properties": {
                                        "number": {
                                            "type": "string",
                                            "example": "1234567890987654",
                                            "minLength": 12,
                                            "maxLength": 19,
                                            "description": "Customer\u2019s credit card number."
                                        }
                                    }
                                },
                                "bankAccount": {
                                    "type": "object",
                                    "properties": {
                                        "number": {
                                            "type": "string",
                                            "example": "1234567890123456800",
                                            "minLength": 1,
                                            "maxLength": 19,
                                            "description": "Checking account number."
                                        },
                                        "routingNumber": {
                                            "type": "string",
                                            "example": "123456789",
                                            "minLength": 1,
                                            "maxLength": 9,
                                            "description": "Routing number."
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "authorizationOptions": {
                                            "type": "object",
                                            "properties": {
                                                "initiator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "merchantInitiatedTransaction": {
                                                            "type": "object",
                                                            "properties": {
                                                                "previousTransactionId": {
                                                                    "type": "string",
                                                                    "example": "123456789012345",
                                                                    "maxLength": 15,
                                                                    "description": "Previous Consumer Initiated Transaction Id."
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "metadata": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "creator": {
                                            "type": "string",
                                            "example": "merchantName",
                                            "description": "The creator of the token."
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                    },
                                    "paymentInstruments": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789/paymentinstruments"
                                    }
                                },
                                "id": "1234567890123456789",
                                "object": "instrumentIdentifier",
                                "state": "ACTIVE",
                                "card": {
                                    "number": "444444XXXXXX4444"
                                },
                                "processingInformation": {
                                    "authorizationOptions": {
                                        "initiator": {
                                            "merchantInitiatedTransaction": {
                                                "previousTransactionId": "123456789012345"
                                            }
                                        }
                                    }
                                },
                                "metadata": {
                                    "creator": "user"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. A required header value could be missing.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1BadRequest400Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Missing Headers": {
                                "errors": [
                                    {
                                        "type": "missingHeaders",
                                        "message": "Missing header values."
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. The profile might not have permission to perform the token operation.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1Forbidden403Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "forbidden",
                                        "message": "Request not permitted."
                                    }
                                ]
                            }
                        }
                    },
                    "424": {
                        "description": "Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1FailedDependency424Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Profile not found"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "serverError",
                                        "message": "Internal server error"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "title": "tmsV1Error500Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Create Instrument Identifier (Card)",
                        "value": {
                            "card": {
                                "number": "411111111111112"
                            }
                        }
                    },
                    "example1": {
                        "summary": "Create Instrument Identifier (Bank Account)",
                        "value": {
                            "bankAccount": {
                                "number": "4100",
                                "routingNumber": "071923284"
                            }
                        }
                    },
                    "example2": {
                        "summary": "Create Instrument Identifier (Card & Enroll for Network Token)",
                        "value": {
                            "type": "enrollable card",
                            "card": {
                                "number": "4622943127013705",
                                "expirationMonth": "12",
                                "expirationYear": "2022",
                                "securityCode": "838"
                            },
                            "billTo": {
                                "address1": "8310 Capital of Texas Highway North",
                                "address2": "Bluffstone Drive",
                                "locality": "Austin",
                                "administrativeArea": "TX",
                                "postalCode": "78731",
                                "country": "US"
                            }
                        }
                    }
                }
            }
        },
        "/tms/v1/instrumentidentifiers/{tokenId}": {
            "get": {
                "summary": "Retrieve an Instrument Identifier",
                "parameters": [
                    {
                        "name": "profile-id",
                        "in": "header",
                        "description": "The id of a profile containing user specific TMS configuration.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "v-c-merchant-id",
                        "in": "header",
                        "description": "CyberSource merchant id.",
                        "required": true,
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 32
                    },
                    {
                        "name": "v-c-correlation-id",
                        "in": "header",
                        "description": "The mandatory correlation id passed by upstream (calling) system.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "Client-Application",
                        "in": "header",
                        "description": "Client application name",
                        "required": false,
                        "pattern": "^[a-zA-Z0-9\\\\-_]{3,30}|$",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    {
                        "name": "tokenId",
                        "in": "path",
                        "description": "The TokenId of an Instrument Identifier.",
                        "required": true,
                        "type": "string",
                        "minLength": 16,
                        "maxLength": 32
                    }
                ],
                "tags": [
                    "Instrument Identifier"
                ],
                "operationId": "getInstrumentIdentifier",
                "x-devcenter-metaData": {
                    "categoryTag": "Token_Management"
                },
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "An existing Instrument Identifier associated with the supplied `tokenId` has been returned.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally-unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1InstrumentIdentifiersGet200Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "ancestor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "successor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1234567890123456800",
                                    "description": "Unique identification number assigned by CyberSource to the submitted request."
                                },
                                "object": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "instrumentIdentifier",
                                    "description": "Describes type of token.",
                                    "enum": [
                                        "instrumentIdentifier"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "ACTIVE",
                                    "description": "Current state of the token.",
                                    "enum": [
                                        "ACTIVE",
                                        "CLOSED"
                                    ]
                                },
                                "card": {
                                    "type": "object",
                                    "properties": {
                                        "number": {
                                            "type": "string",
                                            "example": "1234567890987654",
                                            "minLength": 12,
                                            "maxLength": 19,
                                            "description": "Customer\u2019s credit card number."
                                        }
                                    }
                                },
                                "bankAccount": {
                                    "type": "object",
                                    "properties": {
                                        "number": {
                                            "type": "string",
                                            "example": "1234567890123456800",
                                            "minLength": 1,
                                            "maxLength": 19,
                                            "description": "Checking account number."
                                        },
                                        "routingNumber": {
                                            "type": "string",
                                            "example": "123456789",
                                            "minLength": 1,
                                            "maxLength": 9,
                                            "description": "Routing number."
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "authorizationOptions": {
                                            "type": "object",
                                            "properties": {
                                                "initiator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "merchantInitiatedTransaction": {
                                                            "type": "object",
                                                            "properties": {
                                                                "previousTransactionId": {
                                                                    "type": "string",
                                                                    "example": "123456789012345",
                                                                    "maxLength": 15,
                                                                    "description": "Previous Consumer Initiated Transaction Id."
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "metadata": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "creator": {
                                            "type": "string",
                                            "example": "merchantName",
                                            "description": "The creator of the token."
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                    },
                                    "paymentInstruments": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789/paymentinstruments"
                                    }
                                },
                                "id": "1234567890123456789",
                                "object": "instrumentIdentifier",
                                "state": "ACTIVE",
                                "card": {
                                    "number": "444444XXXXXX4444"
                                },
                                "processingInformation": {
                                    "authorizationOptions": {
                                        "initiator": {
                                            "merchantInitiatedTransaction": {
                                                "previousTransactionId": "123456789012345"
                                            }
                                        }
                                    }
                                },
                                "metadata": {
                                    "creator": "user"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. A required header value could be missing.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1BadRequest400Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Missing Headers": {
                                "errors": [
                                    {
                                        "type": "missingHeaders",
                                        "message": "Missing header values."
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. The profile might not have permission to perform the token operation.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1Forbidden403Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "forbidden",
                                        "message": "Request not permitted."
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Token Not Found. The `tokenid` may not exist or was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotFound404Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Token not found"
                                    }
                                ]
                            }
                        }
                    },
                    "410": {
                        "description": "Token Not Available. The token has been deleted.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotAvailable410Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notAvailable",
                                        "message": "Token not available."
                                    }
                                ]
                            }
                        }
                    },
                    "424": {
                        "description": "Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1FailedDependency424Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Profile not found"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "serverError",
                                        "message": "Internal server error"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "title": "tmsV1Error500Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a Instrument Identifier",
                "parameters": [
                    {
                        "name": "profile-id",
                        "in": "header",
                        "description": "The id of a profile containing user specific TMS configuration.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "v-c-merchant-id",
                        "in": "header",
                        "description": "CyberSource merchant id.",
                        "required": true,
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 32
                    },
                    {
                        "name": "v-c-correlation-id",
                        "in": "header",
                        "description": "The mandatory correlation id passed by upstream (calling) system.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "Client-Application",
                        "in": "header",
                        "description": "Client application name",
                        "required": false,
                        "pattern": "^[a-zA-Z0-9\\\\-_]{3,30}|$",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    {
                        "name": "tokenId",
                        "in": "path",
                        "description": "The TokenId of an Instrument Identifier.",
                        "required": true,
                        "type": "string",
                        "minLength": 16,
                        "maxLength": 32
                    },
                    {
                        "name": "updateInstrumentIdentifierRequest",
                        "in": "body",
                        "description": "Specify the previous transaction ID to update.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "authorizationOptions": {
                                            "type": "object",
                                            "properties": {
                                                "initiator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "merchantInitiatedTransaction": {
                                                            "type": "object",
                                                            "properties": {
                                                                "previousTransactionId": {
                                                                    "type": "string",
                                                                    "example": "123456789012345",
                                                                    "maxLength": 15,
                                                                    "description": "Previous Consumer Initiated Transaction Id."
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Instrument Identifier"
                ],
                "operationId": "updateInstrumentIdentifier",
                "x-devcenter-metaData": {
                    "categoryTag": "Token_Management"
                },
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "The updated Instrument Identifier has been returned.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1InstrumentIdentifiersPatch200Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "ancestor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "successor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1234567890123456800",
                                    "description": "Unique identification number assigned by CyberSource to the submitted request."
                                },
                                "object": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "instrumentIdentifier",
                                    "description": "Describes type of token.",
                                    "enum": [
                                        "instrumentIdentifier"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "ACTIVE",
                                    "description": "Current state of the token.",
                                    "enum": [
                                        "ACTIVE",
                                        "CLOSED"
                                    ]
                                },
                                "card": {
                                    "type": "object",
                                    "properties": {
                                        "number": {
                                            "type": "string",
                                            "example": "1234567890987654",
                                            "minLength": 12,
                                            "maxLength": 19,
                                            "description": "Customer\u2019s credit card number."
                                        }
                                    }
                                },
                                "bankAccount": {
                                    "type": "object",
                                    "properties": {
                                        "number": {
                                            "type": "string",
                                            "example": "1234567890123456800",
                                            "minLength": 1,
                                            "maxLength": 19,
                                            "description": "Checking account number."
                                        },
                                        "routingNumber": {
                                            "type": "string",
                                            "example": "123456789",
                                            "minLength": 1,
                                            "maxLength": 9,
                                            "description": "Routing number."
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "authorizationOptions": {
                                            "type": "object",
                                            "properties": {
                                                "initiator": {
                                                    "type": "object",
                                                    "properties": {
                                                        "merchantInitiatedTransaction": {
                                                            "type": "object",
                                                            "properties": {
                                                                "previousTransactionId": {
                                                                    "type": "string",
                                                                    "example": "123456789012345",
                                                                    "maxLength": 15,
                                                                    "description": "Previous Consumer Initiated Transaction Id."
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "metadata": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "creator": {
                                            "type": "string",
                                            "example": "merchantName",
                                            "description": "The creator of the token."
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/58FEBAEFD2EEFCE1E0539399D30A7500"
                                    }
                                },
                                "id": "58FEBAEFD2EEFCE1E0539399D30A7500",
                                "object": "instrumentIdentifier",
                                "state": "ACTIVE",
                                "card": {
                                    "number": "424242XXXXXX4242"
                                },
                                "processingInformation": {
                                    "authorizationOptions": {
                                        "initiator": {
                                            "merchantInitiatedTransaction": {
                                                "previousTransactionId": 123456789012345
                                            }
                                        }
                                    }
                                },
                                "metadata": {
                                    "creator": "user"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. A required header value could be missing.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1InstrumentIdentifiersPatch400Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Missing Headers": {
                                "errors": [
                                    {
                                        "type": "missingHeaders",
                                        "message": "Missing header values."
                                    }
                                ]
                            },
                            "Invalid Parameters": {
                                "errors": [
                                    {
                                        "type": "invalidParameters",
                                        "message": "Invalid parameter values.",
                                        "details": [
                                            {
                                                "name": "id"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "Unknown Field": {
                                "errors": [
                                    {
                                        "type": "unknownField",
                                        "message": "Unknown body values.",
                                        "details": [
                                            {
                                                "name": "id"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "Unsupported Fields": {
                                "errors": [
                                    {
                                        "type": "unsupportedFields",
                                        "message": "Unsupported body values for this action.",
                                        "details": [
                                            {
                                                "name": "bankAccount"
                                            },
                                            {
                                                "name": "card"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. The profile might not have permission to perform the token operation.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1Forbidden403Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "forbidden",
                                        "message": "Request not permitted."
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Token Not Found. The `tokenid` may not exist or was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotFound404Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Token not found"
                                    }
                                ]
                            }
                        }
                    },
                    "410": {
                        "description": "Token Not Available. The token has been deleted.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotAvailable410Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notAvailable",
                                        "message": "Token not available."
                                    }
                                ]
                            }
                        }
                    },
                    "424": {
                        "description": "Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1FailedDependency424Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Profile not found"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "serverError",
                                        "message": "Internal server error"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "title": "tmsV1Error500Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete an Instrument Identifier",
                "tags": [
                    "Instrument Identifier"
                ],
                "operationId": "deleteInstrumentIdentifier",
                "x-devcenter-metaData": {
                    "categoryTag": "Token_Management"
                },
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "profile-id",
                        "in": "header",
                        "description": "The id of a profile containing user specific TMS configuration.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "v-c-merchant-id",
                        "in": "header",
                        "description": "CyberSource merchant id.",
                        "required": true,
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 32
                    },
                    {
                        "name": "v-c-correlation-id",
                        "in": "header",
                        "description": "The mandatory correlation id passed by upstream (calling) system.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "Client-Application",
                        "in": "header",
                        "description": "Client application name",
                        "required": false,
                        "pattern": "^[a-zA-Z0-9\\\\-_]{3,30}|$",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    {
                        "name": "tokenId",
                        "in": "path",
                        "description": "The TokenId of an Instrument Identifier.",
                        "required": true,
                        "type": "string",
                        "minLength": 16,
                        "maxLength": 32
                    }
                ],
                "responses": {
                    "204": {
                        "description": "An existing Instrument Identifier associated with the supplied `tokenId` has been deleted.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. The profile might not have permission to perform the token operation.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1Forbidden403Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "forbidden",
                                        "message": "Request not permitted."
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Token Not Found. The `tokenid` may not exist or was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotFound404Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Token not found"
                                    }
                                ]
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict. The token is linked to a Payment Instrument.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1InstrumentIdentifiersDelete409Response",
                            "type": "array",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "paymentInstruments": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789/paymentinstruments"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "paymentInstruments": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/7010000000001621111/paymentinstruments"
                                    }
                                },
                                "errors": [
                                    {
                                        "type": "instrumentIdentifierDeletionError",
                                        "message": "Action cannot be performed. The Instrument Identifier is associated with one or more Payment Instruments."
                                    }
                                ]
                            }
                        }
                    },
                    "410": {
                        "description": "Token Not Available. The token has been deleted.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotAvailable410Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notAvailable",
                                        "message": "Token not available."
                                    }
                                ]
                            }
                        }
                    },
                    "424": {
                        "description": "Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1FailedDependency424Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Profile not found"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "serverError",
                                        "message": "Internal server error"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "title": "tmsV1Error500Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tms/v1/instrumentidentifiers/{tokenId}/paymentinstruments": {
            "get": {
                "summary": "Retrieve all Payment Instruments associated with an Instrument Identifier",
                "parameters": [
                    {
                        "name": "profile-id",
                        "in": "header",
                        "description": "The id of a profile containing user specific TMS configuration.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "v-c-merchant-id",
                        "in": "header",
                        "description": "CyberSource merchant id.",
                        "required": true,
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 32
                    },
                    {
                        "name": "v-c-correlation-id",
                        "in": "header",
                        "description": "The mandatory correlation id passed by upstream (calling) system.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "Client-Application",
                        "in": "header",
                        "description": "Client application name",
                        "required": false,
                        "pattern": "^[a-zA-Z0-9\\\\-_]{3,30}|$",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    {
                        "name": "tokenId",
                        "in": "path",
                        "description": "The TokenId of an Instrument Identifier.",
                        "required": true,
                        "type": "string",
                        "minLength": 16,
                        "maxLength": 32
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Starting Payment Instrument record in zero-based dataset that should be returned as the first object in the array. Default is 0.",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "default": 0,
                        "minimum": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of Payment Instruments that can be returned in the array starting from the offset record in zero-based dataset. Default is 20, maximum is 100.",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "minimum": 1,
                        "maximum": 100
                    }
                ],
                "tags": [
                    "Instrument Identifier"
                ],
                "operationId": "getAllPaymentInstruments",
                "x-devcenter-metaData": {
                    "categoryTag": "Token_Management"
                },
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "Returns an array of Payment Instruments associated with the supplied Instrument Identifier.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            },
                            "x-Total-Count": {
                                "description": "The total number of Payment Instruments associated with the Instrument Identifier in the zero-based dataset.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1InstrumentIdentifiersPaymentInstrumentsGet200Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "A link to the current requested collection.",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1/paymentinstruments?offset=20&limit=5\""
                                                }
                                            }
                                        },
                                        "first": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "A link to the collection starting at offset zero for the supplied limit.",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1/paymentinstruments?offset=0&limit=5"
                                                }
                                            }
                                        },
                                        "prev": {
                                            "type": "object",
                                            "description": "A link to the previous collection starting at the supplied offset minus the supplied limit.",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1/paymentinstruments?offset=15&limit=5"
                                                }
                                            }
                                        },
                                        "next": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "description": "A link to the next collection starting at the supplied offset plus the supplied limit.",
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1/paymentinstruments?offset=25&limit=5"
                                                }
                                            }
                                        },
                                        "last": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "description": "A link to the last collection containing the remaining objects.",
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1/paymentinstruments?offset=35&limit=5"
                                                }
                                            }
                                        }
                                    }
                                },
                                "object": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "collection",
                                    "description": "Shows the response is a collection of objects.",
                                    "enum": [
                                        "collection"
                                    ]
                                },
                                "offset": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "20",
                                    "description": "The offset parameter supplied in the request."
                                },
                                "limit": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1",
                                    "description": "The limit parameter supplied in the request."
                                },
                                "count": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1",
                                    "description": "The number of Payment Instruments returned in the array."
                                },
                                "total": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "39",
                                    "description": "The total number of Payment Instruments associated with the Instrument Identifier in the zero-based dataset."
                                },
                                "_embedded": {
                                    "description": "Array of Payment Instruments returned for the supplied Instrument Identifier.",
                                    "type": "array",
                                    "items": {
                                        "title": "tmsV1PaymentinstrumentsPatch200Response",
                                        "type": "object",
                                        "properties": {
                                            "_links": {
                                                "type": "object",
                                                "readOnly": true,
                                                "properties": {
                                                    "self": {
                                                        "type": "object",
                                                        "properties": {
                                                            "href": {
                                                                "type": "string",
                                                                "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                            }
                                                        }
                                                    },
                                                    "ancestor": {
                                                        "type": "object",
                                                        "properties": {
                                                            "href": {
                                                                "type": "string",
                                                                "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                            }
                                                        }
                                                    },
                                                    "successor": {
                                                        "type": "object",
                                                        "properties": {
                                                            "href": {
                                                                "type": "string",
                                                                "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "id": {
                                                "type": "string",
                                                "readOnly": true,
                                                "example": "1234567890123456800",
                                                "description": "Unique identification number assigned by CyberSource to the submitted request."
                                            },
                                            "object": {
                                                "type": "string",
                                                "readOnly": true,
                                                "example": "instrumentIdentifier",
                                                "description": "Describes type of token.",
                                                "enum": [
                                                    "paymentInstrument"
                                                ]
                                            },
                                            "state": {
                                                "type": "string",
                                                "readOnly": true,
                                                "example": "ACTIVE",
                                                "description": "Current state of the token.",
                                                "enum": [
                                                    "ACTIVE",
                                                    "CLOSED"
                                                ]
                                            },
                                            "bankAccount": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "checking",
                                                            "savings",
                                                            "corporate checking",
                                                            "general ledger"
                                                        ],
                                                        "example": "savings",
                                                        "description": "Checking account type. Possible values:\n  * C: checking\n  * S: savings (USD only)\n  * X: corporate checking (USD only)\n  * G: general ledger\n"
                                                    }
                                                }
                                            },
                                            "card": {
                                                "type": "object",
                                                "required": [
                                                    "type"
                                                ],
                                                "properties": {
                                                    "expirationMonth": {
                                                        "type": "string",
                                                        "format": "MM",
                                                        "example": "12",
                                                        "minLength": 2,
                                                        "maxLength": 2,
                                                        "description": "Two-digit month in which the credit card expires.\nFormat: `MM`\nPossible values: `01` through `12`\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. For more information about relaxed requirements, see the TMS REST API Developer Guide.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                                    },
                                                    "expirationYear": {
                                                        "type": "string",
                                                        "format": "YYYY",
                                                        "example": "2022",
                                                        "minLength": 4,
                                                        "maxLength": 4,
                                                        "description": "Four-digit year in which the credit card expires.\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n\n**FDC Nashville Global and FDMS South**\nYou can send in 2 digits or 4 digits. When you send in 2 digits, they must be the last 2 digits of the year.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See Relaxed Requirements for Address Data and Expiration Date page.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.'\n"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "visa",
                                                            "mastercard",
                                                            "american express",
                                                            "discover",
                                                            "diners club",
                                                            "carte blanche",
                                                            "jcb",
                                                            "optima",
                                                            "twinpay credit",
                                                            "twinpay debit",
                                                            "walmart",
                                                            "enroute",
                                                            "lowes consumer",
                                                            "home depot consumer",
                                                            "mbna",
                                                            "dicks sportswear",
                                                            "casual corner",
                                                            "sears",
                                                            "jal",
                                                            "disney",
                                                            "maestro uk domestic",
                                                            "sams club consumer",
                                                            "sams club business",
                                                            "nicos",
                                                            "bill me later",
                                                            "bebe",
                                                            "restoration hardware",
                                                            "delta online",
                                                            "solo",
                                                            "visa electron",
                                                            "dankort",
                                                            "laser",
                                                            "carte bleue",
                                                            "carta si",
                                                            "pinless debit",
                                                            "encoded account",
                                                            "uatp",
                                                            "household",
                                                            "maestro international",
                                                            "ge money uk",
                                                            "korean cards",
                                                            "style",
                                                            "jcrew",
                                                            "payease china processing ewallet",
                                                            "payease china processing bank transfer",
                                                            "meijer private label",
                                                            "hipercard",
                                                            "aura",
                                                            "redecard",
                                                            "orico",
                                                            "elo",
                                                            "capital one private label",
                                                            "synchrony private label",
                                                            "china union pay",
                                                            "costco private label",
                                                            "mada",
                                                            "falabella private label"
                                                        ],
                                                        "description": "Type of credit card. Possible values:\n  * Visa (001)\n  * Mastercard (002) - Eurocard\u2014European regional brand of Mastercard\n  * American Express (003)\n  * Discover (004)\n  * Diners Club (005)\n  * Carte Blanche (006)\n  * JCB (007)\n  * Optima (008)\n  * Twinpay Credit (011)\n  * Twinpay Debit (012)\n  * Walmart (013)\n  * EnRoute (014)\n  * Lowes consumer (015)\n  * Home Depot consumer (016)\n  * MBNA (017)\n  * Dicks Sportswear (018)\n  * Casual Corner (019)\n  * Sears (020)\n  * JAL (021)\n  * Disney (023)\n  * Maestro (024) - UK Domestic\n  * Sams Club consumer (025)\n  * Sams Club business (026)\n  * Nicos (027)\n  * Bill me later (028)\n  * Bebe (029)\n  * Restoration Hardware (030)\n  * Delta (031) \u2014 use this value only for Ingenico ePayments. For other processors, use 001 for all Visa card types.\n  * Solo (032)\n  * Visa Electron (033)\n  * Dankort (034)\n  * Laser (035)\n  * Carte Bleue (036) \u2014 formerly Cartes Bancaires\n  * Cartes Bancaires (036)\n  * Carta Si (037)\n  * pinless debit (038)\n  * encoded account (039)\n  * UATP (040)\n  * Household (041)\n  * Maestro (042) - International\n  * GE Money UK (043)\n  * Korean cards (044)\n  * Style (045)\n  * JCrew (046)\n  * PayEase China processing eWallet (047)\n  * PayEase China processing bank transfer (048)\n  * Meijer Private Label (049)\n  * Hipercard (050) \u2014 supported only by the Comercio Latino processor.\n  * Aura (051) \u2014 supported only by the Comercio Latino processor.\n  * Redecard (052)\n  * ORICO (053)\n  * Elo (054) \u2014 supported only by the Comercio Latino processor.\n  * Capital One Private Label (055)\n  * Synchrony Private Label (056)\n  * Costco Private Label (057)\n  * mada (060)\n  * China Union Pay (062)\n  * Falabella private label (063)\n"
                                                    },
                                                    "issueNumber": {
                                                        "type": "string",
                                                        "example": "01",
                                                        "minLength": 1,
                                                        "maxLength": 2,
                                                        "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder."
                                                    },
                                                    "startMonth": {
                                                        "type": "string",
                                                        "format": "MM",
                                                        "example": "12",
                                                        "minLength": 2,
                                                        "maxLength": 2,
                                                        "description": "Month of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `MM`.\nPossible values: `01` through `12`.\n"
                                                    },
                                                    "startYear": {
                                                        "type": "string",
                                                        "format": "YYYY",
                                                        "example": "2022",
                                                        "minLength": 4,
                                                        "maxLength": 4,
                                                        "description": "Year of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n"
                                                    },
                                                    "useAs": {
                                                        "type": "string",
                                                        "example": "pinless debit",
                                                        "description": "Card Use As Field. Supported value of `pinless debit` only. Only for use with Pinless Debit tokens."
                                                    }
                                                }
                                            },
                                            "buyerInformation": {
                                                "type": "object",
                                                "properties": {
                                                    "companyTaxID": {
                                                        "type": "string",
                                                        "example": "1234567890123456800",
                                                        "maxLength": 9,
                                                        "description": "Tax identifier for the customer\u2019s company.\n\n**Important**:\nContact your TeleCheck representative to find out whether this field is required or optional.\n"
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "example": "USD",
                                                        "minLength": 3,
                                                        "maxLength": 3,
                                                        "description": "Currency used by the customer. Accepts input in the ISO 4217 standard, stores as ISO 4217 Alpha."
                                                    },
                                                    "dateOBirth": {
                                                        "type": "string",
                                                        "format": "YYYY-MM-DD|YYYYMMDD",
                                                        "example": "1960-12-30",
                                                        "minLength": 8,
                                                        "maxLength": 10,
                                                        "description": "Date of birth of the customer.\n\nFormat: `YYYY-MM-DD` or `YYYYMMDD`\n"
                                                    },
                                                    "personalIdentification": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string",
                                                                    "example": "1234567890",
                                                                    "description": "Customer's identification number.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "driver license"
                                                                    ],
                                                                    "example": "driver license",
                                                                    "description": "Type of personal identification.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                                },
                                                                "issuedBy": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "administrativeArea": {
                                                                            "type": "string",
                                                                            "example": "CA",
                                                                            "description": "State or province in which the customer\u2019s driver\u2019s license was issued. Use the State, Province, and Territory Codes for the United States and Canada.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "billTo": {
                                                "type": "object",
                                                "properties": {
                                                    "firstName": {
                                                        "type": "string",
                                                        "example": "John",
                                                        "maxLength": 60,
                                                        "description": "Customer\u2019s first name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                                    },
                                                    "lastName": {
                                                        "type": "string",
                                                        "example": "Smith",
                                                        "maxLength": 60,
                                                        "description": "Customer\u2019s last name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                                    },
                                                    "company": {
                                                        "type": "string",
                                                        "example": "CyberSource",
                                                        "maxLength": 60,
                                                        "description": "Name of the customer\u2019s company.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                                    },
                                                    "address1": {
                                                        "type": "string",
                                                        "example": "12 Main Street",
                                                        "maxLength": 60,
                                                        "description": "First line of the billing street address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                                    },
                                                    "address2": {
                                                        "type": "string",
                                                        "example": "20 My Street",
                                                        "maxLength": 60,
                                                        "description": "Additional address information."
                                                    },
                                                    "locality": {
                                                        "type": "string",
                                                        "example": "Foster City",
                                                        "maxLength": 50,
                                                        "description": "City of the billing address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                                    },
                                                    "administrativeArea": {
                                                        "type": "string",
                                                        "example": "CA",
                                                        "maxLength": 20,
                                                        "description": "State or province of the billing address. For an address in the U.S. or Canada, use the State, Province, and Territory Codes for the United States and Canada.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                                    },
                                                    "postalCode": {
                                                        "type": "string",
                                                        "example": "90200",
                                                        "maxLength": 10,
                                                        "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n**Example** 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space]\n[numeric][alpha][numeric]\nExample A1B 2C3\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "US",
                                                        "minLength": 2,
                                                        "maxLength": 3,
                                                        "description": "Country of the billing address. Accepts input in the ISO 3166-1 standard, stores as ISO 3166-1-Alpha-2.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john.smith@example.com",
                                                        "maxLength": 320,
                                                        "description": "Customer\u2019s email address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                                    },
                                                    "phoneNumber": {
                                                        "type": "string",
                                                        "example": "555123456",
                                                        "minLength": 6,
                                                        "maxLength": 32,
                                                        "description": "Customer phone number. When you create a customer profile, the requirements depend on the payment method:\n  * Credit cards \u2014 optional.\n  * Electronic checks \u2014 contact your payment processor representative to find out if this field is required or optional.\n  * PINless debits \u2014 optional.\n"
                                                    }
                                                }
                                            },
                                            "processingInformation": {
                                                "type": "object",
                                                "properties": {
                                                    "billPaymentProgramEnabled": {
                                                        "type": "boolean",
                                                        "example": true,
                                                        "default": false,
                                                        "description": "Indicates that the payments for this customer profile are for the Bill Payment program. Possible values:\n  * false: Not a Visa Bill Payment.\n  * true: Visa Bill Payment.\n"
                                                    },
                                                    "bankTransferOptions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "SECCode": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "CCD",
                                                                    "PPD",
                                                                    "TEL",
                                                                    "WEB"
                                                                ],
                                                                "example": "WEB",
                                                                "description": "**Important** This field is required if your processor is TeleCheck.\n\nCode that specifies the authorization method for the transaction. Possible values:\n\n- **CCD**: corporate cash disbursement. Charge or credit against a business checking account. You can use one-time or recurring CCD transactions to transfer funds to or from a corporate entity. A standing authorization is required for recurring transactions.\n- **PPD**: prearranged payment and deposit entry. Charge or credit against a personal checking or savings account. You can originate a PPD entry only when the payment and deposit terms between you and the customer are prearranged. A written authorization from the customer is required for one-time transactions and a written standing authorization is required for recurring transactions.\n- **TEL**: telephone-initiated entry. One-time charge against a personal checking or savings account. You can originate a TEL entry only when there is a business relationship between you and the customer or when the customer initiates a telephone call to you. For a TEL entry, you must obtain a payment authorization from the customer over the telephone. There is no recurring billing option for TEL.\n- **WEB**: internet-initiated entry\u2014charge against a personal checking or savings account. You can originate a one-time or recurring WEB entry when the customer initiates the transaction over the Internet. For a WEB entry, you must obtain payment authorization from the customer over the Internet.\n"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "merchantInformation": {
                                                "type": "object",
                                                "properties": {
                                                    "merchantDescriptor": {
                                                        "type": "object",
                                                        "properties": {
                                                            "alternateName": {
                                                                "type": "string",
                                                                "example": "Branch Name",
                                                                "description": "Alternate information for your business. This API field overrides the company entry description value in your CyberSource account."
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "metaData": {
                                                "type": "object",
                                                "readOnly": true,
                                                "properties": {
                                                    "creator": {
                                                        "type": "string",
                                                        "example": "merchantName",
                                                        "description": "The creator of the token."
                                                    }
                                                }
                                            },
                                            "instrumentIdentifier": {
                                                "type": "object",
                                                "properties": {
                                                    "_links": {
                                                        "type": "object",
                                                        "readOnly": true,
                                                        "properties": {
                                                            "self": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "href": {
                                                                        "type": "string",
                                                                        "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                                    }
                                                                }
                                                            },
                                                            "ancestor": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "href": {
                                                                        "type": "string",
                                                                        "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                                    }
                                                                }
                                                            },
                                                            "successor": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "href": {
                                                                        "type": "string",
                                                                        "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "object": {
                                                        "type": "string",
                                                        "readOnly": true,
                                                        "example": "instrumentIdentifier",
                                                        "description": "Describes type of token.",
                                                        "enum": [
                                                            "instrumentIdentifier"
                                                        ]
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "readOnly": true,
                                                        "example": "ACTIVE",
                                                        "description": "Current state of the token.",
                                                        "enum": [
                                                            "ACTIVE",
                                                            "CLOSED"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1234567890123456789",
                                                        "minLength": 16,
                                                        "maxLength": 32,
                                                        "description": "The ID of the existing instrument identifier to be linked to the newly created payment instrument."
                                                    },
                                                    "card": {
                                                        "type": "object",
                                                        "properties": {
                                                            "number": {
                                                                "type": "string",
                                                                "example": "1234567890987654",
                                                                "minLength": 12,
                                                                "maxLength": 19,
                                                                "description": "Customer\u2019s credit card number."
                                                            }
                                                        }
                                                    },
                                                    "bankAccount": {
                                                        "type": "object",
                                                        "properties": {
                                                            "number": {
                                                                "type": "string",
                                                                "example": "1234567890123456800",
                                                                "minLength": 1,
                                                                "maxLength": 19,
                                                                "description": "Checking account number."
                                                            },
                                                            "routingNumber": {
                                                                "type": "string",
                                                                "example": "123456789",
                                                                "minLength": 1,
                                                                "maxLength": 9,
                                                                "description": "Routing number."
                                                            }
                                                        }
                                                    },
                                                    "processingInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "authorizationOptions": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "initiator": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "merchantInitiatedTransaction": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "previousTransactionId": {
                                                                                        "type": "string",
                                                                                        "example": "123456789012345",
                                                                                        "maxLength": 15,
                                                                                        "description": "Previous Consumer Initiated Transaction Id."
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "metadata": {
                                                        "type": "object",
                                                        "readOnly": true,
                                                        "properties": {
                                                            "creator": {
                                                                "type": "string",
                                                                "example": "merchantName",
                                                                "description": "The creator of the token."
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1/paymentinstruments?offset=20&limit=1"
                                    },
                                    "first": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1/paymentinstruments?offset=0&limit=1"
                                    },
                                    "prev": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1/paymentinstruments?offset=19&limit=1"
                                    },
                                    "next": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1/paymentinstruments?offset=21&limit=1\""
                                    },
                                    "last": {
                                        "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1/paymentinstruments?offset=38&limit=1"
                                    }
                                },
                                "object": "collection",
                                "offset": 20,
                                "limit": 1,
                                "count": 1,
                                "total": 39,
                                "_embedded": {
                                    "paymentInstruments": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "https://api.cybersource.com/tms/v1/paymentinstruments/6036673B73B12F19E0539399D30A2566"
                                                }
                                            },
                                            "id": "6036673B73B12F19E0539399D30A2566",
                                            "object": "paymentInstrument",
                                            "state": "ACTIVE",
                                            "card": {
                                                "expirationMonth": "09",
                                                "expirationYear": "2027",
                                                "type": "visa",
                                                "issueNumber": "01",
                                                "startMonth": "01",
                                                "startYear": "2017"
                                            },
                                            "buyerInformation": {
                                                "companyTaxId": "12345",
                                                "currency": "USD"
                                            },
                                            "billTo": {
                                                "firstName": "John",
                                                "lastName": "Smith",
                                                "company": "CyberSource",
                                                "address1": "1 My Apartment",
                                                "address2": "Main Street",
                                                "locality": "San Francisco",
                                                "administrativeArea": "CA",
                                                "postalCode": "90211",
                                                "country": "US",
                                                "email": "john.smith@test.com",
                                                "phoneNumber": "+44 2890447777"
                                            },
                                            "processingInformation": {
                                                "billPaymentProgramEnabled": true
                                            },
                                            "metadata": {
                                                "creator": "user"
                                            },
                                            "_embedded": {
                                                "instrumentIdentifier": {
                                                    "_links": {
                                                        "self": {
                                                            "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/5B32CE6167B09343E05333B9D30A53E1"
                                                        }
                                                    },
                                                    "id": "5B32CE6167B09343E05333B9D30A53E1",
                                                    "object": "instrumentIdentifier",
                                                    "state": "ACTIVE",
                                                    "card": {
                                                        "number": "424242XXXXXX1237"
                                                    },
                                                    "processingInformation": {
                                                        "authorizationOptions": {
                                                            "initiator": {
                                                                "merchantInitiatedTransaction": {
                                                                    "previousTransactionId": "123456789012345"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "metadata": {
                                                        "creator": "user"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. A required header value could be missing.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1BadRequest400Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Missing Headers": {
                                "errors": [
                                    {
                                        "type": "missingHeaders",
                                        "message": "Missing header values."
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. The profile might not have permission to perform the token operation.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1Forbidden403Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "forbidden",
                                        "message": "Request not permitted."
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Token Not Found. The `tokenid` may not exist or was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotFound404Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Token not found"
                                    }
                                ]
                            }
                        }
                    },
                    "410": {
                        "description": "Token Not Available. The token has been deleted.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotAvailable410Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notAvailable",
                                        "message": "Token not available."
                                    }
                                ]
                            }
                        }
                    },
                    "424": {
                        "description": "Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1FailedDependency424Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Profile not found"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "serverError",
                                        "message": "Internal server error"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "title": "tmsV1Error500Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tms/v1/paymentinstruments": {
            "post": {
                "summary": "Create a Payment Instrument",
                "parameters": [
                    {
                        "name": "profile-id",
                        "in": "header",
                        "description": "The id of a profile containing user specific TMS configuration.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "v-c-merchant-id",
                        "in": "header",
                        "description": "CyberSource merchant id.",
                        "required": true,
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 32
                    },
                    {
                        "name": "v-c-correlation-id",
                        "in": "header",
                        "description": "The mandatory correlation id passed by upstream (calling) system.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "Client-Application",
                        "in": "header",
                        "description": "Client application name",
                        "required": false,
                        "pattern": "^[a-zA-Z0-9\\\\-_]{3,30}|$",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    {
                        "name": "createPaymentInstrumentRequest",
                        "in": "body",
                        "description": "Specify the customer's payment details for card or bank account.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "ancestor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "successor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1234567890123456800",
                                    "description": "Unique identification number assigned by CyberSource to the submitted request."
                                },
                                "object": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "instrumentIdentifier",
                                    "description": "Describes type of token.",
                                    "enum": [
                                        "paymentInstrument"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "ACTIVE",
                                    "description": "Current state of the token.",
                                    "enum": [
                                        "ACTIVE",
                                        "CLOSED"
                                    ]
                                },
                                "bankAccount": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "checking",
                                                "savings",
                                                "corporate checking",
                                                "general ledger"
                                            ],
                                            "example": "savings",
                                            "description": "Checking account type. Possible values:\n  * C: checking\n  * S: savings (USD only)\n  * X: corporate checking (USD only)\n  * G: general ledger\n"
                                        }
                                    }
                                },
                                "card": {
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "expirationMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Two-digit month in which the credit card expires.\nFormat: `MM`\nPossible values: `01` through `12`\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. For more information about relaxed requirements, see the TMS REST API Developer Guide.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "expirationYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Four-digit year in which the credit card expires.\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n\n**FDC Nashville Global and FDMS South**\nYou can send in 2 digits or 4 digits. When you send in 2 digits, they must be the last 2 digits of the year.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See Relaxed Requirements for Address Data and Expiration Date page.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.'\n"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "visa",
                                                "mastercard",
                                                "american express",
                                                "discover",
                                                "diners club",
                                                "carte blanche",
                                                "jcb",
                                                "optima",
                                                "twinpay credit",
                                                "twinpay debit",
                                                "walmart",
                                                "enroute",
                                                "lowes consumer",
                                                "home depot consumer",
                                                "mbna",
                                                "dicks sportswear",
                                                "casual corner",
                                                "sears",
                                                "jal",
                                                "disney",
                                                "maestro uk domestic",
                                                "sams club consumer",
                                                "sams club business",
                                                "nicos",
                                                "bill me later",
                                                "bebe",
                                                "restoration hardware",
                                                "delta online",
                                                "solo",
                                                "visa electron",
                                                "dankort",
                                                "laser",
                                                "carte bleue",
                                                "carta si",
                                                "pinless debit",
                                                "encoded account",
                                                "uatp",
                                                "household",
                                                "maestro international",
                                                "ge money uk",
                                                "korean cards",
                                                "style",
                                                "jcrew",
                                                "payease china processing ewallet",
                                                "payease china processing bank transfer",
                                                "meijer private label",
                                                "hipercard",
                                                "aura",
                                                "redecard",
                                                "orico",
                                                "elo",
                                                "capital one private label",
                                                "synchrony private label",
                                                "china union pay",
                                                "costco private label",
                                                "mada",
                                                "falabella private label"
                                            ],
                                            "description": "Type of credit card. Possible values:\n  * Visa (001)\n  * Mastercard (002) - Eurocard\u2014European regional brand of Mastercard\n  * American Express (003)\n  * Discover (004)\n  * Diners Club (005)\n  * Carte Blanche (006)\n  * JCB (007)\n  * Optima (008)\n  * Twinpay Credit (011)\n  * Twinpay Debit (012)\n  * Walmart (013)\n  * EnRoute (014)\n  * Lowes consumer (015)\n  * Home Depot consumer (016)\n  * MBNA (017)\n  * Dicks Sportswear (018)\n  * Casual Corner (019)\n  * Sears (020)\n  * JAL (021)\n  * Disney (023)\n  * Maestro (024) - UK Domestic\n  * Sams Club consumer (025)\n  * Sams Club business (026)\n  * Nicos (027)\n  * Bill me later (028)\n  * Bebe (029)\n  * Restoration Hardware (030)\n  * Delta (031) \u2014 use this value only for Ingenico ePayments. For other processors, use 001 for all Visa card types.\n  * Solo (032)\n  * Visa Electron (033)\n  * Dankort (034)\n  * Laser (035)\n  * Carte Bleue (036) \u2014 formerly Cartes Bancaires\n  * Cartes Bancaires (036)\n  * Carta Si (037)\n  * pinless debit (038)\n  * encoded account (039)\n  * UATP (040)\n  * Household (041)\n  * Maestro (042) - International\n  * GE Money UK (043)\n  * Korean cards (044)\n  * Style (045)\n  * JCrew (046)\n  * PayEase China processing eWallet (047)\n  * PayEase China processing bank transfer (048)\n  * Meijer Private Label (049)\n  * Hipercard (050) \u2014 supported only by the Comercio Latino processor.\n  * Aura (051) \u2014 supported only by the Comercio Latino processor.\n  * Redecard (052)\n  * ORICO (053)\n  * Elo (054) \u2014 supported only by the Comercio Latino processor.\n  * Capital One Private Label (055)\n  * Synchrony Private Label (056)\n  * Costco Private Label (057)\n  * mada (060)\n  * China Union Pay (062)\n  * Falabella private label (063)\n"
                                        },
                                        "issueNumber": {
                                            "type": "string",
                                            "example": "01",
                                            "minLength": 1,
                                            "maxLength": 2,
                                            "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder."
                                        },
                                        "startMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Month of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `MM`.\nPossible values: `01` through `12`.\n"
                                        },
                                        "startYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Year of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n"
                                        },
                                        "useAs": {
                                            "type": "string",
                                            "example": "pinless debit",
                                            "description": "Card Use As Field. Supported value of `pinless debit` only. Only for use with Pinless Debit tokens."
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "companyTaxID": {
                                            "type": "string",
                                            "example": "1234567890123456800",
                                            "maxLength": 9,
                                            "description": "Tax identifier for the customer\u2019s company.\n\n**Important**:\nContact your TeleCheck representative to find out whether this field is required or optional.\n"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "example": "USD",
                                            "minLength": 3,
                                            "maxLength": 3,
                                            "description": "Currency used by the customer. Accepts input in the ISO 4217 standard, stores as ISO 4217 Alpha."
                                        },
                                        "dateOBirth": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD|YYYYMMDD",
                                            "example": "1960-12-30",
                                            "minLength": 8,
                                            "maxLength": 10,
                                            "description": "Date of birth of the customer.\n\nFormat: `YYYY-MM-DD` or `YYYYMMDD`\n"
                                        },
                                        "personalIdentification": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1234567890",
                                                        "description": "Customer's identification number.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "driver license"
                                                        ],
                                                        "example": "driver license",
                                                        "description": "Type of personal identification.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                    },
                                                    "issuedBy": {
                                                        "type": "object",
                                                        "properties": {
                                                            "administrativeArea": {
                                                                "type": "string",
                                                                "example": "CA",
                                                                "description": "State or province in which the customer\u2019s driver\u2019s license was issued. Use the State, Province, and Territory Codes for the United States and Canada.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "billTo": {
                                    "type": "object",
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "example": "John",
                                            "maxLength": 60,
                                            "description": "Customer\u2019s first name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "Smith",
                                            "maxLength": 60,
                                            "description": "Customer\u2019s last name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "company": {
                                            "type": "string",
                                            "example": "CyberSource",
                                            "maxLength": 60,
                                            "description": "Name of the customer\u2019s company.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "address1": {
                                            "type": "string",
                                            "example": "12 Main Street",
                                            "maxLength": 60,
                                            "description": "First line of the billing street address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "address2": {
                                            "type": "string",
                                            "example": "20 My Street",
                                            "maxLength": 60,
                                            "description": "Additional address information."
                                        },
                                        "locality": {
                                            "type": "string",
                                            "example": "Foster City",
                                            "maxLength": 50,
                                            "description": "City of the billing address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "administrativeArea": {
                                            "type": "string",
                                            "example": "CA",
                                            "maxLength": 20,
                                            "description": "State or province of the billing address. For an address in the U.S. or Canada, use the State, Province, and Territory Codes for the United States and Canada.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "postalCode": {
                                            "type": "string",
                                            "example": "90200",
                                            "maxLength": 10,
                                            "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n**Example** 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space]\n[numeric][alpha][numeric]\nExample A1B 2C3\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "US",
                                            "minLength": 2,
                                            "maxLength": 3,
                                            "description": "Country of the billing address. Accepts input in the ISO 3166-1 standard, stores as ISO 3166-1-Alpha-2.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john.smith@example.com",
                                            "maxLength": 320,
                                            "description": "Customer\u2019s email address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "example": "555123456",
                                            "minLength": 6,
                                            "maxLength": 32,
                                            "description": "Customer phone number. When you create a customer profile, the requirements depend on the payment method:\n  * Credit cards \u2014 optional.\n  * Electronic checks \u2014 contact your payment processor representative to find out if this field is required or optional.\n  * PINless debits \u2014 optional.\n"
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "billPaymentProgramEnabled": {
                                            "type": "boolean",
                                            "example": true,
                                            "default": false,
                                            "description": "Indicates that the payments for this customer profile are for the Bill Payment program. Possible values:\n  * false: Not a Visa Bill Payment.\n  * true: Visa Bill Payment.\n"
                                        },
                                        "bankTransferOptions": {
                                            "type": "object",
                                            "properties": {
                                                "SECCode": {
                                                    "type": "string",
                                                    "enum": [
                                                        "CCD",
                                                        "PPD",
                                                        "TEL",
                                                        "WEB"
                                                    ],
                                                    "example": "WEB",
                                                    "description": "**Important** This field is required if your processor is TeleCheck.\n\nCode that specifies the authorization method for the transaction. Possible values:\n\n- **CCD**: corporate cash disbursement. Charge or credit against a business checking account. You can use one-time or recurring CCD transactions to transfer funds to or from a corporate entity. A standing authorization is required for recurring transactions.\n- **PPD**: prearranged payment and deposit entry. Charge or credit against a personal checking or savings account. You can originate a PPD entry only when the payment and deposit terms between you and the customer are prearranged. A written authorization from the customer is required for one-time transactions and a written standing authorization is required for recurring transactions.\n- **TEL**: telephone-initiated entry. One-time charge against a personal checking or savings account. You can originate a TEL entry only when there is a business relationship between you and the customer or when the customer initiates a telephone call to you. For a TEL entry, you must obtain a payment authorization from the customer over the telephone. There is no recurring billing option for TEL.\n- **WEB**: internet-initiated entry\u2014charge against a personal checking or savings account. You can originate a one-time or recurring WEB entry when the customer initiates the transaction over the Internet. For a WEB entry, you must obtain payment authorization from the customer over the Internet.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "alternateName": {
                                                    "type": "string",
                                                    "example": "Branch Name",
                                                    "description": "Alternate information for your business. This API field overrides the company entry description value in your CyberSource account."
                                                }
                                            }
                                        }
                                    }
                                },
                                "metaData": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "creator": {
                                            "type": "string",
                                            "example": "merchantName",
                                            "description": "The creator of the token."
                                        }
                                    }
                                },
                                "instrumentIdentifier": {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                },
                                                "ancestor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                },
                                                "successor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "object": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "instrumentIdentifier",
                                            "description": "Describes type of token.",
                                            "enum": [
                                                "instrumentIdentifier"
                                            ]
                                        },
                                        "state": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "ACTIVE",
                                            "description": "Current state of the token.",
                                            "enum": [
                                                "ACTIVE",
                                                "CLOSED"
                                            ]
                                        },
                                        "id": {
                                            "type": "string",
                                            "example": "1234567890123456789",
                                            "minLength": 16,
                                            "maxLength": 32,
                                            "description": "The ID of the existing instrument identifier to be linked to the newly created payment instrument."
                                        },
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "1234567890987654",
                                                    "minLength": 12,
                                                    "maxLength": 19,
                                                    "description": "Customer\u2019s credit card number."
                                                }
                                            }
                                        },
                                        "bankAccount": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "1234567890123456800",
                                                    "minLength": 1,
                                                    "maxLength": 19,
                                                    "description": "Checking account number."
                                                },
                                                "routingNumber": {
                                                    "type": "string",
                                                    "example": "123456789",
                                                    "minLength": 1,
                                                    "maxLength": 9,
                                                    "description": "Routing number."
                                                }
                                            }
                                        },
                                        "processingInformation": {
                                            "type": "object",
                                            "properties": {
                                                "authorizationOptions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "initiator": {
                                                            "type": "object",
                                                            "properties": {
                                                                "merchantInitiatedTransaction": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "previousTransactionId": {
                                                                            "type": "string",
                                                                            "example": "123456789012345",
                                                                            "maxLength": 15,
                                                                            "description": "Previous Consumer Initiated Transaction Id."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                                "creator": {
                                                    "type": "string",
                                                    "example": "merchantName",
                                                    "description": "The creator of the token."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Payment Instrument"
                ],
                "operationId": "createPaymentInstrument",
                "x-devcenter-metaData": {
                    "categoryTag": "Token_Management"
                },
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "201": {
                        "description": "A new Payment Instrument has been created.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1PaymentInstrumentsPost201Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "ancestor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "successor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1234567890123456800",
                                    "description": "Unique identification number assigned by CyberSource to the submitted request."
                                },
                                "object": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "instrumentIdentifier",
                                    "description": "Describes type of token.",
                                    "enum": [
                                        "paymentInstrument"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "ACTIVE",
                                    "description": "Current state of the token.",
                                    "enum": [
                                        "ACTIVE",
                                        "CLOSED"
                                    ]
                                },
                                "bankAccount": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "checking",
                                                "savings",
                                                "corporate checking",
                                                "general ledger"
                                            ],
                                            "example": "savings",
                                            "description": "Checking account type. Possible values:\n  * C: checking\n  * S: savings (USD only)\n  * X: corporate checking (USD only)\n  * G: general ledger\n"
                                        }
                                    }
                                },
                                "card": {
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "expirationMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Two-digit month in which the credit card expires.\nFormat: `MM`\nPossible values: `01` through `12`\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. For more information about relaxed requirements, see the TMS REST API Developer Guide.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "expirationYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Four-digit year in which the credit card expires.\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n\n**FDC Nashville Global and FDMS South**\nYou can send in 2 digits or 4 digits. When you send in 2 digits, they must be the last 2 digits of the year.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See Relaxed Requirements for Address Data and Expiration Date page.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.'\n"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "visa",
                                                "mastercard",
                                                "american express",
                                                "discover",
                                                "diners club",
                                                "carte blanche",
                                                "jcb",
                                                "optima",
                                                "twinpay credit",
                                                "twinpay debit",
                                                "walmart",
                                                "enroute",
                                                "lowes consumer",
                                                "home depot consumer",
                                                "mbna",
                                                "dicks sportswear",
                                                "casual corner",
                                                "sears",
                                                "jal",
                                                "disney",
                                                "maestro uk domestic",
                                                "sams club consumer",
                                                "sams club business",
                                                "nicos",
                                                "bill me later",
                                                "bebe",
                                                "restoration hardware",
                                                "delta online",
                                                "solo",
                                                "visa electron",
                                                "dankort",
                                                "laser",
                                                "carte bleue",
                                                "carta si",
                                                "pinless debit",
                                                "encoded account",
                                                "uatp",
                                                "household",
                                                "maestro international",
                                                "ge money uk",
                                                "korean cards",
                                                "style",
                                                "jcrew",
                                                "payease china processing ewallet",
                                                "payease china processing bank transfer",
                                                "meijer private label",
                                                "hipercard",
                                                "aura",
                                                "redecard",
                                                "orico",
                                                "elo",
                                                "capital one private label",
                                                "synchrony private label",
                                                "china union pay",
                                                "costco private label",
                                                "mada",
                                                "falabella private label"
                                            ],
                                            "description": "Type of credit card. Possible values:\n  * Visa (001)\n  * Mastercard (002) - Eurocard\u2014European regional brand of Mastercard\n  * American Express (003)\n  * Discover (004)\n  * Diners Club (005)\n  * Carte Blanche (006)\n  * JCB (007)\n  * Optima (008)\n  * Twinpay Credit (011)\n  * Twinpay Debit (012)\n  * Walmart (013)\n  * EnRoute (014)\n  * Lowes consumer (015)\n  * Home Depot consumer (016)\n  * MBNA (017)\n  * Dicks Sportswear (018)\n  * Casual Corner (019)\n  * Sears (020)\n  * JAL (021)\n  * Disney (023)\n  * Maestro (024) - UK Domestic\n  * Sams Club consumer (025)\n  * Sams Club business (026)\n  * Nicos (027)\n  * Bill me later (028)\n  * Bebe (029)\n  * Restoration Hardware (030)\n  * Delta (031) \u2014 use this value only for Ingenico ePayments. For other processors, use 001 for all Visa card types.\n  * Solo (032)\n  * Visa Electron (033)\n  * Dankort (034)\n  * Laser (035)\n  * Carte Bleue (036) \u2014 formerly Cartes Bancaires\n  * Cartes Bancaires (036)\n  * Carta Si (037)\n  * pinless debit (038)\n  * encoded account (039)\n  * UATP (040)\n  * Household (041)\n  * Maestro (042) - International\n  * GE Money UK (043)\n  * Korean cards (044)\n  * Style (045)\n  * JCrew (046)\n  * PayEase China processing eWallet (047)\n  * PayEase China processing bank transfer (048)\n  * Meijer Private Label (049)\n  * Hipercard (050) \u2014 supported only by the Comercio Latino processor.\n  * Aura (051) \u2014 supported only by the Comercio Latino processor.\n  * Redecard (052)\n  * ORICO (053)\n  * Elo (054) \u2014 supported only by the Comercio Latino processor.\n  * Capital One Private Label (055)\n  * Synchrony Private Label (056)\n  * Costco Private Label (057)\n  * mada (060)\n  * China Union Pay (062)\n  * Falabella private label (063)\n"
                                        },
                                        "issueNumber": {
                                            "type": "string",
                                            "example": "01",
                                            "minLength": 1,
                                            "maxLength": 2,
                                            "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder."
                                        },
                                        "startMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Month of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `MM`.\nPossible values: `01` through `12`.\n"
                                        },
                                        "startYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Year of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n"
                                        },
                                        "useAs": {
                                            "type": "string",
                                            "example": "pinless debit",
                                            "description": "Card Use As Field. Supported value of `pinless debit` only. Only for use with Pinless Debit tokens."
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "companyTaxID": {
                                            "type": "string",
                                            "example": "1234567890123456800",
                                            "maxLength": 9,
                                            "description": "Tax identifier for the customer\u2019s company.\n\n**Important**:\nContact your TeleCheck representative to find out whether this field is required or optional.\n"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "example": "USD",
                                            "minLength": 3,
                                            "maxLength": 3,
                                            "description": "Currency used by the customer. Accepts input in the ISO 4217 standard, stores as ISO 4217 Alpha."
                                        },
                                        "dateOBirth": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD|YYYYMMDD",
                                            "example": "1960-12-30",
                                            "minLength": 8,
                                            "maxLength": 10,
                                            "description": "Date of birth of the customer.\n\nFormat: `YYYY-MM-DD` or `YYYYMMDD`\n"
                                        },
                                        "personalIdentification": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1234567890",
                                                        "description": "Customer's identification number.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "driver license"
                                                        ],
                                                        "example": "driver license",
                                                        "description": "Type of personal identification.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                    },
                                                    "issuedBy": {
                                                        "type": "object",
                                                        "properties": {
                                                            "administrativeArea": {
                                                                "type": "string",
                                                                "example": "CA",
                                                                "description": "State or province in which the customer\u2019s driver\u2019s license was issued. Use the State, Province, and Territory Codes for the United States and Canada.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "billTo": {
                                    "type": "object",
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "example": "John",
                                            "maxLength": 60,
                                            "description": "Customer\u2019s first name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "Smith",
                                            "maxLength": 60,
                                            "description": "Customer\u2019s last name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "company": {
                                            "type": "string",
                                            "example": "CyberSource",
                                            "maxLength": 60,
                                            "description": "Name of the customer\u2019s company.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "address1": {
                                            "type": "string",
                                            "example": "12 Main Street",
                                            "maxLength": 60,
                                            "description": "First line of the billing street address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "address2": {
                                            "type": "string",
                                            "example": "20 My Street",
                                            "maxLength": 60,
                                            "description": "Additional address information."
                                        },
                                        "locality": {
                                            "type": "string",
                                            "example": "Foster City",
                                            "maxLength": 50,
                                            "description": "City of the billing address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "administrativeArea": {
                                            "type": "string",
                                            "example": "CA",
                                            "maxLength": 20,
                                            "description": "State or province of the billing address. For an address in the U.S. or Canada, use the State, Province, and Territory Codes for the United States and Canada.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "postalCode": {
                                            "type": "string",
                                            "example": "90200",
                                            "maxLength": 10,
                                            "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n**Example** 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space]\n[numeric][alpha][numeric]\nExample A1B 2C3\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "US",
                                            "minLength": 2,
                                            "maxLength": 3,
                                            "description": "Country of the billing address. Accepts input in the ISO 3166-1 standard, stores as ISO 3166-1-Alpha-2.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john.smith@example.com",
                                            "maxLength": 320,
                                            "description": "Customer\u2019s email address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "example": "555123456",
                                            "minLength": 6,
                                            "maxLength": 32,
                                            "description": "Customer phone number. When you create a customer profile, the requirements depend on the payment method:\n  * Credit cards \u2014 optional.\n  * Electronic checks \u2014 contact your payment processor representative to find out if this field is required or optional.\n  * PINless debits \u2014 optional.\n"
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "billPaymentProgramEnabled": {
                                            "type": "boolean",
                                            "example": true,
                                            "default": false,
                                            "description": "Indicates that the payments for this customer profile are for the Bill Payment program. Possible values:\n  * false: Not a Visa Bill Payment.\n  * true: Visa Bill Payment.\n"
                                        },
                                        "bankTransferOptions": {
                                            "type": "object",
                                            "properties": {
                                                "SECCode": {
                                                    "type": "string",
                                                    "enum": [
                                                        "CCD",
                                                        "PPD",
                                                        "TEL",
                                                        "WEB"
                                                    ],
                                                    "example": "WEB",
                                                    "description": "**Important** This field is required if your processor is TeleCheck.\n\nCode that specifies the authorization method for the transaction. Possible values:\n\n- **CCD**: corporate cash disbursement. Charge or credit against a business checking account. You can use one-time or recurring CCD transactions to transfer funds to or from a corporate entity. A standing authorization is required for recurring transactions.\n- **PPD**: prearranged payment and deposit entry. Charge or credit against a personal checking or savings account. You can originate a PPD entry only when the payment and deposit terms between you and the customer are prearranged. A written authorization from the customer is required for one-time transactions and a written standing authorization is required for recurring transactions.\n- **TEL**: telephone-initiated entry. One-time charge against a personal checking or savings account. You can originate a TEL entry only when there is a business relationship between you and the customer or when the customer initiates a telephone call to you. For a TEL entry, you must obtain a payment authorization from the customer over the telephone. There is no recurring billing option for TEL.\n- **WEB**: internet-initiated entry\u2014charge against a personal checking or savings account. You can originate a one-time or recurring WEB entry when the customer initiates the transaction over the Internet. For a WEB entry, you must obtain payment authorization from the customer over the Internet.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "alternateName": {
                                                    "type": "string",
                                                    "example": "Branch Name",
                                                    "description": "Alternate information for your business. This API field overrides the company entry description value in your CyberSource account."
                                                }
                                            }
                                        }
                                    }
                                },
                                "metaData": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "creator": {
                                            "type": "string",
                                            "example": "merchantName",
                                            "description": "The creator of the token."
                                        }
                                    }
                                },
                                "instrumentIdentifier": {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                },
                                                "ancestor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                },
                                                "successor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "object": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "instrumentIdentifier",
                                            "description": "Describes type of token.",
                                            "enum": [
                                                "instrumentIdentifier"
                                            ]
                                        },
                                        "state": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "ACTIVE",
                                            "description": "Current state of the token.",
                                            "enum": [
                                                "ACTIVE",
                                                "CLOSED"
                                            ]
                                        },
                                        "id": {
                                            "type": "string",
                                            "example": "1234567890123456789",
                                            "minLength": 16,
                                            "maxLength": 32,
                                            "description": "The ID of the existing instrument identifier to be linked to the newly created payment instrument."
                                        },
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "1234567890987654",
                                                    "minLength": 12,
                                                    "maxLength": 19,
                                                    "description": "Customer\u2019s credit card number."
                                                }
                                            }
                                        },
                                        "bankAccount": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "1234567890123456800",
                                                    "minLength": 1,
                                                    "maxLength": 19,
                                                    "description": "Checking account number."
                                                },
                                                "routingNumber": {
                                                    "type": "string",
                                                    "example": "123456789",
                                                    "minLength": 1,
                                                    "maxLength": 9,
                                                    "description": "Routing number."
                                                }
                                            }
                                        },
                                        "processingInformation": {
                                            "type": "object",
                                            "properties": {
                                                "authorizationOptions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "initiator": {
                                                            "type": "object",
                                                            "properties": {
                                                                "merchantInitiatedTransaction": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "previousTransactionId": {
                                                                            "type": "string",
                                                                            "example": "123456789012345",
                                                                            "maxLength": 15,
                                                                            "description": "Previous Consumer Initiated Transaction Id."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                                "creator": {
                                                    "type": "string",
                                                    "example": "merchantName",
                                                    "description": "The creator of the token."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "https://api.cybersource.com/tms/v1/paymentinstruments/5910683634E6B035E0539399D30A4B46"
                                    }
                                },
                                "id": "5910683634E6B035E0539399D30A4B46",
                                "object": "paymentInstrument",
                                "state": "ACTIVE",
                                "card": {
                                    "expirationMonth": 11,
                                    "expirationYear": 2020,
                                    "type": "visa",
                                    "issueNumber": 1,
                                    "startMonth": 12,
                                    "startYear": 2017
                                },
                                "buyerInformation": {
                                    "companyTaxID": 12345,
                                    "currency": "USD"
                                },
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Smith",
                                    "company": "Cybersource",
                                    "address1": "1 My Apartment",
                                    "address2": "20 My Street",
                                    "locality": "San Francisco",
                                    "administrativeArea": "CA",
                                    "postalCode": 90210,
                                    "country": "US",
                                    "email": "ohn.smith@test.com",
                                    "phoneNumber": "+44 289044795"
                                },
                                "processingInformation": {
                                    "billPaymentProgramEnabled": true
                                },
                                "metadata": {
                                    "creator": "user"
                                },
                                "_embedded": {
                                    "instrumentIdentifier": {
                                        "_links": {
                                            "self": {
                                                "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/58FEBAEFD2EEFCE1E0539399D30A7500"
                                            }
                                        },
                                        "id": "58FEBAEFD2EEFCE1E0539399D30A7500",
                                        "object": "instrumentIdentifier",
                                        "state": "ACTIVE",
                                        "card": {
                                            "number": "424242XXXXXX4242"
                                        },
                                        "processingInformation": {
                                            "authorizationOptions": {
                                                "initiator": {
                                                    "merchantInitiatedTransaction": {
                                                        "previousTransactionId": 123456789012345
                                                    }
                                                }
                                            }
                                        },
                                        "metadata": {
                                            "creator": "user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. A required header value could be missing.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1PaymentInstruments400Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Missing Headers": {
                                "errors": [
                                    {
                                        "type": "missingHeaders",
                                        "message": "Missing header values."
                                    }
                                ]
                            },
                            "Payment Instrument cannot be linked to instrument identifier because it does not exist": {
                                "errors": [
                                    {
                                        "type": "instrumentIdentifierNotFound",
                                        "message": "Action cannot be performed. The `InstrumentIdentifier` is not found"
                                    }
                                ]
                            },
                            "Payment Instrument cannot be linked to instrument identifier because it has been deleted": {
                                "errors": [
                                    {
                                        "type": "instrumentIdentifierGone",
                                        "message": "Action cannot be performed. The `InstrumentIdentifier` is gone."
                                    }
                                ]
                            },
                            "Payment Instrument cannot be linked to instrument identifier due to a token type mismatch": {
                                "errors": [
                                    {
                                        "type": "invalidCombination",
                                        "message": "The combination is invalid.",
                                        "details": [
                                            {
                                                "name": "bankAccount"
                                            },
                                            {
                                                "name": "card",
                                                "location": "instrumentIdentifier"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "Payment Instrument cannot be created due to invalid combination of Instrument Identifier fields": {
                                "errors": [
                                    {
                                        "type": "invalidCombination",
                                        "message": "The combination is invalid.",
                                        "details": [
                                            {
                                                "name": "id",
                                                "location": "instrumentIdentifier"
                                            },
                                            {
                                                "name": "card",
                                                "location": "instrumentIdentifier"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. The profile might not have permission to perform the token operation.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1Forbidden403Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "forbidden",
                                        "message": "Request not permitted."
                                    }
                                ]
                            }
                        }
                    },
                    "424": {
                        "description": "Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1FailedDependency424Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Profile not found"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "serverError",
                                        "message": "Internal server error"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "title": "tmsV1Error500Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Create Payment Instrument (Card)",
                        "value": {
                            "card": {
                                "expirationMonth": "09",
                                "expirationYear": "2017",
                                "type": "visa",
                                "issueNumber": "01",
                                "startMonth": "01",
                                "startYear": "2016"
                            },
                            "buyerInformation": {
                                "companyTaxID": "12345",
                                "currency": "USD"
                            },
                            "billTo": {
                                "firstName": "John",
                                "lastName": "Smith",
                                "company": "Cybersource",
                                "address1": "8310 Capital of Texas Highwas North",
                                "address2": "Bluffstone Drive",
                                "locality": "Austin",
                                "administrativeArea": "TX",
                                "postalCode": "78731",
                                "country": "United States",
                                "email": "john.smith@test.com",
                                "phoneNumber": "+44 2890447951"
                            },
                            "processingInformation": {
                                "billPaymentProgramEnabled": true
                            },
                            "instrumentIdentifier": {
                                "card": {
                                    "number": "411111111111112"
                                }
                            }
                        }
                    },
                    "example1": {
                        "summary": "Create Payment Instrument (Bank Account)",
                        "value": {
                            "bankAccount": {
                                "type": "savings"
                            },
                            "buyerInformation": {
                                "companyTaxID": "12345",
                                "currency": "USD",
                                "dateOfBirth": "2000-12-13",
                                "personalIdentification": [
                                    {
                                        "id": "57684432111321",
                                        "type": "driver license",
                                        "issuedBy": {
                                            "administrativeArea": "CA"
                                        }
                                    }
                                ]
                            },
                            "billTo": {
                                "firstName": "John",
                                "lastName": "Smith",
                                "company": "Cybersource",
                                "address1": "8310 Capital of Texas Highwas North",
                                "address2": "Bluffstone Drive",
                                "locality": "Austin",
                                "administrativeArea": "TX",
                                "postalCode": "78731",
                                "country": "United States",
                                "email": "john.smith@test.com",
                                "phoneNumber": "+44 2890447951"
                            },
                            "processingInformation": {
                                "billPaymentProgramEnabled": true,
                                "bankTransferOptions": {
                                    "SECCode": "WEB"
                                }
                            },
                            "merchantInformation": {
                                "merchantDescriptor": {
                                    "alternateName": "Branch Name"
                                }
                            },
                            "instrumentIdentifier": {
                                "bankAccount": {
                                    "number": "4100",
                                    "routingNumber": "071923284"
                                }
                            }
                        }
                    },
                    "example2": {
                        "summary": "Create Payment Instrument (Pinless Debit)",
                        "value": {
                            "card": {
                                "expirationMonth": "09",
                                "expirationYear": "2017",
                                "type": "visa",
                                "issueNumber": "01",
                                "startMonth": "01",
                                "startYear": "2016",
                                "useAs": "pinless debit"
                            },
                            "buyerInformation": {
                                "companyTaxID": "12345",
                                "currency": "USD"
                            },
                            "billTo": {
                                "firstName": "John",
                                "lastName": "Smith",
                                "company": "Cybersource",
                                "address1": "8310 Capital of Texas Highwas North",
                                "address2": "Bluffstone Drive",
                                "locality": "Austin",
                                "administrativeArea": "TX",
                                "postalCode": "78731",
                                "country": "United States",
                                "email": "john.smith@test.com",
                                "phoneNumber": "+44 2890447951"
                            },
                            "processingInformation": {
                                "billPaymentProgramEnabled": true
                            },
                            "instrumentIdentifier": {
                                "card": {
                                    "number": "411111111111112"
                                }
                            }
                        }
                    },
                    "example3": {
                        "summary": "Create Payment Instrument (Card with Instrument Identifier Id)",
                        "value": {
                            "card": {
                                "expirationMonth": "09",
                                "expirationYear": "2017",
                                "type": "visa",
                                "issueNumber": "01",
                                "startMonth": "01",
                                "startYear": "2016"
                            },
                            "buyerInformation": {
                                "companyTaxID": "12345",
                                "currency": "USD"
                            },
                            "billTo": {
                                "firstName": "John",
                                "lastName": "Smith",
                                "company": "Cybersource",
                                "address1": "8310 Capital of Texas Highwas North",
                                "address2": "Bluffstone Drive",
                                "locality": "Austin",
                                "administrativeArea": "TX",
                                "postalCode": "78731",
                                "country": "United States",
                                "email": "john.smith@test.com",
                                "phoneNumber": "+44 2890447951"
                            },
                            "processingInformation": {
                                "billPaymentProgramEnabled": true
                            },
                            "instrumentIdentifier": {
                                "id": "9000000000000000001003"
                            }
                        }
                    },
                    "example4": {
                        "summary": "Create Payment Instrument (Tokenized Card)",
                        "value": {
                            "card": {
                                "expirationMonth": "09",
                                "expirationYear": "2017",
                                "type": "visa",
                                "issueNumber": "01",
                                "startMonth": "01",
                                "startYear": "2016",
                                "tokenizedInformation": {
                                    "requestorID": "payment_network_token_requestor_id",
                                    "transactionType": "payment_network_token_transaction_type"
                                }
                            },
                            "buyerInformation": {
                                "companyTaxID": "12345",
                                "currency": "USD"
                            },
                            "billTo": {
                                "firstName": "John",
                                "lastName": "Smith",
                                "company": "Cybersource",
                                "address1": "8310 Capital of Texas Highwas North",
                                "address2": "Bluffstone Drive",
                                "locality": "Austin",
                                "administrativeArea": "TX",
                                "postalCode": "78731",
                                "country": "United States",
                                "email": "john.smith@test.com",
                                "phoneNumber": "+44 2890447951"
                            },
                            "processingInformation": {
                                "billPaymentProgramEnabled": true
                            },
                            "instrumentIdentifier": {
                                "card": {
                                    "number": "411111111111112"
                                }
                            }
                        }
                    },
                    "example5": {
                        "summary": "Create Payment Instrument (Card & Enroll for Network Token)",
                        "value": {
                            "card": {
                                "expirationMonth": "09",
                                "expirationYear": "2017",
                                "type": "visa",
                                "issueNumber": "01",
                                "startMonth": "01",
                                "startYear": "2016"
                            },
                            "buyerInformation": {
                                "companyTaxID": "12345",
                                "currency": "USD"
                            },
                            "billTo": {
                                "firstName": "John",
                                "lastName": "Smith",
                                "company": "Cybersource",
                                "address1": "8310 Capital of Texas Highwas North",
                                "address2": "Bluffstone Drive",
                                "locality": "Austin",
                                "administrativeArea": "TX",
                                "postalCode": "78731",
                                "country": "United States",
                                "email": "john.smith@test.com",
                                "phoneNumber": "+44 2890447951"
                            },
                            "processingInformation": {
                                "billPaymentProgramEnabled": true
                            },
                            "instrumentIdentifier": {
                                "type": "enrollable card",
                                "card": {
                                    "number": "4622943127013705",
                                    "expirationMonth": "12",
                                    "expirationYear": "2022",
                                    "securityCode": "838"
                                },
                                "billTo": {
                                    "address1": "8310 Capital of Texas Highway North",
                                    "address2": "Bluffstone Drive",
                                    "locality": "Austin",
                                    "administrativeArea": "TX",
                                    "postalCode": "78731",
                                    "country": "US"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tms/v1/paymentinstruments/{tokenId}": {
            "patch": {
                "summary": "Update a Payment Instrument",
                "parameters": [
                    {
                        "name": "profile-id",
                        "in": "header",
                        "description": "The id of a profile containing user specific TMS configuration.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "v-c-merchant-id",
                        "in": "header",
                        "description": "CyberSource merchant id.",
                        "required": true,
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 32
                    },
                    {
                        "name": "v-c-correlation-id",
                        "in": "header",
                        "description": "The mandatory correlation id passed by upstream (calling) system.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "Client-Application",
                        "in": "header",
                        "description": "Client application name",
                        "required": false,
                        "pattern": "^[a-zA-Z0-9\\\\-_]{3,30}|$",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    {
                        "name": "tokenId",
                        "in": "path",
                        "description": "The TokenId of a Payment Instrument.",
                        "required": true,
                        "type": "string",
                        "minLength": 16,
                        "maxLength": 32
                    },
                    {
                        "name": "updatePaymentInstrumentRequest",
                        "in": "body",
                        "description": "Specify the customer's payment details.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "ancestor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "successor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1234567890123456800",
                                    "description": "Unique identification number assigned by CyberSource to the submitted request."
                                },
                                "object": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "instrumentIdentifier",
                                    "description": "Describes type of token.",
                                    "enum": [
                                        "paymentInstrument"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "ACTIVE",
                                    "description": "Current state of the token.",
                                    "enum": [
                                        "ACTIVE",
                                        "CLOSED"
                                    ]
                                },
                                "bankAccount": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "checking",
                                                "savings",
                                                "corporate checking",
                                                "general ledger"
                                            ],
                                            "example": "savings",
                                            "description": "Checking account type. Possible values:\n  * C: checking\n  * S: savings (USD only)\n  * X: corporate checking (USD only)\n  * G: general ledger\n"
                                        }
                                    }
                                },
                                "card": {
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "expirationMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Two-digit month in which the credit card expires.\nFormat: `MM`\nPossible values: `01` through `12`\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. For more information about relaxed requirements, see the TMS REST API Developer Guide.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "expirationYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Four-digit year in which the credit card expires.\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n\n**FDC Nashville Global and FDMS South**\nYou can send in 2 digits or 4 digits. When you send in 2 digits, they must be the last 2 digits of the year.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See Relaxed Requirements for Address Data and Expiration Date page.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.'\n"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "visa",
                                                "mastercard",
                                                "american express",
                                                "discover",
                                                "diners club",
                                                "carte blanche",
                                                "jcb",
                                                "optima",
                                                "twinpay credit",
                                                "twinpay debit",
                                                "walmart",
                                                "enroute",
                                                "lowes consumer",
                                                "home depot consumer",
                                                "mbna",
                                                "dicks sportswear",
                                                "casual corner",
                                                "sears",
                                                "jal",
                                                "disney",
                                                "maestro uk domestic",
                                                "sams club consumer",
                                                "sams club business",
                                                "nicos",
                                                "bill me later",
                                                "bebe",
                                                "restoration hardware",
                                                "delta online",
                                                "solo",
                                                "visa electron",
                                                "dankort",
                                                "laser",
                                                "carte bleue",
                                                "carta si",
                                                "pinless debit",
                                                "encoded account",
                                                "uatp",
                                                "household",
                                                "maestro international",
                                                "ge money uk",
                                                "korean cards",
                                                "style",
                                                "jcrew",
                                                "payease china processing ewallet",
                                                "payease china processing bank transfer",
                                                "meijer private label",
                                                "hipercard",
                                                "aura",
                                                "redecard",
                                                "orico",
                                                "elo",
                                                "capital one private label",
                                                "synchrony private label",
                                                "china union pay",
                                                "costco private label",
                                                "mada",
                                                "falabella private label"
                                            ],
                                            "description": "Type of credit card. Possible values:\n  * Visa (001)\n  * Mastercard (002) - Eurocard\u2014European regional brand of Mastercard\n  * American Express (003)\n  * Discover (004)\n  * Diners Club (005)\n  * Carte Blanche (006)\n  * JCB (007)\n  * Optima (008)\n  * Twinpay Credit (011)\n  * Twinpay Debit (012)\n  * Walmart (013)\n  * EnRoute (014)\n  * Lowes consumer (015)\n  * Home Depot consumer (016)\n  * MBNA (017)\n  * Dicks Sportswear (018)\n  * Casual Corner (019)\n  * Sears (020)\n  * JAL (021)\n  * Disney (023)\n  * Maestro (024) - UK Domestic\n  * Sams Club consumer (025)\n  * Sams Club business (026)\n  * Nicos (027)\n  * Bill me later (028)\n  * Bebe (029)\n  * Restoration Hardware (030)\n  * Delta (031) \u2014 use this value only for Ingenico ePayments. For other processors, use 001 for all Visa card types.\n  * Solo (032)\n  * Visa Electron (033)\n  * Dankort (034)\n  * Laser (035)\n  * Carte Bleue (036) \u2014 formerly Cartes Bancaires\n  * Cartes Bancaires (036)\n  * Carta Si (037)\n  * pinless debit (038)\n  * encoded account (039)\n  * UATP (040)\n  * Household (041)\n  * Maestro (042) - International\n  * GE Money UK (043)\n  * Korean cards (044)\n  * Style (045)\n  * JCrew (046)\n  * PayEase China processing eWallet (047)\n  * PayEase China processing bank transfer (048)\n  * Meijer Private Label (049)\n  * Hipercard (050) \u2014 supported only by the Comercio Latino processor.\n  * Aura (051) \u2014 supported only by the Comercio Latino processor.\n  * Redecard (052)\n  * ORICO (053)\n  * Elo (054) \u2014 supported only by the Comercio Latino processor.\n  * Capital One Private Label (055)\n  * Synchrony Private Label (056)\n  * Costco Private Label (057)\n  * mada (060)\n  * China Union Pay (062)\n  * Falabella private label (063)\n"
                                        },
                                        "issueNumber": {
                                            "type": "string",
                                            "example": "01",
                                            "minLength": 1,
                                            "maxLength": 2,
                                            "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder."
                                        },
                                        "startMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Month of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `MM`.\nPossible values: `01` through `12`.\n"
                                        },
                                        "startYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Year of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n"
                                        },
                                        "useAs": {
                                            "type": "string",
                                            "example": "pinless debit",
                                            "description": "Card Use As Field. Supported value of `pinless debit` only. Only for use with Pinless Debit tokens."
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "companyTaxID": {
                                            "type": "string",
                                            "example": "1234567890123456800",
                                            "maxLength": 9,
                                            "description": "Tax identifier for the customer\u2019s company.\n\n**Important**:\nContact your TeleCheck representative to find out whether this field is required or optional.\n"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "example": "USD",
                                            "minLength": 3,
                                            "maxLength": 3,
                                            "description": "Currency used by the customer. Accepts input in the ISO 4217 standard, stores as ISO 4217 Alpha."
                                        },
                                        "dateOBirth": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD|YYYYMMDD",
                                            "example": "1960-12-30",
                                            "minLength": 8,
                                            "maxLength": 10,
                                            "description": "Date of birth of the customer.\n\nFormat: `YYYY-MM-DD` or `YYYYMMDD`\n"
                                        },
                                        "personalIdentification": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1234567890",
                                                        "description": "Customer's identification number.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "driver license"
                                                        ],
                                                        "example": "driver license",
                                                        "description": "Type of personal identification.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                    },
                                                    "issuedBy": {
                                                        "type": "object",
                                                        "properties": {
                                                            "administrativeArea": {
                                                                "type": "string",
                                                                "example": "CA",
                                                                "description": "State or province in which the customer\u2019s driver\u2019s license was issued. Use the State, Province, and Territory Codes for the United States and Canada.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "billTo": {
                                    "type": "object",
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "example": "John",
                                            "maxLength": 60,
                                            "description": "Customer\u2019s first name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "Smith",
                                            "maxLength": 60,
                                            "description": "Customer\u2019s last name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "company": {
                                            "type": "string",
                                            "example": "CyberSource",
                                            "maxLength": 60,
                                            "description": "Name of the customer\u2019s company.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "address1": {
                                            "type": "string",
                                            "example": "12 Main Street",
                                            "maxLength": 60,
                                            "description": "First line of the billing street address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "address2": {
                                            "type": "string",
                                            "example": "20 My Street",
                                            "maxLength": 60,
                                            "description": "Additional address information."
                                        },
                                        "locality": {
                                            "type": "string",
                                            "example": "Foster City",
                                            "maxLength": 50,
                                            "description": "City of the billing address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "administrativeArea": {
                                            "type": "string",
                                            "example": "CA",
                                            "maxLength": 20,
                                            "description": "State or province of the billing address. For an address in the U.S. or Canada, use the State, Province, and Territory Codes for the United States and Canada.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "postalCode": {
                                            "type": "string",
                                            "example": "90200",
                                            "maxLength": 10,
                                            "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n**Example** 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space]\n[numeric][alpha][numeric]\nExample A1B 2C3\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "US",
                                            "minLength": 2,
                                            "maxLength": 3,
                                            "description": "Country of the billing address. Accepts input in the ISO 3166-1 standard, stores as ISO 3166-1-Alpha-2.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john.smith@example.com",
                                            "maxLength": 320,
                                            "description": "Customer\u2019s email address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "example": "555123456",
                                            "minLength": 6,
                                            "maxLength": 32,
                                            "description": "Customer phone number. When you create a customer profile, the requirements depend on the payment method:\n  * Credit cards \u2014 optional.\n  * Electronic checks \u2014 contact your payment processor representative to find out if this field is required or optional.\n  * PINless debits \u2014 optional.\n"
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "billPaymentProgramEnabled": {
                                            "type": "boolean",
                                            "example": true,
                                            "default": false,
                                            "description": "Indicates that the payments for this customer profile are for the Bill Payment program. Possible values:\n  * false: Not a Visa Bill Payment.\n  * true: Visa Bill Payment.\n"
                                        },
                                        "bankTransferOptions": {
                                            "type": "object",
                                            "properties": {
                                                "SECCode": {
                                                    "type": "string",
                                                    "enum": [
                                                        "CCD",
                                                        "PPD",
                                                        "TEL",
                                                        "WEB"
                                                    ],
                                                    "example": "WEB",
                                                    "description": "**Important** This field is required if your processor is TeleCheck.\n\nCode that specifies the authorization method for the transaction. Possible values:\n\n- **CCD**: corporate cash disbursement. Charge or credit against a business checking account. You can use one-time or recurring CCD transactions to transfer funds to or from a corporate entity. A standing authorization is required for recurring transactions.\n- **PPD**: prearranged payment and deposit entry. Charge or credit against a personal checking or savings account. You can originate a PPD entry only when the payment and deposit terms between you and the customer are prearranged. A written authorization from the customer is required for one-time transactions and a written standing authorization is required for recurring transactions.\n- **TEL**: telephone-initiated entry. One-time charge against a personal checking or savings account. You can originate a TEL entry only when there is a business relationship between you and the customer or when the customer initiates a telephone call to you. For a TEL entry, you must obtain a payment authorization from the customer over the telephone. There is no recurring billing option for TEL.\n- **WEB**: internet-initiated entry\u2014charge against a personal checking or savings account. You can originate a one-time or recurring WEB entry when the customer initiates the transaction over the Internet. For a WEB entry, you must obtain payment authorization from the customer over the Internet.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "alternateName": {
                                                    "type": "string",
                                                    "example": "Branch Name",
                                                    "description": "Alternate information for your business. This API field overrides the company entry description value in your CyberSource account."
                                                }
                                            }
                                        }
                                    }
                                },
                                "metaData": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "creator": {
                                            "type": "string",
                                            "example": "merchantName",
                                            "description": "The creator of the token."
                                        }
                                    }
                                },
                                "instrumentIdentifier": {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                },
                                                "ancestor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                },
                                                "successor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "object": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "instrumentIdentifier",
                                            "description": "Describes type of token.",
                                            "enum": [
                                                "instrumentIdentifier"
                                            ]
                                        },
                                        "state": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "ACTIVE",
                                            "description": "Current state of the token.",
                                            "enum": [
                                                "ACTIVE",
                                                "CLOSED"
                                            ]
                                        },
                                        "id": {
                                            "type": "string",
                                            "example": "1234567890123456789",
                                            "minLength": 16,
                                            "maxLength": 32,
                                            "description": "The ID of the existing instrument identifier to be linked to the newly created payment instrument."
                                        },
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "1234567890987654",
                                                    "minLength": 12,
                                                    "maxLength": 19,
                                                    "description": "Customer\u2019s credit card number."
                                                }
                                            }
                                        },
                                        "bankAccount": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "1234567890123456800",
                                                    "minLength": 1,
                                                    "maxLength": 19,
                                                    "description": "Checking account number."
                                                },
                                                "routingNumber": {
                                                    "type": "string",
                                                    "example": "123456789",
                                                    "minLength": 1,
                                                    "maxLength": 9,
                                                    "description": "Routing number."
                                                }
                                            }
                                        },
                                        "processingInformation": {
                                            "type": "object",
                                            "properties": {
                                                "authorizationOptions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "initiator": {
                                                            "type": "object",
                                                            "properties": {
                                                                "merchantInitiatedTransaction": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "previousTransactionId": {
                                                                            "type": "string",
                                                                            "example": "123456789012345",
                                                                            "maxLength": 15,
                                                                            "description": "Previous Consumer Initiated Transaction Id."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                                "creator": {
                                                    "type": "string",
                                                    "example": "merchantName",
                                                    "description": "The creator of the token."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Payment Instrument"
                ],
                "operationId": "updatePaymentInstrument",
                "x-devcenter-metaData": {
                    "categoryTag": "Token_Management"
                },
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "The updated Payment Instrument has been returned.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1PaymentinstrumentsPatch200Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "ancestor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "successor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1234567890123456800",
                                    "description": "Unique identification number assigned by CyberSource to the submitted request."
                                },
                                "object": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "instrumentIdentifier",
                                    "description": "Describes type of token.",
                                    "enum": [
                                        "paymentInstrument"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "ACTIVE",
                                    "description": "Current state of the token.",
                                    "enum": [
                                        "ACTIVE",
                                        "CLOSED"
                                    ]
                                },
                                "bankAccount": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "checking",
                                                "savings",
                                                "corporate checking",
                                                "general ledger"
                                            ],
                                            "example": "savings",
                                            "description": "Checking account type. Possible values:\n  * C: checking\n  * S: savings (USD only)\n  * X: corporate checking (USD only)\n  * G: general ledger\n"
                                        }
                                    }
                                },
                                "card": {
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "expirationMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Two-digit month in which the credit card expires.\nFormat: `MM`\nPossible values: `01` through `12`\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. For more information about relaxed requirements, see the TMS REST API Developer Guide.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "expirationYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Four-digit year in which the credit card expires.\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n\n**FDC Nashville Global and FDMS South**\nYou can send in 2 digits or 4 digits. When you send in 2 digits, they must be the last 2 digits of the year.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See Relaxed Requirements for Address Data and Expiration Date page.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.'\n"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "visa",
                                                "mastercard",
                                                "american express",
                                                "discover",
                                                "diners club",
                                                "carte blanche",
                                                "jcb",
                                                "optima",
                                                "twinpay credit",
                                                "twinpay debit",
                                                "walmart",
                                                "enroute",
                                                "lowes consumer",
                                                "home depot consumer",
                                                "mbna",
                                                "dicks sportswear",
                                                "casual corner",
                                                "sears",
                                                "jal",
                                                "disney",
                                                "maestro uk domestic",
                                                "sams club consumer",
                                                "sams club business",
                                                "nicos",
                                                "bill me later",
                                                "bebe",
                                                "restoration hardware",
                                                "delta online",
                                                "solo",
                                                "visa electron",
                                                "dankort",
                                                "laser",
                                                "carte bleue",
                                                "carta si",
                                                "pinless debit",
                                                "encoded account",
                                                "uatp",
                                                "household",
                                                "maestro international",
                                                "ge money uk",
                                                "korean cards",
                                                "style",
                                                "jcrew",
                                                "payease china processing ewallet",
                                                "payease china processing bank transfer",
                                                "meijer private label",
                                                "hipercard",
                                                "aura",
                                                "redecard",
                                                "orico",
                                                "elo",
                                                "capital one private label",
                                                "synchrony private label",
                                                "china union pay",
                                                "costco private label",
                                                "mada",
                                                "falabella private label"
                                            ],
                                            "description": "Type of credit card. Possible values:\n  * Visa (001)\n  * Mastercard (002) - Eurocard\u2014European regional brand of Mastercard\n  * American Express (003)\n  * Discover (004)\n  * Diners Club (005)\n  * Carte Blanche (006)\n  * JCB (007)\n  * Optima (008)\n  * Twinpay Credit (011)\n  * Twinpay Debit (012)\n  * Walmart (013)\n  * EnRoute (014)\n  * Lowes consumer (015)\n  * Home Depot consumer (016)\n  * MBNA (017)\n  * Dicks Sportswear (018)\n  * Casual Corner (019)\n  * Sears (020)\n  * JAL (021)\n  * Disney (023)\n  * Maestro (024) - UK Domestic\n  * Sams Club consumer (025)\n  * Sams Club business (026)\n  * Nicos (027)\n  * Bill me later (028)\n  * Bebe (029)\n  * Restoration Hardware (030)\n  * Delta (031) \u2014 use this value only for Ingenico ePayments. For other processors, use 001 for all Visa card types.\n  * Solo (032)\n  * Visa Electron (033)\n  * Dankort (034)\n  * Laser (035)\n  * Carte Bleue (036) \u2014 formerly Cartes Bancaires\n  * Cartes Bancaires (036)\n  * Carta Si (037)\n  * pinless debit (038)\n  * encoded account (039)\n  * UATP (040)\n  * Household (041)\n  * Maestro (042) - International\n  * GE Money UK (043)\n  * Korean cards (044)\n  * Style (045)\n  * JCrew (046)\n  * PayEase China processing eWallet (047)\n  * PayEase China processing bank transfer (048)\n  * Meijer Private Label (049)\n  * Hipercard (050) \u2014 supported only by the Comercio Latino processor.\n  * Aura (051) \u2014 supported only by the Comercio Latino processor.\n  * Redecard (052)\n  * ORICO (053)\n  * Elo (054) \u2014 supported only by the Comercio Latino processor.\n  * Capital One Private Label (055)\n  * Synchrony Private Label (056)\n  * Costco Private Label (057)\n  * mada (060)\n  * China Union Pay (062)\n  * Falabella private label (063)\n"
                                        },
                                        "issueNumber": {
                                            "type": "string",
                                            "example": "01",
                                            "minLength": 1,
                                            "maxLength": 2,
                                            "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder."
                                        },
                                        "startMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Month of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `MM`.\nPossible values: `01` through `12`.\n"
                                        },
                                        "startYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Year of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n"
                                        },
                                        "useAs": {
                                            "type": "string",
                                            "example": "pinless debit",
                                            "description": "Card Use As Field. Supported value of `pinless debit` only. Only for use with Pinless Debit tokens."
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "companyTaxID": {
                                            "type": "string",
                                            "example": "1234567890123456800",
                                            "maxLength": 9,
                                            "description": "Tax identifier for the customer\u2019s company.\n\n**Important**:\nContact your TeleCheck representative to find out whether this field is required or optional.\n"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "example": "USD",
                                            "minLength": 3,
                                            "maxLength": 3,
                                            "description": "Currency used by the customer. Accepts input in the ISO 4217 standard, stores as ISO 4217 Alpha."
                                        },
                                        "dateOBirth": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD|YYYYMMDD",
                                            "example": "1960-12-30",
                                            "minLength": 8,
                                            "maxLength": 10,
                                            "description": "Date of birth of the customer.\n\nFormat: `YYYY-MM-DD` or `YYYYMMDD`\n"
                                        },
                                        "personalIdentification": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1234567890",
                                                        "description": "Customer's identification number.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "driver license"
                                                        ],
                                                        "example": "driver license",
                                                        "description": "Type of personal identification.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                    },
                                                    "issuedBy": {
                                                        "type": "object",
                                                        "properties": {
                                                            "administrativeArea": {
                                                                "type": "string",
                                                                "example": "CA",
                                                                "description": "State or province in which the customer\u2019s driver\u2019s license was issued. Use the State, Province, and Territory Codes for the United States and Canada.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "billTo": {
                                    "type": "object",
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "example": "John",
                                            "maxLength": 60,
                                            "description": "Customer\u2019s first name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "Smith",
                                            "maxLength": 60,
                                            "description": "Customer\u2019s last name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "company": {
                                            "type": "string",
                                            "example": "CyberSource",
                                            "maxLength": 60,
                                            "description": "Name of the customer\u2019s company.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "address1": {
                                            "type": "string",
                                            "example": "12 Main Street",
                                            "maxLength": 60,
                                            "description": "First line of the billing street address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "address2": {
                                            "type": "string",
                                            "example": "20 My Street",
                                            "maxLength": 60,
                                            "description": "Additional address information."
                                        },
                                        "locality": {
                                            "type": "string",
                                            "example": "Foster City",
                                            "maxLength": 50,
                                            "description": "City of the billing address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "administrativeArea": {
                                            "type": "string",
                                            "example": "CA",
                                            "maxLength": 20,
                                            "description": "State or province of the billing address. For an address in the U.S. or Canada, use the State, Province, and Territory Codes for the United States and Canada.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "postalCode": {
                                            "type": "string",
                                            "example": "90200",
                                            "maxLength": 10,
                                            "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n**Example** 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space]\n[numeric][alpha][numeric]\nExample A1B 2C3\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "US",
                                            "minLength": 2,
                                            "maxLength": 3,
                                            "description": "Country of the billing address. Accepts input in the ISO 3166-1 standard, stores as ISO 3166-1-Alpha-2.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john.smith@example.com",
                                            "maxLength": 320,
                                            "description": "Customer\u2019s email address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "example": "555123456",
                                            "minLength": 6,
                                            "maxLength": 32,
                                            "description": "Customer phone number. When you create a customer profile, the requirements depend on the payment method:\n  * Credit cards \u2014 optional.\n  * Electronic checks \u2014 contact your payment processor representative to find out if this field is required or optional.\n  * PINless debits \u2014 optional.\n"
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "billPaymentProgramEnabled": {
                                            "type": "boolean",
                                            "example": true,
                                            "default": false,
                                            "description": "Indicates that the payments for this customer profile are for the Bill Payment program. Possible values:\n  * false: Not a Visa Bill Payment.\n  * true: Visa Bill Payment.\n"
                                        },
                                        "bankTransferOptions": {
                                            "type": "object",
                                            "properties": {
                                                "SECCode": {
                                                    "type": "string",
                                                    "enum": [
                                                        "CCD",
                                                        "PPD",
                                                        "TEL",
                                                        "WEB"
                                                    ],
                                                    "example": "WEB",
                                                    "description": "**Important** This field is required if your processor is TeleCheck.\n\nCode that specifies the authorization method for the transaction. Possible values:\n\n- **CCD**: corporate cash disbursement. Charge or credit against a business checking account. You can use one-time or recurring CCD transactions to transfer funds to or from a corporate entity. A standing authorization is required for recurring transactions.\n- **PPD**: prearranged payment and deposit entry. Charge or credit against a personal checking or savings account. You can originate a PPD entry only when the payment and deposit terms between you and the customer are prearranged. A written authorization from the customer is required for one-time transactions and a written standing authorization is required for recurring transactions.\n- **TEL**: telephone-initiated entry. One-time charge against a personal checking or savings account. You can originate a TEL entry only when there is a business relationship between you and the customer or when the customer initiates a telephone call to you. For a TEL entry, you must obtain a payment authorization from the customer over the telephone. There is no recurring billing option for TEL.\n- **WEB**: internet-initiated entry\u2014charge against a personal checking or savings account. You can originate a one-time or recurring WEB entry when the customer initiates the transaction over the Internet. For a WEB entry, you must obtain payment authorization from the customer over the Internet.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "alternateName": {
                                                    "type": "string",
                                                    "example": "Branch Name",
                                                    "description": "Alternate information for your business. This API field overrides the company entry description value in your CyberSource account."
                                                }
                                            }
                                        }
                                    }
                                },
                                "metaData": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "creator": {
                                            "type": "string",
                                            "example": "merchantName",
                                            "description": "The creator of the token."
                                        }
                                    }
                                },
                                "instrumentIdentifier": {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                },
                                                "ancestor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                },
                                                "successor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "object": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "instrumentIdentifier",
                                            "description": "Describes type of token.",
                                            "enum": [
                                                "instrumentIdentifier"
                                            ]
                                        },
                                        "state": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "ACTIVE",
                                            "description": "Current state of the token.",
                                            "enum": [
                                                "ACTIVE",
                                                "CLOSED"
                                            ]
                                        },
                                        "id": {
                                            "type": "string",
                                            "example": "1234567890123456789",
                                            "minLength": 16,
                                            "maxLength": 32,
                                            "description": "The ID of the existing instrument identifier to be linked to the newly created payment instrument."
                                        },
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "1234567890987654",
                                                    "minLength": 12,
                                                    "maxLength": 19,
                                                    "description": "Customer\u2019s credit card number."
                                                }
                                            }
                                        },
                                        "bankAccount": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "1234567890123456800",
                                                    "minLength": 1,
                                                    "maxLength": 19,
                                                    "description": "Checking account number."
                                                },
                                                "routingNumber": {
                                                    "type": "string",
                                                    "example": "123456789",
                                                    "minLength": 1,
                                                    "maxLength": 9,
                                                    "description": "Routing number."
                                                }
                                            }
                                        },
                                        "processingInformation": {
                                            "type": "object",
                                            "properties": {
                                                "authorizationOptions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "initiator": {
                                                            "type": "object",
                                                            "properties": {
                                                                "merchantInitiatedTransaction": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "previousTransactionId": {
                                                                            "type": "string",
                                                                            "example": "123456789012345",
                                                                            "maxLength": 15,
                                                                            "description": "Previous Consumer Initiated Transaction Id."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                                "creator": {
                                                    "type": "string",
                                                    "example": "merchantName",
                                                    "description": "The creator of the token."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "https://api.cybersource.com/tms/v1/paymentinstruments/5910683634E6B035E0539399D30A4B46"
                                    }
                                },
                                "id": "5910683634E6B035E0539399D30A4B46",
                                "object": "paymentInstrument",
                                "state": "ACTIVE",
                                "card": {
                                    "expirationMonth": 11,
                                    "expirationYear": 2020,
                                    "type": "visa",
                                    "issueNumber": 1,
                                    "startMonth": 12,
                                    "startYear": 2017
                                },
                                "buyerInformation": {
                                    "companyTaxID": 12345,
                                    "currency": "USD"
                                },
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Smith",
                                    "company": "Cybersource",
                                    "address1": "1 My Apartment",
                                    "address2": "20 My Street",
                                    "locality": "San Francisco",
                                    "administrativeArea": "CA",
                                    "postalCode": 90210,
                                    "country": "US",
                                    "email": "ohn.smith@test.com",
                                    "phoneNumber": "+44 289044795"
                                },
                                "processingInformation": {
                                    "billPaymentProgramEnabled": true
                                },
                                "metadata": {
                                    "creator": "user"
                                },
                                "_embedded": {
                                    "instrumentIdentifier": {
                                        "_links": {
                                            "self": {
                                                "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/58FEBAEFD2EEFCE1E0539399D30A7500"
                                            }
                                        },
                                        "id": "58FEBAEFD2EEFCE1E0539399D30A7500",
                                        "object": "instrumentIdentifier",
                                        "state": "ACTIVE",
                                        "card": {
                                            "number": "424242XXXXXX4242"
                                        },
                                        "processingInformation": {
                                            "authorizationOptions": {
                                                "initiator": {
                                                    "merchantInitiatedTransaction": {
                                                        "previousTransactionId": 123456789012345
                                                    }
                                                }
                                            }
                                        },
                                        "metadata": {
                                            "creator": "user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. A required header value could be missing.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1PaymentInstruments400Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Missing Headers": {
                                "errors": [
                                    {
                                        "type": "missingHeaders",
                                        "message": "Missing header values."
                                    }
                                ]
                            },
                            "Payment Instrument cannot be linked to instrument identifier because it does not exist": {
                                "errors": [
                                    {
                                        "type": "instrumentIdentifierNotFound",
                                        "message": "Action cannot be performed. The `InstrumentIdentifier` is not found"
                                    }
                                ]
                            },
                            "Payment Instrument cannot be linked to instrument identifier because it has been deleted": {
                                "errors": [
                                    {
                                        "type": "instrumentIdentifierGone",
                                        "message": "Action cannot be performed. The `InstrumentIdentifier` is gone."
                                    }
                                ]
                            },
                            "Payment Instrument cannot be linked to instrument identifier due to a token type mismatch": {
                                "errors": [
                                    {
                                        "type": "invalidCombination",
                                        "message": "The combination is invalid.",
                                        "details": [
                                            {
                                                "name": "bankAccount"
                                            },
                                            {
                                                "name": "card",
                                                "location": "instrumentIdentifier"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "Payment Instrument cannot be created due to invalid combination of Instrument Identifier fields": {
                                "errors": [
                                    {
                                        "type": "invalidCombination",
                                        "message": "The combination is invalid.",
                                        "details": [
                                            {
                                                "name": "id",
                                                "location": "instrumentIdentifier"
                                            },
                                            {
                                                "name": "card",
                                                "location": "instrumentIdentifier"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. The profile might not have permission to perform the token operation.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1Forbidden403Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "forbidden",
                                        "message": "Request not permitted."
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Token Not Found. The `tokenid` may not exist or was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotFound404Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Token not found"
                                    }
                                ]
                            }
                        }
                    },
                    "410": {
                        "description": "Token Not Available. The token has been deleted.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotAvailable410Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notAvailable",
                                        "message": "Token not available."
                                    }
                                ]
                            }
                        }
                    },
                    "424": {
                        "description": "Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1FailedDependency424Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Profile not found"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "serverError",
                                        "message": "Internal server error"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "title": "tmsV1Error500Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Retrieve a Payment Instrument",
                "parameters": [
                    {
                        "name": "profile-id",
                        "in": "header",
                        "description": "The id of a profile containing user specific TMS configuration.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "v-c-merchant-id",
                        "in": "header",
                        "description": "CyberSource merchant id.",
                        "required": true,
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 32
                    },
                    {
                        "name": "v-c-correlation-id",
                        "in": "header",
                        "description": "The mandatory correlation id passed by upstream (calling) system.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "Client-Application",
                        "in": "header",
                        "description": "Client application name",
                        "required": false,
                        "pattern": "^[a-zA-Z0-9\\\\-_]{3,30}|$",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    {
                        "name": "tokenId",
                        "in": "path",
                        "description": "The TokenId of a Payment Instrument.",
                        "required": true,
                        "type": "string",
                        "minLength": 16,
                        "maxLength": 32
                    }
                ],
                "tags": [
                    "Payment Instrument"
                ],
                "operationId": "getPaymentInstrument",
                "x-devcenter-metaData": {
                    "categoryTag": "Token_Management"
                },
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "An existing Payment Instrument associated with the supplied `tokenId` has been returned.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1PaymentinstrumentsPatch200Response",
                            "type": "object",
                            "properties": {
                                "_links": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "ancestor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        },
                                        "successor": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "1234567890123456800",
                                    "description": "Unique identification number assigned by CyberSource to the submitted request."
                                },
                                "object": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "instrumentIdentifier",
                                    "description": "Describes type of token.",
                                    "enum": [
                                        "paymentInstrument"
                                    ]
                                },
                                "state": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "ACTIVE",
                                    "description": "Current state of the token.",
                                    "enum": [
                                        "ACTIVE",
                                        "CLOSED"
                                    ]
                                },
                                "bankAccount": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "checking",
                                                "savings",
                                                "corporate checking",
                                                "general ledger"
                                            ],
                                            "example": "savings",
                                            "description": "Checking account type. Possible values:\n  * C: checking\n  * S: savings (USD only)\n  * X: corporate checking (USD only)\n  * G: general ledger\n"
                                        }
                                    }
                                },
                                "card": {
                                    "type": "object",
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "expirationMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Two-digit month in which the credit card expires.\nFormat: `MM`\nPossible values: `01` through `12`\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. For more information about relaxed requirements, see the TMS REST API Developer Guide.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "expirationYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Four-digit year in which the credit card expires.\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n\n**FDC Nashville Global and FDMS South**\nYou can send in 2 digits or 4 digits. When you send in 2 digits, they must be the last 2 digits of the year.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See Relaxed Requirements for Address Data and Expiration Date page.\n\nImportant:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.'\n"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "visa",
                                                "mastercard",
                                                "american express",
                                                "discover",
                                                "diners club",
                                                "carte blanche",
                                                "jcb",
                                                "optima",
                                                "twinpay credit",
                                                "twinpay debit",
                                                "walmart",
                                                "enroute",
                                                "lowes consumer",
                                                "home depot consumer",
                                                "mbna",
                                                "dicks sportswear",
                                                "casual corner",
                                                "sears",
                                                "jal",
                                                "disney",
                                                "maestro uk domestic",
                                                "sams club consumer",
                                                "sams club business",
                                                "nicos",
                                                "bill me later",
                                                "bebe",
                                                "restoration hardware",
                                                "delta online",
                                                "solo",
                                                "visa electron",
                                                "dankort",
                                                "laser",
                                                "carte bleue",
                                                "carta si",
                                                "pinless debit",
                                                "encoded account",
                                                "uatp",
                                                "household",
                                                "maestro international",
                                                "ge money uk",
                                                "korean cards",
                                                "style",
                                                "jcrew",
                                                "payease china processing ewallet",
                                                "payease china processing bank transfer",
                                                "meijer private label",
                                                "hipercard",
                                                "aura",
                                                "redecard",
                                                "orico",
                                                "elo",
                                                "capital one private label",
                                                "synchrony private label",
                                                "china union pay",
                                                "costco private label",
                                                "mada",
                                                "falabella private label"
                                            ],
                                            "description": "Type of credit card. Possible values:\n  * Visa (001)\n  * Mastercard (002) - Eurocard\u2014European regional brand of Mastercard\n  * American Express (003)\n  * Discover (004)\n  * Diners Club (005)\n  * Carte Blanche (006)\n  * JCB (007)\n  * Optima (008)\n  * Twinpay Credit (011)\n  * Twinpay Debit (012)\n  * Walmart (013)\n  * EnRoute (014)\n  * Lowes consumer (015)\n  * Home Depot consumer (016)\n  * MBNA (017)\n  * Dicks Sportswear (018)\n  * Casual Corner (019)\n  * Sears (020)\n  * JAL (021)\n  * Disney (023)\n  * Maestro (024) - UK Domestic\n  * Sams Club consumer (025)\n  * Sams Club business (026)\n  * Nicos (027)\n  * Bill me later (028)\n  * Bebe (029)\n  * Restoration Hardware (030)\n  * Delta (031) \u2014 use this value only for Ingenico ePayments. For other processors, use 001 for all Visa card types.\n  * Solo (032)\n  * Visa Electron (033)\n  * Dankort (034)\n  * Laser (035)\n  * Carte Bleue (036) \u2014 formerly Cartes Bancaires\n  * Cartes Bancaires (036)\n  * Carta Si (037)\n  * pinless debit (038)\n  * encoded account (039)\n  * UATP (040)\n  * Household (041)\n  * Maestro (042) - International\n  * GE Money UK (043)\n  * Korean cards (044)\n  * Style (045)\n  * JCrew (046)\n  * PayEase China processing eWallet (047)\n  * PayEase China processing bank transfer (048)\n  * Meijer Private Label (049)\n  * Hipercard (050) \u2014 supported only by the Comercio Latino processor.\n  * Aura (051) \u2014 supported only by the Comercio Latino processor.\n  * Redecard (052)\n  * ORICO (053)\n  * Elo (054) \u2014 supported only by the Comercio Latino processor.\n  * Capital One Private Label (055)\n  * Synchrony Private Label (056)\n  * Costco Private Label (057)\n  * mada (060)\n  * China Union Pay (062)\n  * Falabella private label (063)\n"
                                        },
                                        "issueNumber": {
                                            "type": "string",
                                            "example": "01",
                                            "minLength": 1,
                                            "maxLength": 2,
                                            "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder."
                                        },
                                        "startMonth": {
                                            "type": "string",
                                            "format": "MM",
                                            "example": "12",
                                            "minLength": 2,
                                            "maxLength": 2,
                                            "description": "Month of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `MM`.\nPossible values: `01` through `12`.\n"
                                        },
                                        "startYear": {
                                            "type": "string",
                                            "format": "YYYY",
                                            "example": "2022",
                                            "minLength": 4,
                                            "maxLength": 4,
                                            "description": "Year of the start of the Maestro (UK Domestic) card validity period.\n\nFormat: `YYYY`.\nPossible values: `1900` through `2099`.\n"
                                        },
                                        "useAs": {
                                            "type": "string",
                                            "example": "pinless debit",
                                            "description": "Card Use As Field. Supported value of `pinless debit` only. Only for use with Pinless Debit tokens."
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "companyTaxID": {
                                            "type": "string",
                                            "example": "1234567890123456800",
                                            "maxLength": 9,
                                            "description": "Tax identifier for the customer\u2019s company.\n\n**Important**:\nContact your TeleCheck representative to find out whether this field is required or optional.\n"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "example": "USD",
                                            "minLength": 3,
                                            "maxLength": 3,
                                            "description": "Currency used by the customer. Accepts input in the ISO 4217 standard, stores as ISO 4217 Alpha."
                                        },
                                        "dateOBirth": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD|YYYYMMDD",
                                            "example": "1960-12-30",
                                            "minLength": 8,
                                            "maxLength": 10,
                                            "description": "Date of birth of the customer.\n\nFormat: `YYYY-MM-DD` or `YYYYMMDD`\n"
                                        },
                                        "personalIdentification": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1234567890",
                                                        "description": "Customer's identification number.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "driver license"
                                                        ],
                                                        "example": "driver license",
                                                        "description": "Type of personal identification.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                    },
                                                    "issuedBy": {
                                                        "type": "object",
                                                        "properties": {
                                                            "administrativeArea": {
                                                                "type": "string",
                                                                "example": "CA",
                                                                "description": "State or province in which the customer\u2019s driver\u2019s license was issued. Use the State, Province, and Territory Codes for the United States and Canada.\n\n**Important**:\nContact your TeleCheck representative to learn whether this field is required or optional.\n"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "billTo": {
                                    "type": "object",
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "example": "John",
                                            "maxLength": 60,
                                            "description": "Customer\u2019s first name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "Smith",
                                            "maxLength": 60,
                                            "description": "Customer\u2019s last name. For a credit card transaction, this name must match the name on the card.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "company": {
                                            "type": "string",
                                            "example": "CyberSource",
                                            "maxLength": 60,
                                            "description": "Name of the customer\u2019s company.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "address1": {
                                            "type": "string",
                                            "example": "12 Main Street",
                                            "maxLength": 60,
                                            "description": "First line of the billing street address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "address2": {
                                            "type": "string",
                                            "example": "20 My Street",
                                            "maxLength": 60,
                                            "description": "Additional address information."
                                        },
                                        "locality": {
                                            "type": "string",
                                            "example": "Foster City",
                                            "maxLength": 50,
                                            "description": "City of the billing address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "administrativeArea": {
                                            "type": "string",
                                            "example": "CA",
                                            "maxLength": 20,
                                            "description": "State or province of the billing address. For an address in the U.S. or Canada, use the State, Province, and Territory Codes for the United States and Canada.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "postalCode": {
                                            "type": "string",
                                            "example": "90200",
                                            "maxLength": 10,
                                            "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n**Example** 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space]\n[numeric][alpha][numeric]\nExample A1B 2C3\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important**:\nIt is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "US",
                                            "minLength": 2,
                                            "maxLength": 3,
                                            "description": "Country of the billing address. Accepts input in the ISO 3166-1 standard, stores as ISO 3166-1-Alpha-2.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john.smith@example.com",
                                            "maxLength": 320,
                                            "description": "Customer\u2019s email address.\n\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See the TMS REST Developer Guide for more information about relaxed address requirements.\n\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "example": "555123456",
                                            "minLength": 6,
                                            "maxLength": 32,
                                            "description": "Customer phone number. When you create a customer profile, the requirements depend on the payment method:\n  * Credit cards \u2014 optional.\n  * Electronic checks \u2014 contact your payment processor representative to find out if this field is required or optional.\n  * PINless debits \u2014 optional.\n"
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "billPaymentProgramEnabled": {
                                            "type": "boolean",
                                            "example": true,
                                            "default": false,
                                            "description": "Indicates that the payments for this customer profile are for the Bill Payment program. Possible values:\n  * false: Not a Visa Bill Payment.\n  * true: Visa Bill Payment.\n"
                                        },
                                        "bankTransferOptions": {
                                            "type": "object",
                                            "properties": {
                                                "SECCode": {
                                                    "type": "string",
                                                    "enum": [
                                                        "CCD",
                                                        "PPD",
                                                        "TEL",
                                                        "WEB"
                                                    ],
                                                    "example": "WEB",
                                                    "description": "**Important** This field is required if your processor is TeleCheck.\n\nCode that specifies the authorization method for the transaction. Possible values:\n\n- **CCD**: corporate cash disbursement. Charge or credit against a business checking account. You can use one-time or recurring CCD transactions to transfer funds to or from a corporate entity. A standing authorization is required for recurring transactions.\n- **PPD**: prearranged payment and deposit entry. Charge or credit against a personal checking or savings account. You can originate a PPD entry only when the payment and deposit terms between you and the customer are prearranged. A written authorization from the customer is required for one-time transactions and a written standing authorization is required for recurring transactions.\n- **TEL**: telephone-initiated entry. One-time charge against a personal checking or savings account. You can originate a TEL entry only when there is a business relationship between you and the customer or when the customer initiates a telephone call to you. For a TEL entry, you must obtain a payment authorization from the customer over the telephone. There is no recurring billing option for TEL.\n- **WEB**: internet-initiated entry\u2014charge against a personal checking or savings account. You can originate a one-time or recurring WEB entry when the customer initiates the transaction over the Internet. For a WEB entry, you must obtain payment authorization from the customer over the Internet.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "alternateName": {
                                                    "type": "string",
                                                    "example": "Branch Name",
                                                    "description": "Alternate information for your business. This API field overrides the company entry description value in your CyberSource account."
                                                }
                                            }
                                        }
                                    }
                                },
                                "metaData": {
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                        "creator": {
                                            "type": "string",
                                            "example": "merchantName",
                                            "description": "The creator of the token."
                                        }
                                    }
                                },
                                "instrumentIdentifier": {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                },
                                                "ancestor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                },
                                                "successor": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "example": "https://api.cybersource.com/tms/v1/instrumentidentifiers/1234567890123456789"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "object": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "instrumentIdentifier",
                                            "description": "Describes type of token.",
                                            "enum": [
                                                "instrumentIdentifier"
                                            ]
                                        },
                                        "state": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "ACTIVE",
                                            "description": "Current state of the token.",
                                            "enum": [
                                                "ACTIVE",
                                                "CLOSED"
                                            ]
                                        },
                                        "id": {
                                            "type": "string",
                                            "example": "1234567890123456789",
                                            "minLength": 16,
                                            "maxLength": 32,
                                            "description": "The ID of the existing instrument identifier to be linked to the newly created payment instrument."
                                        },
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "1234567890987654",
                                                    "minLength": 12,
                                                    "maxLength": 19,
                                                    "description": "Customer\u2019s credit card number."
                                                }
                                            }
                                        },
                                        "bankAccount": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "1234567890123456800",
                                                    "minLength": 1,
                                                    "maxLength": 19,
                                                    "description": "Checking account number."
                                                },
                                                "routingNumber": {
                                                    "type": "string",
                                                    "example": "123456789",
                                                    "minLength": 1,
                                                    "maxLength": 9,
                                                    "description": "Routing number."
                                                }
                                            }
                                        },
                                        "processingInformation": {
                                            "type": "object",
                                            "properties": {
                                                "authorizationOptions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "initiator": {
                                                            "type": "object",
                                                            "properties": {
                                                                "merchantInitiatedTransaction": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "previousTransactionId": {
                                                                            "type": "string",
                                                                            "example": "123456789012345",
                                                                            "maxLength": 15,
                                                                            "description": "Previous Consumer Initiated Transaction Id."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                                "creator": {
                                                    "type": "string",
                                                    "example": "merchantName",
                                                    "description": "The creator of the token."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "https://api.cybersource.com/tms/v1/paymentinstruments/5910683634E6B035E0539399D30A4B46"
                                    }
                                },
                                "id": "5910683634E6B035E0539399D30A4B46",
                                "object": "paymentInstrument",
                                "state": "ACTIVE",
                                "card": {
                                    "expirationMonth": 11,
                                    "expirationYear": 2020,
                                    "type": "visa",
                                    "issueNumber": 1,
                                    "startMonth": 12,
                                    "startYear": 2017
                                },
                                "buyerInformation": {
                                    "companyTaxID": 12345,
                                    "currency": "USD"
                                },
                                "billTo": {
                                    "firstName": "John",
                                    "lastName": "Smith",
                                    "company": "Cybersource",
                                    "address1": "1 My Apartment",
                                    "address2": "20 My Street",
                                    "locality": "San Francisco",
                                    "administrativeArea": "CA",
                                    "postalCode": 90210,
                                    "country": "US",
                                    "email": "ohn.smith@test.com",
                                    "phoneNumber": "+44 289044795"
                                },
                                "processingInformation": {
                                    "billPaymentProgramEnabled": true
                                },
                                "metadata": {
                                    "creator": "user"
                                },
                                "_embedded": {
                                    "instrumentIdentifier": {
                                        "_links": {
                                            "self": {
                                                "href": "https://api.cybersource.com/tms/v1/instrumentidentifiers/58FEBAEFD2EEFCE1E0539399D30A7500"
                                            }
                                        },
                                        "id": "58FEBAEFD2EEFCE1E0539399D30A7500",
                                        "object": "instrumentIdentifier",
                                        "state": "ACTIVE",
                                        "card": {
                                            "number": "424242XXXXXX4242"
                                        },
                                        "processingInformation": {
                                            "authorizationOptions": {
                                                "initiator": {
                                                    "merchantInitiatedTransaction": {
                                                        "previousTransactionId": 123456789012345
                                                    }
                                                }
                                            }
                                        },
                                        "metadata": {
                                            "creator": "user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. A required header value could be missing.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1BadRequest400Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Missing Headers": {
                                "errors": [
                                    {
                                        "type": "missingHeaders",
                                        "message": "Missing header values."
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. The profile might not have permission to perform the token operation.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1Forbidden403Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "forbidden",
                                        "message": "Request not permitted."
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Token Not Found. The `tokenid` may not exist or was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotFound404Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Token not found"
                                    }
                                ]
                            }
                        }
                    },
                    "410": {
                        "description": "Token Not Available. The token has been deleted.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotAvailable410Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notAvailable",
                                        "message": "Token not available."
                                    }
                                ]
                            }
                        }
                    },
                    "424": {
                        "description": "Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1FailedDependency424Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Profile not found"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "serverError",
                                        "message": "Internal server error"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "title": "tmsV1Error500Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a Payment Instrument",
                "tags": [
                    "Payment Instrument"
                ],
                "parameters": [
                    {
                        "name": "profile-id",
                        "in": "header",
                        "description": "The id of a profile containing user specific TMS configuration.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "v-c-merchant-id",
                        "in": "header",
                        "description": "CyberSource merchant id.",
                        "required": true,
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 32
                    },
                    {
                        "name": "v-c-correlation-id",
                        "in": "header",
                        "description": "The mandatory correlation id passed by upstream (calling) system.",
                        "required": true,
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36
                    },
                    {
                        "name": "Client-Application",
                        "in": "header",
                        "description": "Client application name",
                        "required": false,
                        "pattern": "^[a-zA-Z0-9\\\\-_]{3,30}|$",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    {
                        "name": "tokenId",
                        "in": "path",
                        "description": "The TokenId of a Payment Instrument.",
                        "required": true,
                        "type": "string",
                        "minLength": 16,
                        "maxLength": 32
                    }
                ],
                "operationId": "deletePaymentInstrument",
                "x-devcenter-metaData": {
                    "categoryTag": "Token_Management"
                },
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "204": {
                        "description": "An existing Payment Instrument associated with the supplied `tokenId` has been deleted.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. The profile might not have permission to perform the token operation.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1Forbidden403Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "forbidden",
                                        "message": "Request not permitted."
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Token Not Found. The `tokenid` may not exist or was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotFound404Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Token not found"
                                    }
                                ]
                            }
                        }
                    },
                    "410": {
                        "description": "Token Not Available. The token has been deleted.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique ID associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1TokenNotAvailable410Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notAvailable",
                                        "message": "Token not available."
                                    }
                                ]
                            }
                        }
                    },
                    "424": {
                        "description": "Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "title": "tmsV1FailedDependency424Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "notFound",
                                        "message": "Profile not found"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "headers": {
                            "uniqueTransactionID": {
                                "description": "A globally unique id associated with your request.",
                                "type": "string"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "type": "serverError",
                                        "message": "Internal server error"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "title": "tmsV1Error500Response",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The detailed message related to the type stated above."
                                    },
                                    "details": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the field that threw the error."
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "The location of the field that threw the error."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tss/v2/transactions/{id}": {
            "get": {
                "summary": "Retrieve a Transaction",
                "description": "Include the Request ID in the GET request to retrieve the transaction details.",
                "tags": [
                    "TransactionDetails"
                ],
                "operationId": "getTransaction",
                "x-devcenter-metaData": {
                    "categoryTag": "Transaction_Details"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Request ID.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "title": "tssV2TransactionsGet200Response",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                },
                                "rootId": {
                                    "type": "string",
                                    "maxLength": 26,
                                    "description": "Payment Request Id"
                                },
                                "reconciliationId": {
                                    "type": "string",
                                    "maxLength": 60,
                                    "description": "The reconciliation id for the submitted transaction. This value is not returned for all processors.\n"
                                },
                                "merchantId": {
                                    "type": "string",
                                    "description": "The description for this field is not available."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "applicationInformation": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The status of the submitted transaction."
                                        },
                                        "reasonCode": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "rCode": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "rFlag": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "applications": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "reasonCode": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "rCode": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "rFlag": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "reconciliationId": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "rMessage": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "returnCode": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "buyerInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantCustomerId": {
                                            "type": "string",
                                            "maxLength": 100,
                                            "description": "Your identifier for the customer.\n\nWhen a subscription or customer profile is being created, the maximum length for this field for most processors is 30. Otherwise, the maximum length is 100.\n\n**Comercio Latino**\\\nFor recurring payments in Mexico, the value is the customer\u2019s contract number.\nNote Before you request the authorization, you must inform the issuer of the customer contract numbers that will be used for recurring transactions.\n\n**Litle**\\\nFor a follow-on credit with Litle, CyberSource checks the following locations, in the order\ngiven, for a customer account ID value and uses the first value it finds:\n1. `customer_account_id` value in the follow-on credit request\n2. Customer account ID value that was used for the capture that is being credited\n3. Customer account ID value that was used for the original authorization\nIf a customer account ID value cannot be found in any of these locations, then no value is used.\n\nFor processor-specific information, see the customer_account_id field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                        },
                                        "hashedPassword": {
                                            "type": "string",
                                            "maxLength": 100,
                                            "description": "The description for this field is not available.\n"
                                        }
                                    }
                                },
                                "clientReferenceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                        },
                                        "applicationVersion": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "applicationName": {
                                            "type": "string",
                                            "description": "The application name of client which is used to submit the request."
                                        },
                                        "applicationUser": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "comments": {
                                            "type": "string",
                                            "maxLength": 255,
                                            "description": "Brief description of the order or any comment you wish to add to the order."
                                        }
                                    }
                                },
                                "consumerAuthenticationInformation": {
                                    "type": "object",
                                    "properties": {
                                        "eciRaw": {
                                            "type": "string",
                                            "maxLength": 2,
                                            "description": "Raw electronic commerce indicator (ECI). For the description and requirements, see \"Payer Authentication,\" page 180."
                                        },
                                        "cavv": {
                                            "type": "string",
                                            "maxLength": 40,
                                            "description": "Cardholder authentication verification value (CAVV)."
                                        },
                                        "xid": {
                                            "type": "string",
                                            "maxLength": 40,
                                            "description": "Transaction identifier. For the description and requirements, see \"Payer Authentication,\" page 180."
                                        },
                                        "transactionId": {
                                            "type": "string",
                                            "description": "Payer auth Transaction identifier."
                                        }
                                    }
                                },
                                "deviceInformation": {
                                    "type": "object",
                                    "properties": {
                                        "ipAddress": {
                                            "type": "string",
                                            "maxLength": 15,
                                            "description": "Customer\u2019s IP address, such as 10.1.27.63, reported by your Web server via socket information.\n"
                                        },
                                        "hostName": {
                                            "type": "string",
                                            "maxLength": 60,
                                            "description": "Host name reported by the customer\u2019s browser to your Web server identified via the HTTP header."
                                        },
                                        "cookiesAccepted": {
                                            "type": "string",
                                            "description": "Boolean that indicates whether the customer\u2019s browser accepts cookies. This field can contain one of the following values:\n  - `yes`: The customer\u2019s browser accepts cookies.\n  - `no`: The customer\u2019s browser does not accept cookies.\n"
                                        }
                                    }
                                },
                                "errorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                                    },
                                                    "reason": {
                                                        "type": "string",
                                                        "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                        "enum": [
                                                            "MISSING_FIELD",
                                                            "INVALID_DATA"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "installmentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "numberOfInstallments": {
                                            "type": "string",
                                            "description": "Number of Installments."
                                        }
                                    }
                                },
                                "fraudMarkingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        }
                                    }
                                },
                                "merchantDefinedInformation": {
                                    "type": "array",
                                    "description": "The description for this field is not available.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "maxLength": 50,
                                                "description": "The name you assign for your merchant-defined data field.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].key and\nmerchantDefinedInformation[1].key for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n"
                                            },
                                            "value": {
                                                "type": "string",
                                                "maxLength": 255,
                                                "description": "The value you assign for your merchant-defined data field.\n\n**Warning** Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields. Personally identifying information includes, but is not\nlimited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV,\nCVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].value and\nmerchantDefinedInformation[1].value for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n\nFor installment payments with Mastercard in Brazil:\n- The value for merchantDefinedInformation[0].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 25-44\n  - Field: Reference Field 2\n- The value for merchantDefinedInformation[1].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 45-64\n  - Field: Reference Field 3\n"
                                            }
                                        }
                                    }
                                },
                                "merchantInformation": {
                                    "type": "object",
                                    "properties": {
                                        "merchantDescriptor": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "For the descriptions, used-by information, data types, and lengths for these fields, see Merchant Descriptors\nin [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\nFor Payouts:\n* Paymentech (22)\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "orderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "billTo": {
                                            "type": "object",
                                            "properties": {
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s first name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**:\\\nThis field may be sent only for FDC Compass.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_firstname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s last name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\n**For Payouts** : This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the customer_lastname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "middelName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s middle name.\n"
                                                },
                                                "nameSuffix": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Customer\u2019s name suffix.\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the billing street address as it appears on the credit card issuer\u2019s records.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_address1 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Additional address information.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**Atos**\nThis field must not contain colons (:).\n\n**Chase Paymentech Solutions, FDC Compass, and TSYS Acquiring Solutions**\nThis value is used for AVS.\n\n**CyberSource through VisaNet**\n**Important** When you populate billing street address 1 and billing street address 2, CyberSource through VisaNet concatenates the two values. If the concatenated value exceeds 40 characters, CyberSource through VisaNet truncates the value at 40 characters before sending it to Visa and the issuing bank. Truncating this value affects AVS results and therefore might also affect risk decisions and chargebacks.\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_address2 field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the billing address.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**: This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the bill_city field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "State or province of the billing address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_state field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the billing address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**American Express Direct**\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the remaining value is longer than nine characters, truncates the value starting from the right side.\n\n**Atos**\nThis field must not contain colons (:).\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the bill_zip field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "company": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "maxLength": 60,
                                                            "description": "Name of the customer\u2019s company.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nFor processor-specific information, see the company_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                        },
                                                        "address1": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "First line in the street address of the company purchasing the product."
                                                        },
                                                        "address2": {
                                                            "type": "string",
                                                            "maxLength": 40,
                                                            "description": "Additional address information for the company purchasing the product."
                                                        },
                                                        "locality": {
                                                            "type": "string",
                                                            "maxLength": 30,
                                                            "description": "City in the address of the company purchasing the product."
                                                        },
                                                        "administrativeArea": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "State or province in the address of the company purchasing the product. Use the State, Province, and Territory\nCodes for the United States and Canada.\n"
                                                        },
                                                        "postalCode": {
                                                            "type": "string",
                                                            "maxLength": 10,
                                                            "description": "Postal code in the address of the company purchasing the product. The postal code must consist of 5 to 9 digits.\n\nWhen the company country is the U.S., the 9-digit postal code must follow this format:\n**[5 digits][dash][4 digits]**\nExample 12345-6789\n\nWhen the company country is Canada, the 6-digit postal code must follow this format:\n**[alpha][numeric][alpha][space][numeric][alpha][numeric]**\nExample A1B 2C3\n"
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "maxLength": 2,
                                                            "description": "Country in the address of the company purchasing the product. Use the two-character ISO Standard Country Codes.\n"
                                                        }
                                                    }
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 255,
                                                    "description": "Customer's email address, including the full domain name.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_email field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Country of the billing address. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_country field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Title.\n"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Customer\u2019s phone number.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nCyberSource recommends that you include the country code when the order is from outside the U.S.\n\nFor processor-specific information, see the customer_phone field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n"
                                                }
                                            }
                                        },
                                        "shipTo": {
                                            "type": "object",
                                            "properties": {
                                                "firstName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First name of the recipient.\n\n**Processor specific maximum length**\n\n- Litle: 25\n- All other processors: 60\n"
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Last name of the recipient.\n\n**Processor-specific maximum length**\n\n- Litle: 25\n- All other processors: 60\n"
                                                },
                                                "address1": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "First line of the shipping address."
                                                },
                                                "address2": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Second line of the shipping address."
                                                },
                                                "locality": {
                                                    "type": "string",
                                                    "maxLength": 50,
                                                    "description": "City of the shipping address."
                                                },
                                                "administrativeArea": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "State or province of the billing address. Use the State, Province, and Territory Codes for the United States\nand Canada.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_state field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Postal code for the shipping address. The postal code must consist of 5 to 9 digits.\n\nWhen the billing country is the U.S., the 9-digit postal code must follow this format:\n[5 digits][dash][4 digits]\n\nExample 12345-6789\n\nWhen the billing country is Canada, the 6-digit postal code must follow this format:\n[alpha][numeric][alpha][space][numeric][alpha][numeric]\n\nExample A1B 2C3\n\n**American Express Direct**\\\nBefore sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the\nremaining value is longer than nine characters, truncates the value starting from the right side.\n"
                                                },
                                                "company": {
                                                    "type": "string",
                                                    "maxLength": 60,
                                                    "description": "Name of the customer\u2019s company.\n\nFor processor-specific information, see the company_name field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "description": "Country of the shipping address. Use the two-character ISO Standard Country Codes.",
                                                    "maxLength": 2
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Phone number associated with the shipping address."
                                                }
                                            }
                                        },
                                        "lineItems": {
                                            "type": "array",
                                            "description": "Transaction Line Item data.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "productCode": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Type of product. This value is used to determine the category that the product is in: electronic, handling,\nphysical, service, or shipping. The default value is **default**.\n\nFor a payment, when you set this field to a value other than default or any of the values related to\nshipping and handling, below fields _quantity_, _productName_, and _productSKU_ are required.\n"
                                                    },
                                                    "productName": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "For PAYMENT and CAPTURE API, this field is required when above _productCode_ is not **default** or one of the\nvalues related to shipping and handling.\n"
                                                    },
                                                    "productSku": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Identification code for the product. For PAYMENT and CAPTURE API, this field is required when above\n_productCode_ is not **default** or one of the values related to shipping and/or handling.\n"
                                                    },
                                                    "taxAmount": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Total tax to apply to the product. This value cannot be negative. The tax amount and the offer amount must\nbe in the same currency. The tax amount field is additive.\n\nThe following example uses a two-exponent currency such as USD:\n\n1. You include each line item in your request.\n..- 1st line item has amount=10.00, quantity=1, and taxAmount=0.80\n..- 2nd line item has amount=20.00, quantity=1, and taxAmount=1.60\n2. The total amount authorized will be 32.40, not 30.00 with 2.40 of tax included.\n\nThis field is frequently used for Level II and Level III transactions.\n"
                                                    },
                                                    "quantity": {
                                                        "type": "number",
                                                        "minimum": 1,
                                                        "maximum": 9999999999,
                                                        "description": "For a payment or capture, this field is required when _productCode_ is not **default** or one of the values\nrelated to shipping and handling.\n",
                                                        "default": 1
                                                    },
                                                    "unitPrice": {
                                                        "type": "string",
                                                        "maxLength": 15,
                                                        "description": "Per-item price of the product. This value cannot be negative. You can include a decimal point (.), but you\ncannot include any other special characters. CyberSource truncates the amount to the correct number of decimal\nplaces.\n\nFor processor-specific information, see the amount field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                    },
                                                    "fulfillmentType": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    }
                                                }
                                            }
                                        },
                                        "amountDetails": {
                                            "type": "object",
                                            "properties": {
                                                "totalAmount": {
                                                    "type": "string",
                                                    "maxLength": 19,
                                                    "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                },
                                                "taxAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "Total tax amount for all the items in the order.\n\nFor processor-specific information, see the total_tax_amount field in\n[Level II and Level III Processing Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/Level_2_3_SCMP_API/html)\n"
                                                },
                                                "authorizedAmount": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Amount that was authorized.\n"
                                                },
                                                "settlementAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "This is a multicurrency field. It contains the transaction amount (field 4), converted to the Currency used to bill the cardholder\u2019s account.\n"
                                                },
                                                "settlementCurrency": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "This is a multicurrency-only field. It contains a 3-digit numeric code that identifies the currency used by the issuer to bill the cardholder's account.\n"
                                                }
                                            }
                                        },
                                        "shippingDetails": {
                                            "type": "object",
                                            "properties": {
                                                "giftWrap": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Boolean that indicates whether the customer requested gift wrapping for this\npurchase. This field can contain one of the following\nvalues:\n\n- `yes`: The customer requested gift wrapping.\n- `no`: The customer did not request gift wrapping.\n"
                                                },
                                                "shippingMethod": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Shipping method for the product. Possible values:\n\n - `lowcost`: Lowest-cost service\n - `sameday`: Courier or same-day service\n - `oneday`: Next-day or overnight service\n - `twoday`: Two-day service\n - `threeday`: Three-day service\n - `pickup`: Store pick-up\n - `other`: Other shipping method\n - `none`: No shipping method because product is a service or subscription\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "paymentInformation": {
                                    "type": "object",
                                    "properties": {
                                        "paymentType": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The name of a payment method. This is required for non-credit card payment.\n\nExamples: `SEARS`, `JCREW`, `PAYPAL`, `IDEAL`, `EPS` ...etc.\n\nPlease contact CyberSource Customer Support to enable the payment method of your choice and the value you should\nsend in your payment request for this field.\n"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "The type of payment method. This is required for non-credit card payment.\n\nPossible values:\n - BANK_TRANSFER\n - CARD (Default)\n - EWALLET\n - DIGITAL\n - DIRECT_DEBIT\n - INVOICE\n - PUSH_PAYMENT\n - CARRIER_BILLING\n - CASH\n - CHECK\n - CRYPTOGRAPHIC\n\nPlease contact CyberSource Customer Support to enable the payment method of your choice and the value you should\nsend in your payment request for this field.\n"
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "This is an optional field.\n\nPlease contact CyberSource Customer Support to enable the payment method of your choice and the value you should\nsend in your payment request for this field.\n"
                                                },
                                                "fundingSource": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                },
                                                "fundingSourceAffiliation": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                },
                                                "credential": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                }
                                            }
                                        },
                                        "customer": {
                                            "type": "object",
                                            "properties": {
                                                "customerId": {
                                                    "type": "string",
                                                    "description": "Unique identifier for the customer's card and billing information.\n\nWhen you use Payment Tokenization or Recurring Billing and you include this value in\nyour request, many of the fields that are normally required for an authorization or credit\nbecome optional.\n\n**NOTE** When you use Payment Tokenization or Recurring Billing, the value for the Customer ID is actually the Cybersource payment token for a customer. This token stores information such as the consumer\u2019s card number so it can be applied towards bill payments, recurring payments, or one-time payments. By using this token in a payment API request, the merchant doesn't need to pass in data such as the card number or expiration date in the request itself.\n\nSee \"Payment Tokenization,\" page 222, and \"Recurring Billing,\" page 225.\n"
                                                }
                                            }
                                        },
                                        "card": {
                                            "type": "object",
                                            "properties": {
                                                "suffix": {
                                                    "type": "string",
                                                    "description": "Last four digits of the cardholder\u2019s account number. This field is returned only for tokenized transactions.\nYou can use this value on the receipt that you give to the cardholder.\n"
                                                },
                                                "prefix": {
                                                    "type": "string",
                                                    "maxLength": 6,
                                                    "description": "The description for this field is not available."
                                                },
                                                "expirationMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Two-digit month in which the payment card expires.\n\nFormat: `MM`.\n\nValid values: `01` through `12`.\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`01` through `12`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `12`.\n\nFor processor-specific information, see the `customer_cc_expmo` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "expirationYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Four-digit year in which the credit card expires.\n\nFormat: `YYYY`.\n\n\n**Barclays and Streamline**\\\nFor Maestro (UK Domestic) and Maestro (International) cards on Barclays and Streamline, this must be a valid value (`1900` through `3000`) but is not required to be a valid expiration date. In other words, an expiration date that is in the past does not cause CyberSource to reject your request. However, an invalid expiration date might cause the issuer to reject your request.\n\n**FDC Nashville Global and FDMS South**\\\nYou can send in 2 digits or 4 digits. If you send in 2 digits, they must be the last 2 digits of the year.\n\n**Encoded Account Numbers**\\\nFor encoded account numbers (_type_=039), if there is no expiration date on the card, use `2021`.\n\nFor processor-specific information, see the `customer_cc_expyr` field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                },
                                                "startMonth": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Month of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: MM`. Possible values: 01 through 12.\n\n**Note** The start date is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "startYear": {
                                                    "type": "string",
                                                    "maxLength": 4,
                                                    "description": "Year of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: YYYY`.\n\n**Note** The start date is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "issueNumber": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Number of times a Maestro (UK Domestic) card has been issued to the account holder. The card might or might not have an issue number. The number can consist of one or two digits, and the first digit might be a zero. When you include this value in your request, include exactly what is printed on the card. A value of 2 is different than a value of 02. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card.\n\n**Note** The issue number is not required for Maestro (UK Domestic) transactions.\n"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                },
                                                "accountEncoderId": {
                                                    "type": "string",
                                                    "maxLength": 3,
                                                    "description": "Identifier for the issuing bank that provided the customer\u2019s encoded account number. Contact your processor for the bank\u2019s ID.\n"
                                                },
                                                "useAs": {
                                                    "type": "string",
                                                    "maxLength": 20,
                                                    "description": "Flag that specifies the type of account associated with the card. The cardholder provides this information\nduring the payment process.\n\n**Cielo** and **Comercio Latino**\n\nPossible values:\n\n - CREDIT: Credit card\n - DEBIT: Debit card\n\nThis field is required for:\n - Debit transactions on Cielo and Comercio Latino.\n - Transactions with Brazilian-issued cards on CyberSource through VisaNet.\n"
                                                }
                                            }
                                        },
                                        "invoice": {
                                            "type": "object",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "description": "Invoice Number."
                                                },
                                                "barcodeNumber": {
                                                    "type": "string",
                                                    "description": "Barcode Number."
                                                },
                                                "expirationDate": {
                                                    "type": "string",
                                                    "description": "Expiration Date."
                                                }
                                            }
                                        },
                                        "bank": {
                                            "type": "object",
                                            "properties": {
                                                "routingNumber": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                },
                                                "branchCode": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                },
                                                "swiftCode": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                },
                                                "bankCode": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                },
                                                "iban": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                },
                                                "account": {
                                                    "type": "object",
                                                    "properties": {
                                                        "suffix": {
                                                            "type": "string",
                                                            "description": "The description for this field is not available."
                                                        },
                                                        "prefix": {
                                                            "type": "string",
                                                            "description": "The description for this field is not available."
                                                        },
                                                        "checkNumber": {
                                                            "type": "string",
                                                            "maxLength": 8,
                                                            "description": "Check number.\n\nChase Paymentech Solutions - Optional.\nCyberSource ACH Service - Not used.\nRBS WorldPay Atlanta - Optional on debits. Required on credits.\nTeleCheck - Strongly recommended on debit requests. Optional on credits.\n"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "maxLength": 1,
                                                            "description": "Account type.\n\nPossible values:\n - **C**: Checking.\n - **G**: General ledger. This value is supported only on Wells Fargo ACH.\n - **S**: Savings (U.S. dollars only).\n - **X**: Corporate checking (U.S. dollars only).\n"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": "The description for this field is not available."
                                                        },
                                                        "checkDigit": {
                                                            "type": "string",
                                                            "description": "The description for this field is not available."
                                                        },
                                                        "encoderId": {
                                                            "type": "string",
                                                            "maxLength": 3,
                                                            "description": "Identifier for the bank that provided the customer\u2019s encoded account number.\n\nTo obtain the bank identifier, contact your processor. See \"Encoded Account Numbers,\" page 39.\n"
                                                        }
                                                    }
                                                },
                                                "mandate": {
                                                    "type": "object",
                                                    "properties": {
                                                        "referenceNumber": {
                                                            "type": "string",
                                                            "description": "The description for this field is not available."
                                                        },
                                                        "recurringType": {
                                                            "type": "string",
                                                            "description": "The description for this field is not available."
                                                        },
                                                        "id": {
                                                            "type": "string",
                                                            "description": "The description for this field is not available."
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "accountFeatures": {
                                            "type": "object",
                                            "properties": {
                                                "balanceAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "Remaining balance on the account.\n"
                                                },
                                                "previousBalanceAmount": {
                                                    "type": "string",
                                                    "maxLength": 12,
                                                    "description": "Remaining balance on the account.\n"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "maxLength": 5,
                                                    "description": "Currency of the remaining balance on the account. For the possible values, see the ISO Standard Currency Codes.\n"
                                                }
                                            }
                                        }
                                    }
                                },
                                "processingInformation": {
                                    "type": "object",
                                    "properties": {
                                        "paymentSolution": {
                                            "type": "string",
                                            "maxLength": 12,
                                            "description": "Type of digital payment solution for the transaction. Possible Values:\n\n - **visacheckout**: Visa Checkout. This value is required for Visa Checkout transactions. See Visa Checkout Using the SCMP API.\n - **005**: Masterpass. This value is required for Masterpass transactions on OmniPay Direct. See \"Masterpass,\" page 153.\n"
                                        },
                                        "commerceIndicator": {
                                            "type": "string",
                                            "maxLength": 20,
                                            "description": "Type of transaction. Some payment card companies use this information when determining discount rates. When you\nomit this field for **Ingenico ePayments**, the processor uses the default transaction type they have on file\nfor you instead of the default value listed here.\n"
                                        },
                                        "businessApplicationId": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "authorizationOptions": {
                                            "type": "object",
                                            "properties": {
                                                "authType": {
                                                    "type": "string",
                                                    "maxLength": 15,
                                                    "description": "Authorization type.\n\nPossible values:\n\n - **AUTOCAPTURE**: automatic capture.\n - **STANDARDCAPTURE**: standard capture.\n - **VERBAL**: forced capture. Include it in the payment request for a forced capture. Include it in the capture request for a verbal payment.\n\n**Asia, Middle East, and Africa Gateway; Cielo; Comercio Latino; and CyberSource Latin American Processing**\\\nSet this field to _AUTOCAPTURE_ and include it in a bundled request to indicate that you are requesting an automatic capture. If your account is configured to enable automatic captures, set this field to STANDARDCAPTURE and include it in a standard authorization or bundled request to indicate that you are overriding an automatic capture. For more information, see \"Automatic Captures,\" page 33.\n\n**Forced Capture**\\\nSet this field to _VERBAL_ and include it in the authorization request to indicate that you are performing a forced capture; therefore, you receive the authorization code outside the CyberSource system. For more information, see \"Forced Captures,\" page 123.\n\n**Verbal Authorization**\\\nSet this field to _VERBAL_ and include it in the capture request to indicate that the request is for a verbal authorization. For more information, see \"Verbal Authorizations,\" page 84.\n\nFor processor-specific information, see the auth_type field in [Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                }
                                            }
                                        },
                                        "bankTransferOptions": {
                                            "type": "object",
                                            "properties": {
                                                "secCode": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                }
                                            }
                                        }
                                    }
                                },
                                "processorInformation": {
                                    "type": "object",
                                    "properties": {
                                        "processor": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 30,
                                                    "description": "Name of the Processor.\n"
                                                }
                                            }
                                        },
                                        "transactionId": {
                                            "type": "string",
                                            "maxLength": 50,
                                            "description": "Network transaction identifier (TID). You can use this value to identify a specific transaction when you are\ndiscussing the transaction with your processor. Not all processors provide this value.\n"
                                        },
                                        "networkTransactionId": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "responseId": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "providerTransactionId": {
                                            "type": "string",
                                            "description": "The description for this field is not available."
                                        },
                                        "approvalCode": {
                                            "type": "string",
                                            "description": "Authorization code. Returned only when the processor returns this value.\n"
                                        },
                                        "responseCode": {
                                            "type": "string",
                                            "maxLength": 10,
                                            "description": "For most processors, this is the error message sent directly from the bank. Returned only when the processor\nreturns this value.\n\nImportant Do not use this field to evaluate the result of the authorization.\n"
                                        },
                                        "avs": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "description": "AVS result code.\n"
                                                },
                                                "codeRaw": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "AVS result code sent directly from the processor. Returned only when the processor returns this value.\nImportant Do not use this field to evaluate the result of AVS. Use for debugging purposes only.\n"
                                                }
                                            }
                                        },
                                        "cardVerification": {
                                            "type": "object",
                                            "properties": {
                                                "resultCode": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Result of card verification. Returned by the authorization service in the `processorInformation.cardVerification.resultCode`\nreply field. If ics_auth and ics_score are requested at the same time, the value is automatically\npassed from ics_auth to ics_score. For more information on using this field, see\n\"\"Sending the Results of Address and Card Verification Tests,\"\" page 16.\nThe field contains one of the following values:\n  - `I`: Card verification number failed processor's data\n  validation check.\n  - `M`: Card verification number matched.\n  - `N`: Card verification number not matched.\n  - `P`: Card verification number not processed.\n  - `S`: Card verification number is on the card but was not included in the request.\n  - `U`: Card verification is not supported by the issuing bank.\n  - `X`: Card verification is not supported by the payment card company.\n  - Space Character: Deprecated. Ignore this value.\n  - `1`: CyberSource does not support card verification for this processor or card type.\n  - `2`: Processor returned value unrecognized for card verification response.\n  - `3`: Processor did not return card verification result code.\n"
                                                }
                                            }
                                        },
                                        "achVerification": {
                                            "type": "object",
                                            "properties": {
                                                "resultCode": {
                                                    "type": "string",
                                                    "maxLength": 2,
                                                    "description": "Results from the ACH verification service, which is described in \"ACH Verification,\" page 25. For the possible\nvalues, see Appendix H, \"Verification Codes,\" on page 91.\n"
                                                },
                                                "resultCodeRaw": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "description": "Raw results from the ACH verification service, which is described in \"ACH Verification,\" page 25. For the\npossible values, see Appendix H, \"Verification Codes,\" on page 91.\n"
                                                }
                                            }
                                        },
                                        "electronicVerificationResults": {
                                            "type": "object",
                                            "properties": {
                                                "email": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Mapped Electronic Verification response code for the customer\u2019s email address.\n"
                                                },
                                                "emailRaw": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Raw Electronic Verification response code from the processor for the customer\u2019s email address."
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 30,
                                                    "description": "The description for this field is not available.\n"
                                                },
                                                "nameRaw": {
                                                    "type": "string",
                                                    "maxLength": 30,
                                                    "description": "The description for this field is not available."
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Mapped Electronic Verification response code for the customer\u2019s phone number.\n"
                                                },
                                                "phoneNumberRaw": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Raw Electronic Verification response code from the processor for the customer\u2019s phone number."
                                                },
                                                "street": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Mapped Electronic Verification response code for the customer\u2019s street address.\n"
                                                },
                                                "streetRaw": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Raw Electronic Verification response code from the processor for the customer\u2019s street address."
                                                },
                                                "postalCode": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Mapped Electronic Verification response code for the customer\u2019s postal code.\n"
                                                },
                                                "postalCodeRaw": {
                                                    "type": "string",
                                                    "maxLength": 1,
                                                    "description": "Raw Electronic Verification response code from the processor for the customer\u2019s postal code."
                                                }
                                            }
                                        },
                                        "systemTraceAuditNumber": {
                                            "type": "string",
                                            "maxLength": 6,
                                            "description": "This field is returned only for **American Express Direct** and **CyberSource through VisaNet**.\n\n**American Express Direct**\n\nSystem trace audit number (STAN). This value identifies the transaction and is useful when investigating a\nchargeback dispute.\n\n**CyberSource through VisaNet**\n\nSystem trace number that must be printed on the customer\u2019s receipt.\n"
                                        },
                                        "responseCodeSource": {
                                            "type": "string",
                                            "maxLength": 1,
                                            "description": "Used by Visa only and contains the response source/reason code that identifies the source of the response decision.\n"
                                        }
                                    }
                                },
                                "pointOfSaleInformation": {
                                    "type": "object",
                                    "properties": {
                                        "entryMode": {
                                            "type": "string",
                                            "maxLength": 11,
                                            "description": "Method of entering credit card information into the POS terminal. Possible values:\n\n - contact: Read from direct contact with chip card.\n - contactless: Read from a contactless interface using chip data.\n - keyed: Manually keyed into POS terminal.\n - msd: Read from a contactless interface using magnetic stripe data (MSD).\n - swiped: Read from credit card magnetic stripe.\n\nThe contact, contactless, and msd values are supported only for EMV transactions.\n* Applicable only for CTV for Payouts.\n"
                                        },
                                        "terminalCapability": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 5,
                                            "description": "POS terminal\u2019s capability. Possible values:\n\n - 1: Terminal has a magnetic stripe reader only.\n - 2: Terminal has a magnetic stripe reader and manual entry capability.\n - 3: Terminal has manual entry capability only.\n - 4: Terminal can read chip cards.\n - 5: Terminal can read contactless chip cards.\n\nThe values of 4 and 5 are supported only for EMV transactions.\n* Applicable only for CTV for Payouts.  \n"
                                        }
                                    }
                                },
                                "riskInformation": {
                                    "type": "object",
                                    "properties": {
                                        "profile": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                },
                                                "decision": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                }
                                            }
                                        },
                                        "rules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "description": "Names of one or more rules that were processed, and the decisions made by the rules.",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Description of the rule as it appears in the Profile Editor."
                                                    },
                                                    "decision": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Summarizes the result for the rule according to the setting that you chose in the Profile Editor.\nThis field can contain one of the following values:\n- `IGNORE`\n- `REVIEW`\n- `REJECT`\n- `ACCEPT`\n"
                                                    }
                                                }
                                            }
                                        },
                                        "passiveProfile": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                },
                                                "decision": {
                                                    "type": "string",
                                                    "description": "The description for this field is not available."
                                                }
                                            }
                                        },
                                        "passiveRules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "description": "Names of one or more rules that were processed, and the decisions made by the rules.",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Description of the rule as it appears in the Profile Editor."
                                                    },
                                                    "decision": {
                                                        "type": "string",
                                                        "maxLength": 255,
                                                        "description": "Summarizes the result for the rule according to the setting that you chose in the Profile Editor.\nThis field can contain one of the following values:\n- `IGNORE`\n- `REVIEW`\n- `REJECT`\n- `ACCEPT`\n"
                                                    }
                                                }
                                            }
                                        },
                                        "score": {
                                            "type": "object",
                                            "properties": {
                                                "factorCodes": {
                                                    "type": "array",
                                                    "description": "Array of factor codes.",
                                                    "items": {
                                                        "type": "string",
                                                        "description": "Represents a factor code."
                                                    }
                                                },
                                                "result": {
                                                    "type": "integer",
                                                    "description": "The description for this field is not available.\n"
                                                }
                                            }
                                        },
                                        "localTime": {
                                            "type": "string",
                                            "description": "Time that the transaction was submitted in local time."
                                        }
                                    }
                                },
                                "senderInformation": {
                                    "type": "object",
                                    "properties": {
                                        "referenceNumber": {
                                            "type": "string",
                                            "maxLength": 19,
                                            "description": "Reference number generated by you that uniquely identifies the sender."
                                        }
                                    }
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        },
                                        "relatedTransactions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "href": {
                                                        "type": "string",
                                                        "description": "This is the endpoint of the resource that was created by the successful request."
                                                    },
                                                    "method": {
                                                        "type": "string",
                                                        "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "id": "5330579740206278601009",
                                "rootId": "5330571038726320201013",
                                "reconciliationId": "53703847LK9LPPXY",
                                "merchantId": "pa_rbsworldpay",
                                "status": "PENDING",
                                "submitTimeUtc": "2018-07-31T17:26:14Z",
                                "applicationInformation": {
                                    "status": "PENDING",
                                    "reasonCode": "100",
                                    "rCode": "1",
                                    "rFlag": "SOK",
                                    "applications": [
                                        {
                                            "name": "ics_bill",
                                            "status": "PENDING",
                                            "reasonCode": "100",
                                            "rCode": "1",
                                            "rFlag": "SOK",
                                            "reconciliationId": "53703847LK9LPPXY",
                                            "rMessage": "Request was processed successfully.",
                                            "returnCode": "1260000"
                                        }
                                    ]
                                },
                                "buyerInformation": {
                                    "merchantCustomerId": "123456",
                                    "hashedPassword": "fhjfhj"
                                },
                                "clientReferenceInformation": {
                                    "code": "ECERT001",
                                    "applicationVersion": "1.0",
                                    "applicationName": "SCMP API",
                                    "applicationUser": "ng_paymentech",
                                    "comments": "test comment"
                                },
                                "consumerAuthenticationInformation": {
                                    "eciRaw": "1234",
                                    "cavv": "12345",
                                    "xid": "12345678",
                                    "transactionId": "00152259513040478521"
                                },
                                "deviceInformation": {
                                    "ipAddress": "1.10.10.10",
                                    "hostName": "cybs test",
                                    "cookiesAccepted": "no"
                                },
                                "errorInformation": {
                                    "reason": "1",
                                    "message": "abc",
                                    "details": [
                                        {
                                            "field": "xyz",
                                            "reason": "1"
                                        }
                                    ]
                                },
                                "installmentInformation": {
                                    "numberOfInstallments": 0
                                },
                                "fraudMarkingInformation": {
                                    "reason": "suspected"
                                },
                                "merchantDefinedInformation": [
                                    {
                                        "key": "abc",
                                        "value": "xyz"
                                    }
                                ],
                                "merchantInformation": {
                                    "merchantDescriptor": {
                                        "name": "ng_paymentech"
                                    }
                                },
                                "orderInformation": {
                                    "billTo": {
                                        "firstName": "JAMES",
                                        "lastName": "DOUGH",
                                        "middleName": "ROY",
                                        "nameSuffix": "Mr",
                                        "address1": "600 Morgan Falls Road",
                                        "address2": "Room 2-2123",
                                        "locality": "Atlanta",
                                        "administrativeArea": "GA",
                                        "postalCode": "30350",
                                        "company": "cybersource",
                                        "email": "jdough@cybersource.com",
                                        "country": "US",
                                        "title": "Manager",
                                        "phoneNumber": "6509656111"
                                    },
                                    "shipTo": {
                                        "firstName": "Test",
                                        "lastName": "TSS",
                                        "address1": "201S.DivisionSt._1",
                                        "address2": "Suite500",
                                        "locality": "Austin",
                                        "administrativeArea": "TX",
                                        "postalCode": "78750",
                                        "company": "cybs",
                                        "country": "US",
                                        "phoneNumber": "5120000000"
                                    },
                                    "lineItems": [
                                        {
                                            "productCode": "code2",
                                            "productName": "name2",
                                            "productSku": "KKY",
                                            "taxAmount": "3.00",
                                            "quantity": 2,
                                            "unitPrice": "5.00",
                                            "fulfillmentType": "abc"
                                        }
                                    ],
                                    "amountDetails": {
                                        "totalAmount": "100.00",
                                        "currency": "USD",
                                        "taxAmount": "5",
                                        "authorizedAmount": "100.00",
                                        "settlementAmount": "97.50",
                                        "settlementCurrency": "USD"
                                    },
                                    "shippingDetails": {
                                        "giftWrap": "none",
                                        "shippingMethod": "xyz"
                                    }
                                },
                                "paymentInformation": {
                                    "paymentType": {
                                        "name": "paymentProcessor1234",
                                        "type": "CARD",
                                        "method": "MC",
                                        "fundingSource": "abc",
                                        "fundingSourceAffiliation": "ab",
                                        "credential": "xy"
                                    },
                                    "customer": {
                                        "customerId": "123"
                                    },
                                    "card": {
                                        "suffix": "1111",
                                        "prefix": "123",
                                        "expirationMonth": "10",
                                        "expirationYear": "2017",
                                        "startMonth": "11",
                                        "startYear": "2011",
                                        "issueNumber": "1234",
                                        "type": "credit card",
                                        "accountEncoderId": "12",
                                        "useAs": "overidepaymentmethod"
                                    },
                                    "invoice": {
                                        "number": "BOLETONUM34567890123barcode12345678901231234567890",
                                        "barcodeNumber": "barcode1234567890123barcode12345678901231234567890",
                                        "expirationDate": "2018-01-07T07:59:59.999Z"
                                    },
                                    "bank": {
                                        "routingNumber": "routing123",
                                        "branchCode": "branchcode1234567",
                                        "swiftCode": "bankswift1",
                                        "bankCode": "bankcode1212345",
                                        "iban": "SUFF",
                                        "account": {
                                            "suffix": "SUFF",
                                            "prefix": "PREF",
                                            "checkNumber": "123456",
                                            "type": "check",
                                            "name": "BankAccountName123456789012345",
                                            "checkDigit": "CD",
                                            "encoderId": "AID"
                                        },
                                        "mandate": {
                                            "referenceNumber": "mandaterefnum1234567",
                                            "recurringType": "direct1234",
                                            "id": "mandateId1"
                                        }
                                    },
                                    "accountFeatures": {
                                        "balanceAmount": "3.00",
                                        "previousBalanceAmount": "2.00",
                                        "currency": "usd"
                                    }
                                },
                                "processingInformation": {
                                    "paymentSolution": "Visa",
                                    "commerceIndicator": "7",
                                    "businessApplicationId": "12345",
                                    "authorizationOptions": {
                                        "authType": "O"
                                    },
                                    "bankTransferOptions": {
                                        "secCode": "web"
                                    }
                                },
                                "processorInformation": {
                                    "processor": {
                                        "name": "paymentProcessor1234"
                                    },
                                    "transactionId": "processortransactionid123",
                                    "networkTransactionId": "networktransactionid67890",
                                    "responseId": "1212",
                                    "providerTransactionId": "78906",
                                    "approvalCode": "authcode1234567",
                                    "responseCode": "responsecode12345678",
                                    "avs": {
                                        "code": "ARM",
                                        "codeRaw": "avsResults"
                                    },
                                    "cardVerification": {
                                        "resultCode": "Y"
                                    },
                                    "achVerification": {
                                        "resultCode": "rspcodmap",
                                        "resultCodeRaw": "responsecode12345678"
                                    },
                                    "electronicVerificationResults": {
                                        "email": "email@email.com",
                                        "emailRaw": "emailRaw12",
                                        "name": "ename",
                                        "nameRaw": "enameRaw12",
                                        "phoneNumber": "01179",
                                        "phoneNumberRaw": "9925551608",
                                        "street": "123 street",
                                        "streetRaw": "SteertRaw12",
                                        "postalCode": "78717",
                                        "postalCodeRaw": "1166678717"
                                    },
                                    "systemTraceAuditNumber": "123456",
                                    "responseCodeSource": "0"
                                },
                                "pointOfSaleInformation": {
                                    "entryMode": "posentrymode1234512",
                                    "terminalCapability": "integer"
                                },
                                "riskInformation": {
                                    "profile": {
                                        "name": "abc",
                                        "decision": "xyz"
                                    },
                                    "rules": [
                                        {
                                            "name": "abc2",
                                            "decision": "xyz2"
                                        }
                                    ],
                                    "passiveProfile": {
                                        "name": "abc3",
                                        "decision": "xyz3"
                                    },
                                    "passiveRules": [
                                        {
                                            "name": "abc4",
                                            "decision": "xyz4"
                                        }
                                    ],
                                    "localTime": "2018-07-31T17:26:14Z",
                                    "score": {
                                        "factorCodes": [
                                            "AB"
                                        ],
                                        "result": 10
                                    }
                                },
                                "senderInformation": {
                                    "referenceNumber": "senderRefNumber1"
                                },
                                "_links": {
                                    "self": {
                                        "href": "https://api.visa.com/payment/tss/v2/transactions/5330579740206278601009",
                                        "method": "GET"
                                    },
                                    "relatedTransactions": [
                                        {
                                            "href": "https://api.visa.com/payment/tss/v2/transactions/5330579740206278601010",
                                            "method": "GET"
                                        },
                                        {
                                            "href": "https://api.visa.com/payment/tss/v2/transactions/5330579740206278601011",
                                            "method": "GET"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource not found in the system."
                    },
                    "500": {
                        "description": "Unexpected server error"
                    }
                }
            }
        },
        "/tss/v2/searches": {
            "post": {
                "summary": "Create a search request",
                "description": "Create a search request.\n",
                "tags": [
                    "SearchTransactions"
                ],
                "operationId": "createSearch",
                "x-devcenter-metaData": {
                    "categoryTag": "Transaction_Search"
                },
                "parameters": [
                    {
                        "name": "createSearchRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "save": {
                                    "type": "boolean",
                                    "description": "save or not save."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The description for this field is not available.\n"
                                },
                                "timezone": {
                                    "type": "string",
                                    "description": "Time Zone."
                                },
                                "query": {
                                    "type": "string",
                                    "description": "transaction search query string."
                                },
                                "offset": {
                                    "type": "integer",
                                    "description": "offset."
                                },
                                "limit": {
                                    "type": "integer",
                                    "description": "limit on number of results."
                                },
                                "sort": {
                                    "type": "string",
                                    "description": "A comma separated list of the following form - fieldName1 asc or desc, fieldName2 asc or desc, etc."
                                }
                            },
                            "example": {
                                "save": "false",
                                "name": "Search By Code",
                                "timezone": "America/Chicago",
                                "query": "clientReferenceInformation.code:123456 AND submitTimeUtc:[NOW/DAY-7DAYS TO NOW/DAY+1DAY}",
                                "offset": 0,
                                "limit": 100,
                                "sort": "id:asc, submitTimeUtc:asc"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "object",
                            "title": "tssV2TransactionsPost201Response",
                            "properties": {
                                "searchId": {
                                    "type": "string",
                                    "maxLength": 60,
                                    "description": "An unique identification number assigned by CyberSource to identify each Search request."
                                },
                                "save": {
                                    "type": "boolean",
                                    "description": "save or not save."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The description for this field is not available.\n"
                                },
                                "timezone": {
                                    "type": "string",
                                    "description": "Time Zone."
                                },
                                "query": {
                                    "type": "string",
                                    "description": "transaction search query string."
                                },
                                "offset": {
                                    "type": "integer",
                                    "description": "offset."
                                },
                                "limit": {
                                    "type": "integer",
                                    "description": "limit on number of results."
                                },
                                "sort": {
                                    "type": "string",
                                    "description": "A comma separated list of the following form - fieldName1 asc or desc, fieldName2 asc or desc, etc."
                                },
                                "count": {
                                    "type": "integer",
                                    "description": "Results for this page, this could be below the limit."
                                },
                                "totalCount": {
                                    "type": "integer",
                                    "description": "total number of results."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "_embedded": {
                                    "type": "object",
                                    "properties": {
                                        "transactionSummaries": {
                                            "type": "array",
                                            "description": "transaction search summary",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "maxLength": 26,
                                                        "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                                    },
                                                    "submitTimeUtc": {
                                                        "type": "string",
                                                        "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                                    },
                                                    "merchantId": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "applicationInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "status": {
                                                                "type": "string",
                                                                "description": "The status of the submitted transaction."
                                                            },
                                                            "reasonCode": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            },
                                                            "rCode": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            },
                                                            "rFlag": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            },
                                                            "applications": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "status": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "reasonCode": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "rCode": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "rFlag": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "reconciliationId": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "rMessage": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "returnCode": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "buyerInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "merchantCustomerId": {
                                                                "type": "string",
                                                                "maxLength": 100,
                                                                "description": "Your identifier for the customer.\n\nWhen a subscription or customer profile is being created, the maximum length for this field for most processors is 30. Otherwise, the maximum length is 100.\n\n**Comercio Latino**\\\nFor recurring payments in Mexico, the value is the customer\u2019s contract number.\nNote Before you request the authorization, you must inform the issuer of the customer contract numbers that will be used for recurring transactions.\n\n**Litle**\\\nFor a follow-on credit with Litle, CyberSource checks the following locations, in the order\ngiven, for a customer account ID value and uses the first value it finds:\n1. `customer_account_id` value in the follow-on credit request\n2. Customer account ID value that was used for the capture that is being credited\n3. Customer account ID value that was used for the original authorization\nIf a customer account ID value cannot be found in any of these locations, then no value is used.\n\nFor processor-specific information, see the customer_account_id field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            }
                                                        }
                                                    },
                                                    "clientReferenceInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 50,
                                                                "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                                            },
                                                            "applicationName": {
                                                                "type": "string",
                                                                "description": "The application name of client which is used to submit the request."
                                                            },
                                                            "applicationUser": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            }
                                                        }
                                                    },
                                                    "consumerAuthenticationInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "xid": {
                                                                "type": "string",
                                                                "maxLength": 40,
                                                                "description": "Transaction identifier. For the description and requirements, see \"Payer Authentication,\" page 180."
                                                            },
                                                            "transactionId": {
                                                                "type": "string",
                                                                "description": "Payer auth Transaction identifier."
                                                            }
                                                        }
                                                    },
                                                    "deviceInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "ipAddress": {
                                                                "type": "string",
                                                                "maxLength": 15,
                                                                "description": "Customer\u2019s IP address, such as 10.1.27.63, reported by your Web server via socket information.\n"
                                                            }
                                                        }
                                                    },
                                                    "fraudMarkingInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "reason": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            }
                                                        }
                                                    },
                                                    "merchantDefinedInformation": {
                                                        "type": "array",
                                                        "description": "The description for this field is not available.",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string",
                                                                    "maxLength": 50,
                                                                    "description": "The name you assign for your merchant-defined data field.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].key and\nmerchantDefinedInformation[1].key for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n"
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "maxLength": 255,
                                                                    "description": "The value you assign for your merchant-defined data field.\n\n**Warning** Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields. Personally identifying information includes, but is not\nlimited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV,\nCVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].value and\nmerchantDefinedInformation[1].value for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n\nFor installment payments with Mastercard in Brazil:\n- The value for merchantDefinedInformation[0].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 25-44\n  - Field: Reference Field 2\n- The value for merchantDefinedInformation[1].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 45-64\n  - Field: Reference Field 3\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "merchantInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "resellerId": {
                                                                "type": "string",
                                                                "maxLength": 26,
                                                                "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                                            }
                                                        }
                                                    },
                                                    "orderInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "billTo": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "firstName": {
                                                                        "type": "string",
                                                                        "maxLength": 60,
                                                                        "description": "Customer\u2019s first name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**:\\\nThis field may be sent only for FDC Compass.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_firstname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                                    },
                                                                    "lastName": {
                                                                        "type": "string",
                                                                        "maxLength": 60,
                                                                        "description": "Customer\u2019s last name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\n**For Payouts** : This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the customer_lastname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                                    },
                                                                    "email": {
                                                                        "type": "string",
                                                                        "maxLength": 255,
                                                                        "description": "Customer's email address, including the full domain name.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_email field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                                    },
                                                                    "country": {
                                                                        "type": "string",
                                                                        "maxLength": 2,
                                                                        "description": "Country of the billing address. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_country field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                                    },
                                                                    "phoneNumber": {
                                                                        "type": "string",
                                                                        "maxLength": 15,
                                                                        "description": "Customer\u2019s phone number.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nCyberSource recommends that you include the country code when the order is from outside the U.S.\n\nFor processor-specific information, see the customer_phone field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n"
                                                                    }
                                                                }
                                                            },
                                                            "shipTo": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "firstName": {
                                                                        "type": "string",
                                                                        "maxLength": 60,
                                                                        "description": "First name of the recipient.\n\n**Processor specific maximum length**\n\n- Litle: 25\n- All other processors: 60\n"
                                                                    },
                                                                    "lastName": {
                                                                        "type": "string",
                                                                        "maxLength": 60,
                                                                        "description": "Last name of the recipient.\n\n**Processor-specific maximum length**\n\n- Litle: 25\n- All other processors: 60\n"
                                                                    },
                                                                    "address1": {
                                                                        "type": "string",
                                                                        "maxLength": 60,
                                                                        "description": "First line of the shipping address."
                                                                    },
                                                                    "country": {
                                                                        "type": "string",
                                                                        "description": "Country of the shipping address. Use the two-character ISO Standard Country Codes.",
                                                                        "maxLength": 2
                                                                    },
                                                                    "phoneNumber": {
                                                                        "type": "string",
                                                                        "maxLength": 15,
                                                                        "description": "Phone number associated with the shipping address."
                                                                    }
                                                                }
                                                            },
                                                            "amountDetails": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "totalAmount": {
                                                                        "type": "string",
                                                                        "maxLength": 19,
                                                                        "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                                    },
                                                                    "currency": {
                                                                        "type": "string",
                                                                        "maxLength": 3,
                                                                        "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "paymentInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "paymentType": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "The type of payment method. This is required for non-credit card payment.\n\nPossible values:\n - BANK_TRANSFER\n - CARD (Default)\n - EWALLET\n - DIGITAL\n - DIRECT_DEBIT\n - INVOICE\n - PUSH_PAYMENT\n - CARRIER_BILLING\n - CASH\n - CHECK\n - CRYPTOGRAPHIC\n\nPlease contact CyberSource Customer Support to enable the payment method of your choice and the value you should\nsend in your payment request for this field.\n"
                                                                    },
                                                                    "method": {
                                                                        "type": "string",
                                                                        "description": "This is an optional field.\n\nPlease contact CyberSource Customer Support to enable the payment method of your choice and the value you should\nsend in your payment request for this field.\n"
                                                                    }
                                                                }
                                                            },
                                                            "customer": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "customerId": {
                                                                        "type": "string",
                                                                        "description": "Unique identifier for the customer's card and billing information.\n\nWhen you use Payment Tokenization or Recurring Billing and you include this value in\nyour request, many of the fields that are normally required for an authorization or credit\nbecome optional.\n\n**NOTE** When you use Payment Tokenization or Recurring Billing, the value for the Customer ID is actually the Cybersource payment token for a customer. This token stores information such as the consumer\u2019s card number so it can be applied towards bill payments, recurring payments, or one-time payments. By using this token in a payment API request, the merchant doesn't need to pass in data such as the card number or expiration date in the request itself.\n\nSee \"Payment Tokenization,\" page 222, and \"Recurring Billing,\" page 225.\n"
                                                                    }
                                                                }
                                                            },
                                                            "card": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "suffix": {
                                                                        "type": "string",
                                                                        "description": "Last four digits of the cardholder\u2019s account number. This field is returned only for tokenized transactions.\nYou can use this value on the receipt that you give to the cardholder.\n"
                                                                    },
                                                                    "prefix": {
                                                                        "type": "string",
                                                                        "maxLength": 6,
                                                                        "description": "The description for this field is not available."
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "processingInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "paymentSolution": {
                                                                "type": "string",
                                                                "maxLength": 12,
                                                                "description": "Type of digital payment solution for the transaction. Possible Values:\n\n - **visacheckout**: Visa Checkout. This value is required for Visa Checkout transactions. See Visa Checkout Using the SCMP API.\n - **005**: Masterpass. This value is required for Masterpass transactions on OmniPay Direct. See \"Masterpass,\" page 153.\n"
                                                            },
                                                            "businessApplicationId": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            }
                                                        }
                                                    },
                                                    "processorInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "processor": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "maxLength": 30,
                                                                        "description": "Name of the Processor.\n"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "pointOfSaleInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "terminalId": {
                                                                "type": "string",
                                                                "maxLength": 8,
                                                                "description": "Identifier for the terminal at your retail location. You can define this value yourself, but consult the\nprocessor for requirements.\n\nFor Payouts: This field is applicable for CtV.\n"
                                                            },
                                                            "terminalSerialNumber": {
                                                                "type": "string",
                                                                "maxLength": 32,
                                                                "description": "Terminal serial number assigned by the hardware manufacturer. This value is provided by the client software that\nis installed on the POS terminal.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                            },
                                                            "deviceId": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            },
                                                            "partner": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "originalTransactionId": {
                                                                        "type": "string",
                                                                        "maxLength": 32,
                                                                        "description": "Value that links the previous transaction to the current follow-on request. This value is assigned by the client\nsoftware that is installed on the POS terminal, which makes it available to the terminal\u2019s software and to\nCyberSource. Therefore, you can use this value to reconcile transactions between CyberSource and the terminal\u2019s\nsoftware.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                                    },
                                                                    "developerId": {
                                                                        "type": "string",
                                                                        "maxLength": 8,
                                                                        "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                                    },
                                                                    "solutionId": {
                                                                        "type": "string",
                                                                        "maxLength": 8,
                                                                        "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "riskInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "providers": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "fingerprint": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "true_ipaddress": {
                                                                                "type": "string",
                                                                                "maxLength": 255,
                                                                                "description": "The description for this field is not available."
                                                                            },
                                                                            "hash": {
                                                                                "type": "string",
                                                                                "maxLength": 255,
                                                                                "description": "The description for this field is not available."
                                                                            },
                                                                            "smartId": {
                                                                                "type": "string",
                                                                                "maxLength": 255,
                                                                                "description": "The description for this field is not available."
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "_links": {
                                                        "type": "object",
                                                        "properties": {
                                                            "transactionDetail": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "href": {
                                                                        "type": "string",
                                                                        "description": "This is the endpoint of the resource that was created by the successful request."
                                                                    },
                                                                    "method": {
                                                                        "type": "string",
                                                                        "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "searchId": "87e1e4bd-cac2-49b1-919a-4d5e29a2e55d",
                                "save": "false",
                                "name": "Search By Code",
                                "timezone": "America/Chicago",
                                "query": "clientReferenceInformation.code:12345 AND submitTimeUtc:[NOW/DAY-7DAYS TO NOW/DAY+1DAY}",
                                "offset": 0,
                                "limit": 2000,
                                "sort": "id:asc, submitTimeUtc:asc",
                                "count": 22,
                                "totalCount": 22,
                                "submitTimeUtc": "2018-09-18T16:59:28Z",
                                "_embedded": {
                                    "transactionSummaries": [
                                        {
                                            "id": "5217848115816817001541",
                                            "submitTimeUtc": "2018-03-23T06:00:11Z",
                                            "merchantId": "sandeep_wf",
                                            "applicationInformation": {
                                                "status": "TRANSMITTED",
                                                "reasonCode": "123",
                                                "rCode": "1",
                                                "rFlag": "SOK",
                                                "applications": [
                                                    {
                                                        "name": "ics_service_fee_calculate",
                                                        "status": "TRANSMITTED",
                                                        "reasonCode": "123",
                                                        "rCode": "1",
                                                        "rFlag": "SOK",
                                                        "reconciliationId": "55557",
                                                        "rMessage": "Request was processed successfully",
                                                        "returnCode": "1040000"
                                                    }
                                                ]
                                            },
                                            "buyerInformation": {
                                                "merchantCustomerId": "123456"
                                            },
                                            "clientReferenceInformation": {
                                                "code": "12345",
                                                "applicationName": "Service Fee Request",
                                                "applicationUser": "sandeep_wf"
                                            },
                                            "consumerAuthenticationInformation": {
                                                "xid": "12345678",
                                                "transactionId": "00152259513040478521"
                                            },
                                            "deviceInformation": {
                                                "ipAddress": "1.10.10.10"
                                            },
                                            "fraudMarkingInformation": {
                                                "reason": "fraud txn"
                                            },
                                            "merchantDefinedInformation": [
                                                {
                                                    "key": "abc",
                                                    "value": "xyz"
                                                }
                                            ],
                                            "merchantInformation": {
                                                "resellerId": "wfbmcp"
                                            },
                                            "orderInformation": {
                                                "billTo": {
                                                    "firstName": "Test",
                                                    "lastName": "TSS",
                                                    "email": "null@cybersource.com",
                                                    "country": "US",
                                                    "phoneNumber": "5120000000"
                                                },
                                                "shipTo": {
                                                    "firstName": "Test",
                                                    "lastName": "TSS",
                                                    "address1": "201S.DivisionSt._1",
                                                    "country": "US",
                                                    "phoneNumber": "5120000000"
                                                },
                                                "amountDetails": {
                                                    "totalAmount": "100.00",
                                                    "currency": "USD"
                                                }
                                            },
                                            "paymentInformation": {
                                                "paymentType": {
                                                    "type": "CARD",
                                                    "method": "MC"
                                                },
                                                "customer": {
                                                    "customerId": "12345"
                                                },
                                                "card": {
                                                    "suffix": "1111",
                                                    "prefix": "123456",
                                                    "type": "credit card"
                                                }
                                            },
                                            "processingInformation": {
                                                "paymentSolution": "xyz",
                                                "businessApplicationId": "12345"
                                            },
                                            "processorInformation": {
                                                "processor": {
                                                    "name": "FirstData"
                                                }
                                            },
                                            "pointOfSaleInformation": {
                                                "terminalId": "1",
                                                "terminalSerialNumber": "123111123",
                                                "deviceId": "asfaf12312313",
                                                "partner": {
                                                    "originalTransactionId": "131231414414"
                                                }
                                            },
                                            "riskInformation": {
                                                "providers": {
                                                    "fingerprint": {
                                                        "true_ipaddress": "1.101.102.112",
                                                        "hash": "tuWmt8Ubw0EAybBF3wrZcEqIcZsLr8YPldTQDUxAg2k=",
                                                        "smart_id": "23442fdadfa"
                                                    }
                                                }
                                            },
                                            "_links": {
                                                "transactionDetail": {
                                                    "href": "https://sl73paysvapq002.visa.com:2031/payment/tss/v2/transactions/5217848115816817001541",
                                                    "method": "GET"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "_links": {
                                    "self": {
                                        "href": "https://sl73paysvapq002.visa.com:2031/payment/tss/v2/searches/87e1e4bd-cac2-49b1-919a-4d5e29a2e55d",
                                        "method": "GET"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "type": "object",
                            "title": "tssV2TransactionsPost400Response",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Unexpected system error or system timeout.",
                        "schema": {
                            "title": "tssV2TransactionsPost502Response",
                            "type": "object",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - SERVER_ERROR\n",
                                    "enum": [
                                        "SERVER_ERROR"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - SYSTEM_ERROR\n - SERVER_TIMEOUT\n - SERVICE_TIMEOUT\n - INVALID_OR_MISSING_CONFIG\n - PROCESSOR_TIMEOUT\n",
                                    "enum": [
                                        "SYSTEM_ERROR",
                                        "SERVER_TIMEOUT",
                                        "SERVICE_TIMEOUT",
                                        "INVALID_OR_MISSING_CONFIG",
                                        "PROCESSOR_TIMEOUT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                }
                            }
                        }
                    }
                },
                "x-example": {
                    "example0": {
                        "summary": "Create a search request",
                        "value": {
                            "save": "false",
                            "name": "MRN",
                            "timezone": "America/Chicago",
                            "query": "clientReferenceInformation.code:TC50171_3 AND submitTimeUtc:[NOW/DAY-7DAYS TO NOW/DAY+1DAY}",
                            "offset": 0,
                            "limit": 100,
                            "sort": "id:asc,submitTimeUtc:asc"
                        }
                    }
                }
            }
        },
        "/tss/v2/searches/{searchId}": {
            "get": {
                "summary": "Get Search results",
                "description": "Include the Search ID in the GET request to retrieve the search results.\n",
                "tags": [
                    "SearchTransactions"
                ],
                "operationId": "getSearch",
                "x-devcenter-metaData": {
                    "categoryTag": "Transaction_Search"
                },
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Search ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "schema": {
                            "type": "object",
                            "title": "tssV2TransactionsPost201Response",
                            "properties": {
                                "searchId": {
                                    "type": "string",
                                    "maxLength": 60,
                                    "description": "An unique identification number assigned by CyberSource to identify each Search request."
                                },
                                "save": {
                                    "type": "boolean",
                                    "description": "save or not save."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The description for this field is not available.\n"
                                },
                                "timezone": {
                                    "type": "string",
                                    "description": "Time Zone."
                                },
                                "query": {
                                    "type": "string",
                                    "description": "transaction search query string."
                                },
                                "offset": {
                                    "type": "integer",
                                    "description": "offset."
                                },
                                "limit": {
                                    "type": "integer",
                                    "description": "limit on number of results."
                                },
                                "sort": {
                                    "type": "string",
                                    "description": "A comma separated list of the following form - fieldName1 asc or desc, fieldName2 asc or desc, etc."
                                },
                                "count": {
                                    "type": "integer",
                                    "description": "Results for this page, this could be below the limit."
                                },
                                "totalCount": {
                                    "type": "integer",
                                    "description": "total number of results."
                                },
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "_embedded": {
                                    "type": "object",
                                    "properties": {
                                        "transactionSummaries": {
                                            "type": "array",
                                            "description": "transaction search summary",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "maxLength": 26,
                                                        "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                                    },
                                                    "submitTimeUtc": {
                                                        "type": "string",
                                                        "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                                    },
                                                    "merchantId": {
                                                        "type": "string",
                                                        "description": "The description for this field is not available."
                                                    },
                                                    "applicationInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "status": {
                                                                "type": "string",
                                                                "description": "The status of the submitted transaction."
                                                            },
                                                            "reasonCode": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            },
                                                            "rCode": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            },
                                                            "rFlag": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            },
                                                            "applications": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "status": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "reasonCode": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "rCode": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "rFlag": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "reconciliationId": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "rMessage": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        },
                                                                        "returnCode": {
                                                                            "type": "string",
                                                                            "description": "The description for this field is not available."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "buyerInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "merchantCustomerId": {
                                                                "type": "string",
                                                                "maxLength": 100,
                                                                "description": "Your identifier for the customer.\n\nWhen a subscription or customer profile is being created, the maximum length for this field for most processors is 30. Otherwise, the maximum length is 100.\n\n**Comercio Latino**\\\nFor recurring payments in Mexico, the value is the customer\u2019s contract number.\nNote Before you request the authorization, you must inform the issuer of the customer contract numbers that will be used for recurring transactions.\n\n**Litle**\\\nFor a follow-on credit with Litle, CyberSource checks the following locations, in the order\ngiven, for a customer account ID value and uses the first value it finds:\n1. `customer_account_id` value in the follow-on credit request\n2. Customer account ID value that was used for the capture that is being credited\n3. Customer account ID value that was used for the original authorization\nIf a customer account ID value cannot be found in any of these locations, then no value is used.\n\nFor processor-specific information, see the customer_account_id field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                            }
                                                        }
                                                    },
                                                    "clientReferenceInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "code": {
                                                                "type": "string",
                                                                "maxLength": 50,
                                                                "description": "Client-generated order reference or tracking number. CyberSource recommends that you send a unique value for each\ntransaction so that you can perform meaningful searches for the transaction.\n\nFor information about tracking orders, see [Getting Started with CyberSource Advanced for the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/Getting_Started_SCMP/html/wwhelp/wwhimpl/js/html/wwhelp.htm).\n\n**FDC Nashville Global**\\\nCertain circumstances can cause the processor to truncate this value to 15 or 17 characters for Level II and Level III processing, which can cause a discrepancy between the value you submit and the value included in some processor reports.\n"
                                                            },
                                                            "applicationName": {
                                                                "type": "string",
                                                                "description": "The application name of client which is used to submit the request."
                                                            },
                                                            "applicationUser": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            }
                                                        }
                                                    },
                                                    "consumerAuthenticationInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "xid": {
                                                                "type": "string",
                                                                "maxLength": 40,
                                                                "description": "Transaction identifier. For the description and requirements, see \"Payer Authentication,\" page 180."
                                                            },
                                                            "transactionId": {
                                                                "type": "string",
                                                                "description": "Payer auth Transaction identifier."
                                                            }
                                                        }
                                                    },
                                                    "deviceInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "ipAddress": {
                                                                "type": "string",
                                                                "maxLength": 15,
                                                                "description": "Customer\u2019s IP address, such as 10.1.27.63, reported by your Web server via socket information.\n"
                                                            }
                                                        }
                                                    },
                                                    "fraudMarkingInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "reason": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            }
                                                        }
                                                    },
                                                    "merchantDefinedInformation": {
                                                        "type": "array",
                                                        "description": "The description for this field is not available.",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string",
                                                                    "maxLength": 50,
                                                                    "description": "The name you assign for your merchant-defined data field.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].key and\nmerchantDefinedInformation[1].key for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n"
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "maxLength": 255,
                                                                    "description": "The value you assign for your merchant-defined data field.\n\n**Warning** Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields. Personally identifying information includes, but is not\nlimited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV,\nCVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension.\n\n**CyberSource through VisaNet**\\\nFor installment payments with Mastercard in Brazil, use merchantDefinedInformation[0].value and\nmerchantDefinedInformation[1].value for data that you want to provide to the issuer to identify the\ntransaction.\n\nSee \"Installment Payments on CyberSource through VisaNet,\" page 142.\n\nFor installment payments with Mastercard in Brazil:\n- The value for merchantDefinedInformation[0].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 25-44\n  - Field: Reference Field 2\n- The value for merchantDefinedInformation[1].value corresponds to the following data in the TC 33 capture file5:\n  - Record: CP07 TCR5\n  - Position: 45-64\n  - Field: Reference Field 3\n"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "merchantInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "resellerId": {
                                                                "type": "string",
                                                                "maxLength": 26,
                                                                "description": "An unique identification number assigned by CyberSource to identify the submitted request. It is also appended to the endpoint of the resource."
                                                            }
                                                        }
                                                    },
                                                    "orderInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "billTo": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "firstName": {
                                                                        "type": "string",
                                                                        "maxLength": 60,
                                                                        "description": "Customer\u2019s first name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\n**For Payouts**:\\\nThis field may be sent only for FDC Compass.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_firstname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                                    },
                                                                    "lastName": {
                                                                        "type": "string",
                                                                        "maxLength": 60,
                                                                        "description": "Customer\u2019s last name. This name must be the same as the name on the card.\n\n**CyberSource Latin American Processing**\\\n**Important** For an authorization request, CyberSource Latin American Processing concatenates `orderInformation.billTo.firstName` and `orderInformation.billTo.lastName`. If the concatenated value exceeds 30 characters, CyberSource Latin American Processing declines the authorization request.\\\n**Note** CyberSource Latin American Processing is the name of a specific processing connection that CyberSource supports. In the CyberSource API documentation, CyberSource Latin American Processing does not refer to the general topic of processing in Latin America. The information in this field description is for the specific processing connection called CyberSource Latin American Processing. It is not for any other Latin American processors that CyberSource supports.\n\n**CyberSource through VisaNet**\\\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\\\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\n**Important** It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\n**For Payouts** : This field may be sent only for FDC Compass.\n\nFor processor-specific information, see the customer_lastname field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                                    },
                                                                    "email": {
                                                                        "type": "string",
                                                                        "maxLength": 255,
                                                                        "description": "Customer's email address, including the full domain name.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the customer_email field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                                    },
                                                                    "country": {
                                                                        "type": "string",
                                                                        "maxLength": 2,
                                                                        "description": "Country of the billing address. Use the two-character ISO Standard Country Codes.\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n\nccAuthService\n(Required when the billing country is the U.S. or Canada; otherwise, optional.)\nThis field is optional if your CyberSource account is configured for relaxed requirements for address data and expiration date. See \"Relaxed Requirements for Address Data and Expiration Date,\" page 75.\nImportant It is your responsibility to determine whether a field is required for the transaction you are requesting.\n\nFor processor-specific information, see the bill_country field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n"
                                                                    },
                                                                    "phoneNumber": {
                                                                        "type": "string",
                                                                        "maxLength": 15,
                                                                        "description": "Customer\u2019s phone number.\n\nFor Payouts: This field may be sent only for FDC Compass.\n\nCyberSource recommends that you include the country code when the order is from outside the U.S.\n\nFor processor-specific information, see the customer_phone field in\n[Credit Card Services Using the SCMP API.](http://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html)\n\n**CyberSource through VisaNet**\nCredit card networks cannot process transactions that contain non-ASCII characters. CyberSource through VisaNet accepts and stores non-ASCII characters correctly and displays them correctly in reports. However, the limitations of the credit card networks prevent CyberSource through VisaNet from transmitting non-ASCII characters to the credit card networks. Therefore, CyberSource through VisaNet replaces non-ASCII characters with meaningless ASCII characters for transmission to the credit card networks.\n"
                                                                    }
                                                                }
                                                            },
                                                            "shipTo": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "firstName": {
                                                                        "type": "string",
                                                                        "maxLength": 60,
                                                                        "description": "First name of the recipient.\n\n**Processor specific maximum length**\n\n- Litle: 25\n- All other processors: 60\n"
                                                                    },
                                                                    "lastName": {
                                                                        "type": "string",
                                                                        "maxLength": 60,
                                                                        "description": "Last name of the recipient.\n\n**Processor-specific maximum length**\n\n- Litle: 25\n- All other processors: 60\n"
                                                                    },
                                                                    "address1": {
                                                                        "type": "string",
                                                                        "maxLength": 60,
                                                                        "description": "First line of the shipping address."
                                                                    },
                                                                    "country": {
                                                                        "type": "string",
                                                                        "description": "Country of the shipping address. Use the two-character ISO Standard Country Codes.",
                                                                        "maxLength": 2
                                                                    },
                                                                    "phoneNumber": {
                                                                        "type": "string",
                                                                        "maxLength": 15,
                                                                        "description": "Phone number associated with the shipping address."
                                                                    }
                                                                }
                                                            },
                                                            "amountDetails": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "totalAmount": {
                                                                        "type": "string",
                                                                        "maxLength": 19,
                                                                        "description": "Grand total for the order. This value cannot be negative. You can include a decimal point (.), but no other special\ncharacters. CyberSource truncates the amount to the correct number of decimal places.\n\n**Note** For CTV, FDCCompass, Paymentech processors, the maximum length for this field is 12.\n\n**Important** Some processors have specific requirements and limitations, such as maximum amounts and maximum field lengths. This information is covered in:\n\uf06e Table 15, \"Authorization Information for Specific Processors,\" on page 43\n\uf06e Table 19, \"Capture Information for Specific Processors,\" on page 58\n\uf06e Table 23, \"Credit Information for Specific Processors,\" on page 75\nIf your processor supports zero amount authorizations, you can set this field to 0 for the authorization to check if the card is lost or stolen. See \"Zero Amount Authorizations,\" page 247.\n\n**DCC with a Third-Party Provider**\\\nSet this field to the converted amount that was returned by the DCC provider. You must include either this field or offer0 and the offerlevel field amount in your request. For details, see \"Dynamic Currency Conversion with a Third Party Provider,\" page 125.\n\n**FDMS South**\\\nIf you accept IDR or CLP currencies, see the entry for FDMS South in Table 15, \"Authorization Information for Specific Processors,\" on page 43.\n\n**DCC for First Data**\\\nNot used.\n"
                                                                    },
                                                                    "currency": {
                                                                        "type": "string",
                                                                        "maxLength": 3,
                                                                        "description": "Currency used for the order. Use the three-character ISO Standard Currency Codes.\n\nFor an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your request for Payment API.\n\n**DCC for First Data**\\\nYour local currency. For details, see \"Dynamic Currency Conversion for First Data,\" page 113.\n"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "paymentInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "paymentType": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "The type of payment method. This is required for non-credit card payment.\n\nPossible values:\n - BANK_TRANSFER\n - CARD (Default)\n - EWALLET\n - DIGITAL\n - DIRECT_DEBIT\n - INVOICE\n - PUSH_PAYMENT\n - CARRIER_BILLING\n - CASH\n - CHECK\n - CRYPTOGRAPHIC\n\nPlease contact CyberSource Customer Support to enable the payment method of your choice and the value you should\nsend in your payment request for this field.\n"
                                                                    },
                                                                    "method": {
                                                                        "type": "string",
                                                                        "description": "This is an optional field.\n\nPlease contact CyberSource Customer Support to enable the payment method of your choice and the value you should\nsend in your payment request for this field.\n"
                                                                    }
                                                                }
                                                            },
                                                            "customer": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "customerId": {
                                                                        "type": "string",
                                                                        "description": "Unique identifier for the customer's card and billing information.\n\nWhen you use Payment Tokenization or Recurring Billing and you include this value in\nyour request, many of the fields that are normally required for an authorization or credit\nbecome optional.\n\n**NOTE** When you use Payment Tokenization or Recurring Billing, the value for the Customer ID is actually the Cybersource payment token for a customer. This token stores information such as the consumer\u2019s card number so it can be applied towards bill payments, recurring payments, or one-time payments. By using this token in a payment API request, the merchant doesn't need to pass in data such as the card number or expiration date in the request itself.\n\nSee \"Payment Tokenization,\" page 222, and \"Recurring Billing,\" page 225.\n"
                                                                    }
                                                                }
                                                            },
                                                            "card": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "suffix": {
                                                                        "type": "string",
                                                                        "description": "Last four digits of the cardholder\u2019s account number. This field is returned only for tokenized transactions.\nYou can use this value on the receipt that you give to the cardholder.\n"
                                                                    },
                                                                    "prefix": {
                                                                        "type": "string",
                                                                        "maxLength": 6,
                                                                        "description": "The description for this field is not available."
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "Type of card to authorize.\n- 001 Visa\n- 002 Mastercard\n- 003 Amex\n- 004 Discover\n- 005: Diners Club\n- 007: JCB\n- 024: Maestro (UK Domestic)\n- 039 Encoded account number\n- 042: Maestro (International)\n"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "processingInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "paymentSolution": {
                                                                "type": "string",
                                                                "maxLength": 12,
                                                                "description": "Type of digital payment solution for the transaction. Possible Values:\n\n - **visacheckout**: Visa Checkout. This value is required for Visa Checkout transactions. See Visa Checkout Using the SCMP API.\n - **005**: Masterpass. This value is required for Masterpass transactions on OmniPay Direct. See \"Masterpass,\" page 153.\n"
                                                            },
                                                            "businessApplicationId": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            }
                                                        }
                                                    },
                                                    "processorInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "processor": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "maxLength": 30,
                                                                        "description": "Name of the Processor.\n"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "pointOfSaleInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "terminalId": {
                                                                "type": "string",
                                                                "maxLength": 8,
                                                                "description": "Identifier for the terminal at your retail location. You can define this value yourself, but consult the\nprocessor for requirements.\n\nFor Payouts: This field is applicable for CtV.\n"
                                                            },
                                                            "terminalSerialNumber": {
                                                                "type": "string",
                                                                "maxLength": 32,
                                                                "description": "Terminal serial number assigned by the hardware manufacturer. This value is provided by the client software that\nis installed on the POS terminal.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                            },
                                                            "deviceId": {
                                                                "type": "string",
                                                                "description": "The description for this field is not available."
                                                            },
                                                            "partner": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "originalTransactionId": {
                                                                        "type": "string",
                                                                        "maxLength": 32,
                                                                        "description": "Value that links the previous transaction to the current follow-on request. This value is assigned by the client\nsoftware that is installed on the POS terminal, which makes it available to the terminal\u2019s software and to\nCyberSource. Therefore, you can use this value to reconcile transactions between CyberSource and the terminal\u2019s\nsoftware.\n\nCyberSource does not forward this value to the processor. Instead, the value is forwarded to the CyberSource\nreporting functionality.\n\nThis field is supported only on American Express Direct, FDC Nashville Global, and SIX.\n"
                                                                    },
                                                                    "developerId": {
                                                                        "type": "string",
                                                                        "maxLength": 8,
                                                                        "description": "Identifier for the developer that helped integrate a partner solution to CyberSource.\n\nSend this value in all requests that are sent through the partner solutions built by that developer.\nCyberSource assigns the ID to the developer.\n\nNote When you see a developer ID of 999 in reports, the developer ID that was submitted is incorrect.\n"
                                                                    },
                                                                    "solutionId": {
                                                                        "type": "string",
                                                                        "maxLength": 8,
                                                                        "description": "Identifier for the partner that is integrated to CyberSource.\n\nSend this value in all requests that are sent through the partner solution. CyberSource assigns the ID to the partner.\n\nNote When you see a partner ID of 999 in reports, the partner ID that was submitted is incorrect.\n"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "riskInformation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "providers": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "fingerprint": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "true_ipaddress": {
                                                                                "type": "string",
                                                                                "maxLength": 255,
                                                                                "description": "The description for this field is not available."
                                                                            },
                                                                            "hash": {
                                                                                "type": "string",
                                                                                "maxLength": 255,
                                                                                "description": "The description for this field is not available."
                                                                            },
                                                                            "smartId": {
                                                                                "type": "string",
                                                                                "maxLength": 255,
                                                                                "description": "The description for this field is not available."
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "_links": {
                                                        "type": "object",
                                                        "properties": {
                                                            "transactionDetail": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "href": {
                                                                        "type": "string",
                                                                        "description": "This is the endpoint of the resource that was created by the successful request."
                                                                    },
                                                                    "method": {
                                                                        "type": "string",
                                                                        "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "self": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string",
                                                    "description": "This is the endpoint of the resource that was created by the successful request."
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "description": "`method` refers to the HTTP method that you can send to the `self` endpoint to retrieve details of the resource."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "searchId": "87e1e4bd-cac2-49b1-919a-4d5e29a2e55d",
                                "save": "false",
                                "name": "Search By Code",
                                "timezone": "America/Chicago",
                                "query": "clientReferenceInformation.code:12345 AND submitTimeUtc:[NOW/DAY-7DAYS TO NOW/DAY+1DAY}",
                                "offset": 0,
                                "limit": 2000,
                                "sort": "id:asc, submitTimeUtc:asc",
                                "count": 22,
                                "totalCount": 22,
                                "submitTimeUtc": "2018-09-18T16:59:28Z",
                                "_embedded": {
                                    "transactionSummaries": [
                                        {
                                            "id": "5217848115816817001541",
                                            "submitTimeUtc": "2018-03-23T06:00:11Z",
                                            "merchantId": "sandeep_wf",
                                            "applicationInformation": {
                                                "status": "TRANSMITTED",
                                                "reasonCode": "123",
                                                "rCode": "1",
                                                "rFlag": "SOK",
                                                "applications": [
                                                    {
                                                        "name": "ics_service_fee_calculate",
                                                        "status": "TRANSMITTED",
                                                        "reasonCode": "123",
                                                        "rCode": "1",
                                                        "rFlag": "SOK",
                                                        "reconciliationId": "55557",
                                                        "rMessage": "Request was processed successfully",
                                                        "returnCode": "1040000"
                                                    }
                                                ]
                                            },
                                            "buyerInformation": {
                                                "merchantCustomerId": "123456"
                                            },
                                            "clientReferenceInformation": {
                                                "code": "12345",
                                                "applicationName": "Service Fee Request",
                                                "applicationUser": "sandeep_wf"
                                            },
                                            "consumerAuthenticationInformation": {
                                                "xid": "12345678",
                                                "transactionId": "00152259513040478521"
                                            },
                                            "deviceInformation": {
                                                "ipAddress": "1.10.10.10"
                                            },
                                            "fraudMarkingInformation": {
                                                "reason": "fraud txn"
                                            },
                                            "merchantDefinedInformation": [
                                                {
                                                    "key": "abc",
                                                    "value": "xyz"
                                                }
                                            ],
                                            "merchantInformation": {
                                                "resellerId": "wfbmcp"
                                            },
                                            "orderInformation": {
                                                "billTo": {
                                                    "firstName": "Test",
                                                    "lastName": "TSS",
                                                    "email": "null@cybersource.com",
                                                    "country": "US",
                                                    "phoneNumber": "5120000000"
                                                },
                                                "shipTo": {
                                                    "firstName": "Test",
                                                    "lastName": "TSS",
                                                    "address1": "201S.DivisionSt._1",
                                                    "country": "US",
                                                    "phoneNumber": "5120000000"
                                                },
                                                "amountDetails": {
                                                    "totalAmount": "100.00",
                                                    "currency": "USD"
                                                }
                                            },
                                            "paymentInformation": {
                                                "paymentType": {
                                                    "type": "CARD",
                                                    "method": "MC"
                                                },
                                                "customer": {
                                                    "customerId": "12345"
                                                },
                                                "card": {
                                                    "suffix": "1111",
                                                    "prefix": "123456",
                                                    "type": "credit card"
                                                }
                                            },
                                            "processingInformation": {
                                                "paymentSolution": "xyz",
                                                "businessApplicationId": "12345"
                                            },
                                            "processorInformation": {
                                                "processor": {
                                                    "name": "FirstData"
                                                }
                                            },
                                            "pointOfSaleInformation": {
                                                "terminalId": "1",
                                                "terminalSerialNumber": "123111123",
                                                "deviceId": "asfaf12312313",
                                                "partner": {
                                                    "originalTransactionId": "131231414414"
                                                }
                                            },
                                            "riskInformation": {
                                                "providers": {
                                                    "fingerprint": {
                                                        "true_ipaddress": "1.101.102.112",
                                                        "hash": "tuWmt8Ubw0EAybBF3wrZcEqIcZsLr8YPldTQDUxAg2k=",
                                                        "smart_id": "23442fdadfa"
                                                    }
                                                }
                                            },
                                            "_links": {
                                                "transactionDetail": {
                                                    "href": "https://sl73paysvapq002.visa.com:2031/payment/tss/v2/transactions/5217848115816817001541",
                                                    "method": "GET"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "_links": {
                                    "self": {
                                        "href": "https://sl73paysvapq002.visa.com:2031/payment/tss/v2/searches/87e1e4bd-cac2-49b1-919a-4d5e29a2e55d",
                                        "method": "GET"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource not found in the system."
                    },
                    "500": {
                        "description": "Unexpected server error."
                    }
                }
            }
        },
        "/ums/v1/users": {
            "get": {
                "summary": "Get user based on organization Id, username, permission and role",
                "description": "This endpoint is to get all the user information depending on the filter criteria passed in the query.",
                "tags": [
                    "UserManagement"
                ],
                "operationId": "getUsers",
                "x-devcenter-metaData": {
                    "categoryTag": "User_Management"
                },
                "x-queryParameterDefaults": {
                    "organizationId": "testrest",
                    "permissionId": "CustomerProfileViewPermission"
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "organizationId",
                        "type": "string",
                        "description": "This is the orgId of the organization which the user belongs to."
                    },
                    {
                        "in": "query",
                        "name": "userName",
                        "type": "string",
                        "description": "User ID of the user you want to get details on."
                    },
                    {
                        "in": "query",
                        "name": "permissionId",
                        "type": "string",
                        "description": "permission that you are trying to search user on."
                    },
                    {
                        "in": "query",
                        "name": "roleId",
                        "type": "string",
                        "description": "role of the user you are trying to search on."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "title": "umsV1UsersGet200Response",
                            "properties": {
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "accountInformation": {
                                                "type": "object",
                                                "properties": {
                                                    "userName": {
                                                        "type": "string"
                                                    },
                                                    "roleId": {
                                                        "type": "string"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "description": "array of permissions"
                                                        }
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "active",
                                                            "inactive",
                                                            "locked",
                                                            "disabled",
                                                            "forgotpassword",
                                                            "deleted"
                                                        ]
                                                    },
                                                    "createdTime": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "lastAccessTime": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "languagePreference": {
                                                        "type": "string"
                                                    },
                                                    "timezone": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "organizationInformation": {
                                                "type": "object",
                                                "properties": {
                                                    "organizationId": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "contactInformation": {
                                                "type": "object",
                                                "properties": {
                                                    "email": {
                                                        "type": "string"
                                                    },
                                                    "phoneNumber": {
                                                        "type": "string"
                                                    },
                                                    "firstName": {
                                                        "type": "string"
                                                    },
                                                    "lastName": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "customFields": {
                                                "additionalProperties": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "users": [
                                    {
                                        "accountInformation": {
                                            "userName": "auto_nonmember",
                                            "roleId": "admin",
                                            "permissions": [
                                                "ReportViewPermission",
                                                "ReportGeneratePermission"
                                            ],
                                            "status": "active",
                                            "createdTime": "2018-06-14T19:45:52.093Z",
                                            "lastAccessTime": "2018-06-14T19:45:52.093Z",
                                            "languagePreference": "en-US",
                                            "timezone": "America/Los_Angeles"
                                        },
                                        "organizationInformation": {
                                            "organizationId": "auto_nonmember"
                                        },
                                        "contactInformation": {
                                            "email": "auto_nonmember@exchange.com",
                                            "phoneNumber": "4445551234",
                                            "firstName": "Zeta",
                                            "lastName": "DMH"
                                        },
                                        "customFields": {
                                            "employeeId": "12344",
                                            "employeeName": "John Doe",
                                            "employeeDesignation": "abc",
                                            "zone": "NA",
                                            "department": "map"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "type": "object",
                            "title": "umsV1UsersGet400Response",
                            "properties": {
                                "submitTimeUtc": {
                                    "type": "string",
                                    "description": "Time of request in UTC. Format: `YYYY-MM-DDThh:mm:ssZ`\nExample `2016-08-11T22:47:57Z` equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The `T` separates the date and the\ntime. The `Z` indicates UTC.\n"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status of the submitted transaction.\n\nPossible values:\n - INVALID_REQUEST\n",
                                    "enum": [
                                        "INVALID_REQUEST"
                                    ]
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "The reason of the status.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n - DUPLICATE_REQUEST\n - INVALID_CARD\n - INVALID_MERCHANT_CONFIGURATION\n - INVALID_AMOUNT\n - CAPTURE_ALREADY_VOIDED\n - ACCOUNT_NOT_ALLOWED_CREDIT\n",
                                    "enum": [
                                        "MISSING_FIELD",
                                        "INVALID_DATA",
                                        "DUPLICATE_REQUEST",
                                        "INVALID_CARD",
                                        "INVALID_MERCHANT_CONFIGURATION",
                                        "CAPTURE_ALREADY_VOIDED",
                                        "ACCOUNT_NOT_ALLOWED_CREDIT"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The detail message related to the status and reason listed above."
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "This is the flattened JSON object field name/path that is either missing or invalid."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Possible reasons for the error.\n\nPossible values:\n - MISSING_FIELD\n - INVALID_DATA\n",
                                                "enum": [
                                                    "MISSING_FIELD",
                                                    "INVALID_DATA"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error."
                    }
                }
            }
        }
    },
    "definitions": {}
}